ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 109 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 110 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 125 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 4


  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB1:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 141 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 150 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 151:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 151 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE1:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 5


  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 289:Generated_Source\PSoC4/CyLib.c ****     }
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c **** 
 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 336:Generated_Source\PSoC4/CyLib.c ****             
 337:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 338:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 339:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 342:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 345:Generated_Source\PSoC4/CyLib.c ****             {
 346:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 347:Generated_Source\PSoC4/CyLib.c ****                 {
 348:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 349:Generated_Source\PSoC4/CyLib.c ****                     break;
 350:Generated_Source\PSoC4/CyLib.c ****                 }
 351:Generated_Source\PSoC4/CyLib.c ****             }
 352:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 353:Generated_Source\PSoC4/CyLib.c ****         
 354:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 355:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 356:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 357:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 359:Generated_Source\PSoC4/CyLib.c **** 
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****            
 362:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 363:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 364:Generated_Source\PSoC4/CyLib.c ****             
 365:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 366:Generated_Source\PSoC4/CyLib.c ****             {
 367:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 368:Generated_Source\PSoC4/CyLib.c ****                 
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 370:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 372:Generated_Source\PSoC4/CyLib.c ****                 
 373:Generated_Source\PSoC4/CyLib.c ****             }
 374:Generated_Source\PSoC4/CyLib.c ****             else
 375:Generated_Source\PSoC4/CyLib.c ****             {
 376:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 377:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             }
 380:Generated_Source\PSoC4/CyLib.c **** 
 381:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 382:Generated_Source\PSoC4/CyLib.c ****             {
 383:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 384:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 385:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 386:Generated_Source\PSoC4/CyLib.c ****             }
 387:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 388:Generated_Source\PSoC4/CyLib.c ****             {
 389:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 390:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 391:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             else
 394:Generated_Source\PSoC4/CyLib.c ****             {
 395:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 396:Generated_Source\PSoC4/CyLib.c ****             }
 397:Generated_Source\PSoC4/CyLib.c ****             
 398:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 399:Generated_Source\PSoC4/CyLib.c **** 
 400:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 401:Generated_Source\PSoC4/CyLib.c ****     }
 402:Generated_Source\PSoC4/CyLib.c **** 
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 406:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/CyLib.c ****     *
 408:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 409:Generated_Source\PSoC4/CyLib.c ****     *
 410:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 411:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 412:Generated_Source\PSoC4/CyLib.c ****     *
 413:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 414:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 415:Generated_Source\PSoC4/CyLib.c ****     *
 416:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 418:Generated_Source\PSoC4/CyLib.c ****     {
 419:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 420:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 421:Generated_Source\PSoC4/CyLib.c ****             
 422:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 423:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 424:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 427:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 430:Generated_Source\PSoC4/CyLib.c ****             {
 431:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 432:Generated_Source\PSoC4/CyLib.c ****                 {
 433:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 434:Generated_Source\PSoC4/CyLib.c ****                     break;
 435:Generated_Source\PSoC4/CyLib.c ****                 }
 436:Generated_Source\PSoC4/CyLib.c ****             }           
 437:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 438:Generated_Source\PSoC4/CyLib.c ****         
 439:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 440:Generated_Source\PSoC4/CyLib.c **** 
 441:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 442:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 443:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 444:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 445:Generated_Source\PSoC4/CyLib.c **** 
 446:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 447:Generated_Source\PSoC4/CyLib.c ****             {
 448:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 449:Generated_Source\PSoC4/CyLib.c ****             }
 450:Generated_Source\PSoC4/CyLib.c ****             
 451:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 452:Generated_Source\PSoC4/CyLib.c ****             
 453:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 454:Generated_Source\PSoC4/CyLib.c ****     }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 459:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c ****     *
 461:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 462:Generated_Source\PSoC4/CyLib.c ****     *
 463:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 464:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 465:Generated_Source\PSoC4/CyLib.c ****     *
 466:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 467:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 468:Generated_Source\PSoC4/CyLib.c ****     *
 469:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 470:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 471:Generated_Source\PSoC4/CyLib.c ****     {
 472:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 473:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 474:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 475:Generated_Source\PSoC4/CyLib.c ****     }
 476:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 477:Generated_Source\PSoC4/CyLib.c **** 
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 482:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c **** *
 486:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 487:Generated_Source\PSoC4/CyLib.c **** *
 488:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 489:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 490:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 491:Generated_Source\PSoC4/CyLib.c **** *
 492:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 493:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 494:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 495:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 496:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 497:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 498:Generated_Source\PSoC4/CyLib.c **** *
 499:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 500:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 501:Generated_Source\PSoC4/CyLib.c **** *
 502:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 503:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 504:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 505:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 506:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 507:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 508:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 509:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 510:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 513:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 514:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 514 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 515:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 516:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 517:Generated_Source\PSoC4/CyLib.c ****     
 518:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 519:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 520:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 522 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 525:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 526:Generated_Source\PSoC4/CyLib.c ****     {
 527:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 528:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 12


 529:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 530:Generated_Source\PSoC4/CyLib.c ****         
 531:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 533:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 534:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 535:Generated_Source\PSoC4/CyLib.c ****         
 536:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 537:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 538:Generated_Source\PSoC4/CyLib.c ****         
 539:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 540:Generated_Source\PSoC4/CyLib.c ****         {
 541:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 543:Generated_Source\PSoC4/CyLib.c ****         }
 544:Generated_Source\PSoC4/CyLib.c ****         
 545:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 546:Generated_Source\PSoC4/CyLib.c ****     }
 547:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 549 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 550:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 551:Generated_Source\PSoC4/CyLib.c **** 
 552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 553:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 554:Generated_Source\PSoC4/CyLib.c ****     {
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 556:Generated_Source\PSoC4/CyLib.c ****     }
 557:Generated_Source\PSoC4/CyLib.c ****     else
 558:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 559:Generated_Source\PSoC4/CyLib.c ****     {
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 560 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 561:Generated_Source\PSoC4/CyLib.c ****     }   
 562:Generated_Source\PSoC4/CyLib.c ****     
 563:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 563 0
 112 0014 1460     		str	r4, [r2]
 564:Generated_Source\PSoC4/CyLib.c ****     
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 565 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 566:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 566 0
 117              		@ sp needed
 118              	.LVL6:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 13


 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB3:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 571:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 574:Generated_Source\PSoC4/CyLib.c **** *
 575:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 577:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 578:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 581:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 582:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 586:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 586 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 587:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 588:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 588 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 589:Generated_Source\PSoC4/CyLib.c ****         {
 590:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 590 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 14


 152 0012 0AE0     		b	.L10
 153              	.L11:
 591:Generated_Source\PSoC4/CyLib.c ****         }
 592:Generated_Source\PSoC4/CyLib.c ****         else
 593:Generated_Source\PSoC4/CyLib.c ****         {
 594:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 594 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 595:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 596:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 596 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 597:Generated_Source\PSoC4/CyLib.c ****         }
 598:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 599:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 600:Generated_Source\PSoC4/CyLib.c ****         {
 601:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 602:Generated_Source\PSoC4/CyLib.c ****         }
 603:Generated_Source\PSoC4/CyLib.c ****         else
 604:Generated_Source\PSoC4/CyLib.c ****         {
 605:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 606:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 607:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 608:Generated_Source\PSoC4/CyLib.c ****         }
 609:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 610:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 610 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB4:
 611:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 15


 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 616:Generated_Source\PSoC4/CyLib.c **** *
 617:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 618:Generated_Source\PSoC4/CyLib.c **** *
 619:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 623:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 623 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 624:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 625:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 626:Generated_Source\PSoC4/CyLib.c **** 
 627:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 627 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 630:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 631:Generated_Source\PSoC4/CyLib.c ****     {
 632:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 633:Generated_Source\PSoC4/CyLib.c ****     }
 634:Generated_Source\PSoC4/CyLib.c ****     else
 635:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 636:Generated_Source\PSoC4/CyLib.c ****     {
 637:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 637 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 640:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 641:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 642:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 643:Generated_Source\PSoC4/CyLib.c ****         
 644:Generated_Source\PSoC4/CyLib.c ****     }
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 646 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 16


 649:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 649 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE4:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB5:
 650:Generated_Source\PSoC4/CyLib.c **** 
 651:Generated_Source\PSoC4/CyLib.c **** 
 652:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 653:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 654:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 657:Generated_Source\PSoC4/CyLib.c **** *
 658:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 659:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 660:Generated_Source\PSoC4/CyLib.c **** *
 661:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 662:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 663:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 664:Generated_Source\PSoC4/CyLib.c **** *
 665:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 666:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 667:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 668:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 669:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 670:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 671:Generated_Source\PSoC4/CyLib.c **** *
 672:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 673:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 674:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 675:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 676:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 677:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 678:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 679:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 680:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 683:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 684:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 684 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 17


 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 685:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 686:Generated_Source\PSoC4/CyLib.c **** 
 687:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 687 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 689 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 691:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 691 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 690 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 689:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 689 0
 257 001e 2360     		str	r3, [r4]
 692:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 694 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 695:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 695 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysLvdDisable,"ax",%progbits
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 18


 273              		.align	2
 274              		.global	CySysLvdDisable
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysLvdDisable, %function
 278              	CySysLvdDisable:
 279              	.LFB8:
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 701:Generated_Source\PSoC4/CyLib.c **** *
 702:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 703:Generated_Source\PSoC4/CyLib.c **** *
 704:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 705:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 706:Generated_Source\PSoC4/CyLib.c **** *
 707:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 708:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 709:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 712:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 713:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 714:Generated_Source\PSoC4/CyLib.c **** *
 715:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 716:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 717:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 718:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 719:Generated_Source\PSoC4/CyLib.c **** *
 720:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 721:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 722:Generated_Source\PSoC4/CyLib.c **** *
 723:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 724:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 725:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 726:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 727:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 728:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 731:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 732:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 735:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 736:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 737:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 738:Generated_Source\PSoC4/CyLib.c **** *
 739:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 741:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 742:Generated_Source\PSoC4/CyLib.c ****     {
 743:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 744:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 745:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c ****         #else
 747:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 748:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 749:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 750:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 751:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 754:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 755:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 756:Generated_Source\PSoC4/CyLib.c **** 
 757:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 758:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 759:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 760:Generated_Source\PSoC4/CyLib.c **** 
 761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c **** 
 764:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 765:Generated_Source\PSoC4/CyLib.c **** 
 766:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 767:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 768:Generated_Source\PSoC4/CyLib.c ****             {
 769:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 770:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 771:Generated_Source\PSoC4/CyLib.c ****             }
 772:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** 
 775:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 776:Generated_Source\PSoC4/CyLib.c **** 
 777:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 778:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 779:Generated_Source\PSoC4/CyLib.c ****                 {
 780:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 781:Generated_Source\PSoC4/CyLib.c **** 
 782:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 783:Generated_Source\PSoC4/CyLib.c ****                 {
 784:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 785:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 786:Generated_Source\PSoC4/CyLib.c ****                 }
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 789:Generated_Source\PSoC4/CyLib.c ****                 }
 790:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c **** 
 795:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 796:Generated_Source\PSoC4/CyLib.c **** 
 797:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 798:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 799:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 800:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 801:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 802:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 804:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 805:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 806:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 809:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 810:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 815:Generated_Source\PSoC4/CyLib.c ****         {
 816:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 817:Generated_Source\PSoC4/CyLib.c ****             {
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 819:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 822:Generated_Source\PSoC4/CyLib.c ****             {
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 824:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             }
 826:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 827:Generated_Source\PSoC4/CyLib.c ****             {
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 829:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 830:Generated_Source\PSoC4/CyLib.c ****             }
 831:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 832:Generated_Source\PSoC4/CyLib.c ****             {
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 834:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 835:Generated_Source\PSoC4/CyLib.c ****             }
 836:Generated_Source\PSoC4/CyLib.c ****             else
 837:Generated_Source\PSoC4/CyLib.c ****             {
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 839:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 840:Generated_Source\PSoC4/CyLib.c ****             }
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 843:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c **** 
 846:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 847:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 848:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 849:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 850:Generated_Source\PSoC4/CyLib.c ****             *
 851:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 852:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 853:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 854:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 855:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 856:Generated_Source\PSoC4/CyLib.c ****             {
 857:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 858:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 859:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 864:Generated_Source\PSoC4/CyLib.c ****             }
 865:Generated_Source\PSoC4/CyLib.c ****             else
 866:Generated_Source\PSoC4/CyLib.c ****             {
 867:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 868:Generated_Source\PSoC4/CyLib.c ****             }
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 872:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 873:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 874:Generated_Source\PSoC4/CyLib.c ****             *
 875:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 876:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 877:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 878:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 879:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 880:Generated_Source\PSoC4/CyLib.c ****             {
 881:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 882:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 883:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 884:Generated_Source\PSoC4/CyLib.c ****             }
 885:Generated_Source\PSoC4/CyLib.c **** 
 886:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 887:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 889:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 890:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 891:Generated_Source\PSoC4/CyLib.c **** 
 892:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 895:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 896:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 897:Generated_Source\PSoC4/CyLib.c ****             }
 898:Generated_Source\PSoC4/CyLib.c ****         }
 899:Generated_Source\PSoC4/CyLib.c ****         else
 900:Generated_Source\PSoC4/CyLib.c ****         {
 901:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 902:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 903:Generated_Source\PSoC4/CyLib.c ****         }
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 908:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 909:Generated_Source\PSoC4/CyLib.c ****             {
 910:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 913:Generated_Source\PSoC4/CyLib.c **** 
 914:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 915:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 916:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 918:Generated_Source\PSoC4/CyLib.c ****             }
 919:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 922:Generated_Source\PSoC4/CyLib.c ****     }
 923:Generated_Source\PSoC4/CyLib.c **** 
 924:Generated_Source\PSoC4/CyLib.c **** #else
 925:Generated_Source\PSoC4/CyLib.c **** 
 926:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 927:Generated_Source\PSoC4/CyLib.c ****     {
 928:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 929:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 932:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 933:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 937:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 940:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 941:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 942:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 943:Generated_Source\PSoC4/CyLib.c ****         #else
 944:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 945:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 946:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 947:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 948:Generated_Source\PSoC4/CyLib.c ****         {
 949:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 952:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 953:Generated_Source\PSoC4/CyLib.c ****                 {
 954:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 955:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 956:Generated_Source\PSoC4/CyLib.c ****                 }
 957:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 958:Generated_Source\PSoC4/CyLib.c **** 
 959:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 960:Generated_Source\PSoC4/CyLib.c **** 
 961:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 962:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 963:Generated_Source\PSoC4/CyLib.c ****                     {
 964:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 967:Generated_Source\PSoC4/CyLib.c ****                     {
 968:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 969:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 970:Generated_Source\PSoC4/CyLib.c ****                     }
 971:Generated_Source\PSoC4/CyLib.c **** 
 972:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 973:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 975:Generated_Source\PSoC4/CyLib.c **** 
 976:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c **** 
 979:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 980:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 984:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 985:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 988:Generated_Source\PSoC4/CyLib.c ****                 }
 989:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 990:Generated_Source\PSoC4/CyLib.c ****                 {
 991:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 992:Generated_Source\PSoC4/CyLib.c ****                 }
 993:Generated_Source\PSoC4/CyLib.c ****                 else
 994:Generated_Source\PSoC4/CyLib.c ****                 {
 995:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 996:Generated_Source\PSoC4/CyLib.c ****                 }
 997:Generated_Source\PSoC4/CyLib.c ****             #else
 998:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 999:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1000:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1003:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1007:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1012:Generated_Source\PSoC4/CyLib.c ****             {
1013:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1014:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1015:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1018:Generated_Source\PSoC4/CyLib.c **** 
1019:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1020:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1021:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1022:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1023:Generated_Source\PSoC4/CyLib.c ****             }
1024:Generated_Source\PSoC4/CyLib.c **** 
1025:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1026:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1027:Generated_Source\PSoC4/CyLib.c ****                 {
1028:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1029:Generated_Source\PSoC4/CyLib.c ****                 }
1030:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****         
1032:Generated_Source\PSoC4/CyLib.c ****         
1033:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1034:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1035:Generated_Source\PSoC4/CyLib.c ****                 {
1036:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1037:Generated_Source\PSoC4/CyLib.c ****                 }
1038:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1039:Generated_Source\PSoC4/CyLib.c **** 
1040:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1041:Generated_Source\PSoC4/CyLib.c ****         }
1042:Generated_Source\PSoC4/CyLib.c ****         else
1043:Generated_Source\PSoC4/CyLib.c ****         {
1044:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1045:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1046:Generated_Source\PSoC4/CyLib.c ****         }
1047:Generated_Source\PSoC4/CyLib.c ****     }
1048:Generated_Source\PSoC4/CyLib.c **** 
1049:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1053:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1054:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1055:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1056:Generated_Source\PSoC4/CyLib.c ****     *
1057:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1058:Generated_Source\PSoC4/CyLib.c ****     *
1059:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1060:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1061:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1062:Generated_Source\PSoC4/CyLib.c ****     *
1063:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1064:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1065:Generated_Source\PSoC4/CyLib.c ****     *
1066:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1067:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1068:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1069:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1070:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1071:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1072:Generated_Source\PSoC4/CyLib.c ****     *
1073:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1074:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1075:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1076:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1077:Generated_Source\PSoC4/CyLib.c ****     *
1078:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1079:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1080:Generated_Source\PSoC4/CyLib.c ****     {
1081:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1082:Generated_Source\PSoC4/CyLib.c **** 
1083:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1086:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1087:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c **** 
1089:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1090:Generated_Source\PSoC4/CyLib.c ****     }
1091:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c **** 
1094:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1095:Generated_Source\PSoC4/CyLib.c **** 
1096:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1097:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1098:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1101:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1102:Generated_Source\PSoC4/CyLib.c ****     *
1103:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1104:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1105:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1106:Generated_Source\PSoC4/CyLib.c ****     * called.
1107:Generated_Source\PSoC4/CyLib.c ****     *
1108:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1109:Generated_Source\PSoC4/CyLib.c ****     *
1110:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1113:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1114:Generated_Source\PSoC4/CyLib.c ****     *
1115:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1116:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1117:Generated_Source\PSoC4/CyLib.c ****     *
1118:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1119:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1120:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1121:Generated_Source\PSoC4/CyLib.c ****     *
1122:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1123:Generated_Source\PSoC4/CyLib.c ****     *
1124:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1125:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1126:Generated_Source\PSoC4/CyLib.c ****     {
1127:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1128:Generated_Source\PSoC4/CyLib.c **** 
1129:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1130:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1132:Generated_Source\PSoC4/CyLib.c **** 
1133:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1135:Generated_Source\PSoC4/CyLib.c **** 
1136:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1137:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1138:Generated_Source\PSoC4/CyLib.c ****         
1139:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1140:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1141:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1142:Generated_Source\PSoC4/CyLib.c ****             
1143:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1144:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1146:Generated_Source\PSoC4/CyLib.c ****             }
1147:Generated_Source\PSoC4/CyLib.c ****             else
1148:Generated_Source\PSoC4/CyLib.c ****             {
1149:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1150:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1151:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1152:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1153:Generated_Source\PSoC4/CyLib.c ****             
1154:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1155:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1156:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1157:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1158:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1159:Generated_Source\PSoC4/CyLib.c ****                 
1160:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1161:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1162:Generated_Source\PSoC4/CyLib.c ****                 {
1163:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1164:Generated_Source\PSoC4/CyLib.c ****                 }
1165:Generated_Source\PSoC4/CyLib.c ****                 
1166:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1167:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1168:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1169:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1170:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1173:Generated_Source\PSoC4/CyLib.c ****                 {
1174:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1175:Generated_Source\PSoC4/CyLib.c ****                 }
1176:Generated_Source\PSoC4/CyLib.c **** 
1177:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1178:Generated_Source\PSoC4/CyLib.c ****                 {
1179:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1180:Generated_Source\PSoC4/CyLib.c ****                 }
1181:Generated_Source\PSoC4/CyLib.c ****                 
1182:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1183:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1188:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1189:Generated_Source\PSoC4/CyLib.c ****                 #else
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1191:Generated_Source\PSoC4/CyLib.c ****                 #endif
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1195:Generated_Source\PSoC4/CyLib.c ****                 {
1196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1197:Generated_Source\PSoC4/CyLib.c ****                 }
1198:Generated_Source\PSoC4/CyLib.c ****                 
1199:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1200:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1201:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c ****                                             
1203:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c **** 
1208:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1209:Generated_Source\PSoC4/CyLib.c ****                 
1210:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1213:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1214:Generated_Source\PSoC4/CyLib.c ****                 
1215:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1216:Generated_Source\PSoC4/CyLib.c ****                 {
1217:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1218:Generated_Source\PSoC4/CyLib.c ****                 }
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1222:Generated_Source\PSoC4/CyLib.c ****                 
1223:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1224:Generated_Source\PSoC4/CyLib.c ****                 {
1225:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1226:Generated_Source\PSoC4/CyLib.c ****                 }
1227:Generated_Source\PSoC4/CyLib.c ****                 
1228:Generated_Source\PSoC4/CyLib.c ****             }
1229:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1230:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1231:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1232:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1233:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1236:Generated_Source\PSoC4/CyLib.c ****         {
1237:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1238:Generated_Source\PSoC4/CyLib.c **** 
1239:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1240:Generated_Source\PSoC4/CyLib.c ****             {
1241:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1242:Generated_Source\PSoC4/CyLib.c **** 
1243:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1244:Generated_Source\PSoC4/CyLib.c ****                 {
1245:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1246:Generated_Source\PSoC4/CyLib.c ****                     break;
1247:Generated_Source\PSoC4/CyLib.c ****                 }
1248:Generated_Source\PSoC4/CyLib.c ****             }
1249:Generated_Source\PSoC4/CyLib.c **** 
1250:Generated_Source\PSoC4/CyLib.c ****         }
1251:Generated_Source\PSoC4/CyLib.c **** 
1252:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1253:Generated_Source\PSoC4/CyLib.c ****     }
1254:Generated_Source\PSoC4/CyLib.c **** 
1255:Generated_Source\PSoC4/CyLib.c **** 
1256:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1257:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1258:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****     *
1260:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1261:Generated_Source\PSoC4/CyLib.c ****     *
1262:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1263:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1264:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1265:Generated_Source\PSoC4/CyLib.c ****     *
1266:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1267:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1268:Generated_Source\PSoC4/CyLib.c ****     {
1269:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1270:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1271:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1274:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1275:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1277:Generated_Source\PSoC4/CyLib.c ****         #else
1278:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1279:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1280:Generated_Source\PSoC4/CyLib.c ****     }
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c **** 
1283:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1284:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1285:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1286:Generated_Source\PSoC4/CyLib.c ****     *
1287:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1288:Generated_Source\PSoC4/CyLib.c ****     *
1289:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1290:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1293:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1294:Generated_Source\PSoC4/CyLib.c ****     *
1295:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1296:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1297:Generated_Source\PSoC4/CyLib.c ****     *
1298:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1299:Generated_Source\PSoC4/CyLib.c ****     *
1300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1302:Generated_Source\PSoC4/CyLib.c ****     {
1303:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1304:Generated_Source\PSoC4/CyLib.c **** 
1305:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1306:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1307:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1308:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1309:Generated_Source\PSoC4/CyLib.c **** 
1310:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1311:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1312:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1313:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1314:Generated_Source\PSoC4/CyLib.c ****         #else
1315:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 29


1316:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1319:Generated_Source\PSoC4/CyLib.c ****     }
1320:Generated_Source\PSoC4/CyLib.c **** 
1321:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1322:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1323:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1324:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLib.c ****         *
1326:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1327:Generated_Source\PSoC4/CyLib.c ****         *
1328:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1329:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1330:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1331:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1332:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1333:Generated_Source\PSoC4/CyLib.c ****         *
1334:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1335:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1336:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1337:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1338:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1339:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1340:Generated_Source\PSoC4/CyLib.c ****         *
1341:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1342:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1343:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1344:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1345:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1346:Generated_Source\PSoC4/CyLib.c ****         *
1347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1349:Generated_Source\PSoC4/CyLib.c ****         {
1350:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1353:Generated_Source\PSoC4/CyLib.c ****             {
1354:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1355:Generated_Source\PSoC4/CyLib.c **** 
1356:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1357:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1360:Generated_Source\PSoC4/CyLib.c ****             }
1361:Generated_Source\PSoC4/CyLib.c ****             else
1362:Generated_Source\PSoC4/CyLib.c ****             {
1363:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1364:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1365:Generated_Source\PSoC4/CyLib.c ****             }
1366:Generated_Source\PSoC4/CyLib.c ****         }
1367:Generated_Source\PSoC4/CyLib.c **** 
1368:Generated_Source\PSoC4/CyLib.c ****     #else
1369:Generated_Source\PSoC4/CyLib.c **** 
1370:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1371:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1372:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 30


1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1375:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1376:Generated_Source\PSoC4/CyLib.c ****         *
1377:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1378:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1381:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1382:Generated_Source\PSoC4/CyLib.c ****         *
1383:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1384:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1385:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1386:Generated_Source\PSoC4/CyLib.c ****         *
1387:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1388:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1389:Generated_Source\PSoC4/CyLib.c ****         *
1390:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1391:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1392:Generated_Source\PSoC4/CyLib.c ****         *
1393:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1394:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1395:Generated_Source\PSoC4/CyLib.c ****         *
1396:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1397:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1398:Generated_Source\PSoC4/CyLib.c ****         *
1399:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1400:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1401:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1402:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1403:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1406:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1407:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1408:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1412:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1413:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1414:Generated_Source\PSoC4/CyLib.c ****         *
1415:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1416:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1417:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1418:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1419:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1428:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1429:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 31


1430:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1437:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1438:Generated_Source\PSoC4/CyLib.c ****         {
1439:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1440:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1441:Generated_Source\PSoC4/CyLib.c **** 
1442:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1445:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1446:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1447:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1450:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1451:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1452:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1453:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1454:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1455:Generated_Source\PSoC4/CyLib.c **** 
1456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1457:Generated_Source\PSoC4/CyLib.c **** 
1458:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1459:Generated_Source\PSoC4/CyLib.c ****         }
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c **** 
1462:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1463:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1464:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1465:Generated_Source\PSoC4/CyLib.c ****         *
1466:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1467:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1468:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1471:Generated_Source\PSoC4/CyLib.c ****         *
1472:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1473:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1474:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1475:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1476:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1477:Generated_Source\PSoC4/CyLib.c ****         *
1478:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1479:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1480:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1481:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1482:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1483:Generated_Source\PSoC4/CyLib.c ****         *
1484:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1485:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1486:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 32


1487:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1488:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1489:Generated_Source\PSoC4/CyLib.c ****         {
1490:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1493:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1494:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1495:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1496:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1497:Generated_Source\PSoC4/CyLib.c **** 
1498:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c **** 
1501:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1502:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1503:Generated_Source\PSoC4/CyLib.c ****             {
1504:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1505:Generated_Source\PSoC4/CyLib.c ****             }
1506:Generated_Source\PSoC4/CyLib.c ****             else
1507:Generated_Source\PSoC4/CyLib.c ****             {
1508:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1509:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1512:Generated_Source\PSoC4/CyLib.c ****                 {
1513:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1514:Generated_Source\PSoC4/CyLib.c ****                 }
1515:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1516:Generated_Source\PSoC4/CyLib.c ****                 {
1517:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1518:Generated_Source\PSoC4/CyLib.c ****                 }
1519:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1520:Generated_Source\PSoC4/CyLib.c ****                 {
1521:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1522:Generated_Source\PSoC4/CyLib.c ****                 }
1523:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1524:Generated_Source\PSoC4/CyLib.c ****                 {
1525:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1526:Generated_Source\PSoC4/CyLib.c ****                 }
1527:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1528:Generated_Source\PSoC4/CyLib.c ****                 {
1529:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1530:Generated_Source\PSoC4/CyLib.c ****                 }
1531:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1532:Generated_Source\PSoC4/CyLib.c ****                 {
1533:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1534:Generated_Source\PSoC4/CyLib.c ****                 }
1535:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1536:Generated_Source\PSoC4/CyLib.c ****                 {
1537:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1538:Generated_Source\PSoC4/CyLib.c ****                 }
1539:Generated_Source\PSoC4/CyLib.c ****                 else
1540:Generated_Source\PSoC4/CyLib.c ****                 {
1541:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1542:Generated_Source\PSoC4/CyLib.c ****                 }
1543:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 33


1544:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1545:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1548:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1549:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1552:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1553:Generated_Source\PSoC4/CyLib.c ****                 }
1554:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1555:Generated_Source\PSoC4/CyLib.c ****                 {
1556:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1557:Generated_Source\PSoC4/CyLib.c ****                 }
1558:Generated_Source\PSoC4/CyLib.c ****                 else
1559:Generated_Source\PSoC4/CyLib.c ****                 {
1560:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1561:Generated_Source\PSoC4/CyLib.c ****                 }
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1564:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1565:Generated_Source\PSoC4/CyLib.c ****                 {
1566:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1567:Generated_Source\PSoC4/CyLib.c ****                 }
1568:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1569:Generated_Source\PSoC4/CyLib.c ****                 {
1570:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1571:Generated_Source\PSoC4/CyLib.c ****                 }
1572:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1573:Generated_Source\PSoC4/CyLib.c ****                 {
1574:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1575:Generated_Source\PSoC4/CyLib.c ****                 }
1576:Generated_Source\PSoC4/CyLib.c ****                 else
1577:Generated_Source\PSoC4/CyLib.c ****                 {
1578:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1582:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1583:Generated_Source\PSoC4/CyLib.c **** 
1584:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1585:Generated_Source\PSoC4/CyLib.c **** 
1586:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1587:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1588:Generated_Source\PSoC4/CyLib.c ****                 {
1589:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1590:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1591:Generated_Source\PSoC4/CyLib.c ****                 }
1592:Generated_Source\PSoC4/CyLib.c ****                 else
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1595:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1596:Generated_Source\PSoC4/CyLib.c ****                     */
1597:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1598:Generated_Source\PSoC4/CyLib.c ****                 }
1599:Generated_Source\PSoC4/CyLib.c ****             }
1600:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 34


1601:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1602:Generated_Source\PSoC4/CyLib.c ****         }
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1605:Generated_Source\PSoC4/CyLib.c **** 
1606:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1607:Generated_Source\PSoC4/CyLib.c **** 
1608:Generated_Source\PSoC4/CyLib.c **** 
1609:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1610:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1611:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1612:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1613:Generated_Source\PSoC4/CyLib.c ****     *
1614:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1615:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1618:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1619:Generated_Source\PSoC4/CyLib.c ****     *
1620:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1623:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1624:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1625:Generated_Source\PSoC4/CyLib.c ****     *
1626:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1627:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1628:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1629:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1632:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1633:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1634:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1635:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1636:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1639:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1640:Generated_Source\PSoC4/CyLib.c ****     {
1641:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1642:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1643:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1644:Generated_Source\PSoC4/CyLib.c **** 
1645:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1646:Generated_Source\PSoC4/CyLib.c ****         {
1647:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1650:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1651:Generated_Source\PSoC4/CyLib.c **** 
1652:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1653:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1654:Generated_Source\PSoC4/CyLib.c **** 
1655:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 35


1658:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1659:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1660:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1661:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1662:Generated_Source\PSoC4/CyLib.c **** 
1663:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1664:Generated_Source\PSoC4/CyLib.c ****             {
1665:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1668:Generated_Source\PSoC4/CyLib.c ****                 {
1669:Generated_Source\PSoC4/CyLib.c **** 
1670:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1671:Generated_Source\PSoC4/CyLib.c ****                     {
1672:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1673:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1674:Generated_Source\PSoC4/CyLib.c ****                         break;
1675:Generated_Source\PSoC4/CyLib.c ****                     }
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1678:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c ****         }
1682:Generated_Source\PSoC4/CyLib.c ****         else
1683:Generated_Source\PSoC4/CyLib.c ****         {
1684:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1685:Generated_Source\PSoC4/CyLib.c ****         }
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1688:Generated_Source\PSoC4/CyLib.c ****     }
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** 
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1696:Generated_Source\PSoC4/CyLib.c ****     *
1697:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1698:Generated_Source\PSoC4/CyLib.c ****     *
1699:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1700:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1701:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1706:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1707:Generated_Source\PSoC4/CyLib.c ****     {
1708:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1709:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1710:Generated_Source\PSoC4/CyLib.c **** 
1711:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 36


1715:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1716:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1717:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1718:Generated_Source\PSoC4/CyLib.c ****         {
1719:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1720:Generated_Source\PSoC4/CyLib.c ****         }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1725:Generated_Source\PSoC4/CyLib.c ****     }
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1734:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1737:Generated_Source\PSoC4/CyLib.c ****     *
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1739:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1740:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1743:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1744:Generated_Source\PSoC4/CyLib.c ****     {
1745:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1748:Generated_Source\PSoC4/CyLib.c ****         {
1749:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1750:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1751:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c ****     }
1754:Generated_Source\PSoC4/CyLib.c **** 
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1757:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1758:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1761:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1762:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1763:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1766:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 37


1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1775:Generated_Source\PSoC4/CyLib.c ****     * divider.
1776:Generated_Source\PSoC4/CyLib.c ****     *
1777:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1780:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1781:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1784:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1785:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1788:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1789:Generated_Source\PSoC4/CyLib.c ****     {
1790:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1791:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1792:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1793:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1794:Generated_Source\PSoC4/CyLib.c **** 
1795:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1796:Generated_Source\PSoC4/CyLib.c **** 
1797:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1798:Generated_Source\PSoC4/CyLib.c **** 
1799:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1800:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1801:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1802:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1803:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1804:Generated_Source\PSoC4/CyLib.c ****         {
1805:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1806:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1807:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1808:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1809:Generated_Source\PSoC4/CyLib.c **** 
1810:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1811:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1812:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1815:Generated_Source\PSoC4/CyLib.c **** 
1816:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1817:Generated_Source\PSoC4/CyLib.c ****         }
1818:Generated_Source\PSoC4/CyLib.c **** 
1819:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1822:Generated_Source\PSoC4/CyLib.c ****     }
1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1826:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1827:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1828:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 38


1829:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1830:Generated_Source\PSoC4/CyLib.c ****     *
1831:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1832:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1833:Generated_Source\PSoC4/CyLib.c ****     *
1834:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1835:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1836:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1837:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1838:Generated_Source\PSoC4/CyLib.c ****     *
1839:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1842:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1843:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1844:Generated_Source\PSoC4/CyLib.c ****     *
1845:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1846:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1847:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1848:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1851:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1852:Generated_Source\PSoC4/CyLib.c ****     *
1853:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1856:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1857:Generated_Source\PSoC4/CyLib.c ****     {
1858:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1859:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1860:Generated_Source\PSoC4/CyLib.c **** 
1861:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1862:Generated_Source\PSoC4/CyLib.c **** 
1863:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1864:Generated_Source\PSoC4/CyLib.c ****         {
1865:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1866:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1867:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         }
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1871:Generated_Source\PSoC4/CyLib.c ****     }
1872:Generated_Source\PSoC4/CyLib.c **** 
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1876:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1877:Generated_Source\PSoC4/CyLib.c ****     *
1878:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1879:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1882:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1883:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 39


1886:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1889:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1890:Generated_Source\PSoC4/CyLib.c ****     {
1891:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1892:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1893:Generated_Source\PSoC4/CyLib.c **** 
1894:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1897:Generated_Source\PSoC4/CyLib.c **** 
1898:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1899:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1900:Generated_Source\PSoC4/CyLib.c **** 
1901:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1904:Generated_Source\PSoC4/CyLib.c ****     }
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1909:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1912:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1917:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1918:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1921:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1922:Generated_Source\PSoC4/CyLib.c ****     *
1923:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1924:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1925:Generated_Source\PSoC4/CyLib.c ****     {
1926:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1927:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1928:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1931:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1934:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1936:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1937:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1938:Generated_Source\PSoC4/CyLib.c ****             )
1939:Generated_Source\PSoC4/CyLib.c ****         {
1940:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1941:Generated_Source\PSoC4/CyLib.c ****         }
1942:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 40


1943:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1944:Generated_Source\PSoC4/CyLib.c ****     }
1945:Generated_Source\PSoC4/CyLib.c **** 
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1948:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1949:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1952:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1953:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1954:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1955:Generated_Source\PSoC4/CyLib.c ****     *
1956:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1957:Generated_Source\PSoC4/CyLib.c ****     *
1958:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1959:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1960:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1963:Generated_Source\PSoC4/CyLib.c ****     *
1964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1965:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1966:Generated_Source\PSoC4/CyLib.c ****     {
1967:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1968:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1969:Generated_Source\PSoC4/CyLib.c **** 
1970:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1973:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1976:Generated_Source\PSoC4/CyLib.c **** 
1977:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1978:Generated_Source\PSoC4/CyLib.c ****     }
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1982:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1983:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1984:Generated_Source\PSoC4/CyLib.c ****     *
1985:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1986:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1987:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1988:Generated_Source\PSoC4/CyLib.c ****     *
1989:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1990:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1993:Generated_Source\PSoC4/CyLib.c ****     *
1994:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1995:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1996:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1999:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 41


2000:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2001:Generated_Source\PSoC4/CyLib.c ****     *
2002:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2003:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2004:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2005:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2006:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2007:Generated_Source\PSoC4/CyLib.c ****     *
2008:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2011:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2014:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2020:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2023:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2024:Generated_Source\PSoC4/CyLib.c **** 
2025:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2026:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2029:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2032:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2033:Generated_Source\PSoC4/CyLib.c **** 
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2036:Generated_Source\PSoC4/CyLib.c **** 
2037:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2038:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2039:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2040:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2041:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2042:Generated_Source\PSoC4/CyLib.c ****         {
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2045:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2046:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2049:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2050:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2053:Generated_Source\PSoC4/CyLib.c ****             {
2054:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2055:Generated_Source\PSoC4/CyLib.c ****                 {
2056:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 42


2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2059:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2062:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2063:Generated_Source\PSoC4/CyLib.c **** 
2064:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2065:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2066:Generated_Source\PSoC4/CyLib.c **** 
2067:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2068:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2069:Generated_Source\PSoC4/CyLib.c ****                     {
2070:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2071:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2072:Generated_Source\PSoC4/CyLib.c ****                         break;
2073:Generated_Source\PSoC4/CyLib.c ****                     }
2074:Generated_Source\PSoC4/CyLib.c ****                 }
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2078:Generated_Source\PSoC4/CyLib.c ****                 {
2079:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2080:Generated_Source\PSoC4/CyLib.c ****                     {
2081:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2082:Generated_Source\PSoC4/CyLib.c ****                     }
2083:Generated_Source\PSoC4/CyLib.c ****                 }
2084:Generated_Source\PSoC4/CyLib.c ****             }
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****         }
2087:Generated_Source\PSoC4/CyLib.c **** 
2088:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2089:Generated_Source\PSoC4/CyLib.c ****     }
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2096:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2099:Generated_Source\PSoC4/CyLib.c ****     *
2100:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2101:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2102:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2105:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2106:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2107:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2108:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2109:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2110:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2111:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2112:Generated_Source\PSoC4/CyLib.c ****     *
2113:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 43


2114:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2115:Generated_Source\PSoC4/CyLib.c ****     {
2116:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2117:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2118:Generated_Source\PSoC4/CyLib.c ****         
2119:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2120:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2121:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2126:Generated_Source\PSoC4/CyLib.c ****         {
2127:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2128:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2129:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2130:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2131:Generated_Source\PSoC4/CyLib.c ****             #else
2132:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2133:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2134:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2135:Generated_Source\PSoC4/CyLib.c ****                 
2136:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2137:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2138:Generated_Source\PSoC4/CyLib.c ****                 
2139:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2140:Generated_Source\PSoC4/CyLib.c ****                 {
2141:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2142:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2143:Generated_Source\PSoC4/CyLib.c ****                 }
2144:Generated_Source\PSoC4/CyLib.c ****                 
2145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2148:Generated_Source\PSoC4/CyLib.c ****         }
2149:Generated_Source\PSoC4/CyLib.c **** 
2150:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2151:Generated_Source\PSoC4/CyLib.c ****     }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****     
2154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2157:Generated_Source\PSoC4/CyLib.c ****     *
2158:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2159:Generated_Source\PSoC4/CyLib.c ****     *
2160:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2161:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2162:Generated_Source\PSoC4/CyLib.c ****     *
2163:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2166:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2167:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2168:Generated_Source\PSoC4/CyLib.c ****     *
2169:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2170:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 44


2171:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2172:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2173:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2176:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2177:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2178:Generated_Source\PSoC4/CyLib.c ****     *
2179:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2180:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2181:Generated_Source\PSoC4/CyLib.c ****     {
2182:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2183:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2184:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2185:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** 
2188:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2191:Generated_Source\PSoC4/CyLib.c **** 
2192:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2193:Generated_Source\PSoC4/CyLib.c ****         {
2194:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2195:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2196:Generated_Source\PSoC4/CyLib.c **** 
2197:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2200:Generated_Source\PSoC4/CyLib.c ****         }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2205:Generated_Source\PSoC4/CyLib.c ****     }
2206:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c **** 
2209:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2210:Generated_Source\PSoC4/CyLib.c **** 
2211:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2212:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2213:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2214:Generated_Source\PSoC4/CyLib.c ****     *
2215:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2216:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2217:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2218:Generated_Source\PSoC4/CyLib.c ****     *
2219:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2220:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2221:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2222:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2223:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2224:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2225:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2226:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2227:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 45


2228:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2229:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2230:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2231:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2232:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2233:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2234:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2235:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2236:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2237:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2238:Generated_Source\PSoC4/CyLib.c ****     *
2239:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2241:Generated_Source\PSoC4/CyLib.c ****     {
2242:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2243:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2246:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2247:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2248:Generated_Source\PSoC4/CyLib.c **** 
2249:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2250:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2251:Generated_Source\PSoC4/CyLib.c **** 
2252:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2253:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2256:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2259:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2260:Generated_Source\PSoC4/CyLib.c ****     }
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2266:Generated_Source\PSoC4/CyLib.c ****     *
2267:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2268:Generated_Source\PSoC4/CyLib.c ****     *
2269:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2270:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2271:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 2271 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 285              		.loc 1 2272 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0221     		movs	r1, #2
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
2273:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 46


 291              		.loc 1 2273 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1368     		ldr	r3, [r2]
 294 000e 0139     		subs	r1, r1, #1
 295 0010 8B43     		bics	r3, r1
 296 0012 1360     		str	r3, [r2]
2274:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 2274 0
 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 08000B40 		.word	1074462728
 304 001c 18000B40 		.word	1074462744
 305              		.cfi_endproc
 306              	.LFE8:
 307              		.size	CySysLvdDisable, .-CySysLvdDisable
 308              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 309              		.align	2
 310              		.global	CySysLvdGetInterruptSource
 311              		.code	16
 312              		.thumb_func
 313              		.type	CySysLvdGetInterruptSource, %function
 314              	CySysLvdGetInterruptSource:
 315              	.LFB9:
2275:Generated_Source\PSoC4/CyLib.c **** 
2276:Generated_Source\PSoC4/CyLib.c **** 
2277:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2278:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2279:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2280:Generated_Source\PSoC4/CyLib.c ****     *
2281:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2282:Generated_Source\PSoC4/CyLib.c ****     *
2283:Generated_Source\PSoC4/CyLib.c ****     * \return
2284:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2285:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2286:Generated_Source\PSoC4/CyLib.c ****     *
2287:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2289:Generated_Source\PSoC4/CyLib.c ****     {
 316              		.loc 1 2289 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
2290:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 321              		.loc 1 2290 0
 322 0000 024B     		ldr	r3, .L25
 323 0002 1B68     		ldr	r3, [r3]
 324 0004 0220     		movs	r0, #2
 325 0006 1840     		ands	r0, r3
2291:Generated_Source\PSoC4/CyLib.c ****     }
 326              		.loc 1 2291 0
 327              		@ sp needed
 328 0008 7047     		bx	lr
 329              	.L26:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 47


 330 000a C046     		.align	2
 331              	.L25:
 332 000c 04000B40 		.word	1074462724
 333              		.cfi_endproc
 334              	.LFE9:
 335              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 336              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 337              		.align	2
 338              		.global	CySysLvdClearInterrupt
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysLvdClearInterrupt, %function
 342              	CySysLvdClearInterrupt:
 343              	.LFB10:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2296:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c ****     *
2298:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2299:Generated_Source\PSoC4/CyLib.c ****     *
2300:Generated_Source\PSoC4/CyLib.c ****     * \return
2301:Generated_Source\PSoC4/CyLib.c ****     *  None
2302:Generated_Source\PSoC4/CyLib.c ****     *
2303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2304:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2305:Generated_Source\PSoC4/CyLib.c ****     {
 344              		.loc 1 2305 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
2306:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 349              		.loc 1 2306 0
 350 0000 0222     		movs	r2, #2
 351 0002 014B     		ldr	r3, .L28
 352 0004 1A60     		str	r2, [r3]
2307:Generated_Source\PSoC4/CyLib.c ****     }
 353              		.loc 1 2307 0
 354              		@ sp needed
 355 0006 7047     		bx	lr
 356              	.L29:
 357              		.align	2
 358              	.L28:
 359 0008 04000B40 		.word	1074462724
 360              		.cfi_endproc
 361              	.LFE10:
 362              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 363              		.section	.text.CySysGetResetReason,"ax",%progbits
 364              		.align	2
 365              		.global	CySysGetResetReason
 366              		.code	16
 367              		.thumb_func
 368              		.type	CySysGetResetReason, %function
 369              	CySysGetResetReason:
 370              	.LFB11:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 48


2308:Generated_Source\PSoC4/CyLib.c **** 
2309:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2310:Generated_Source\PSoC4/CyLib.c **** 
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2313:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2314:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2315:Generated_Source\PSoC4/CyLib.c **** *
2316:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2317:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2318:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2319:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2322:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2323:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2324:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2325:Generated_Source\PSoC4/CyLib.c **** *
2326:Generated_Source\PSoC4/CyLib.c **** * \return
2327:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2331:Generated_Source\PSoC4/CyLib.c **** {
 371              		.loc 1 2331 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL16:
 377 0000 0200     		movs	r2, r0
2332:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2333:Generated_Source\PSoC4/CyLib.c **** 
2334:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 378              		.loc 1 2334 0
 379 0002 1920     		movs	r0, #25
 380              	.LVL17:
 381 0004 0240     		ands	r2, r0
 382              	.LVL18:
2335:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 383              		.loc 1 2335 0
 384 0006 0249     		ldr	r1, .L31
 385 0008 0B68     		ldr	r3, [r1]
 386 000a 1840     		ands	r0, r3
 387              	.LVL19:
2336:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2337:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 388              		.loc 1 2337 0
 389 000c 0A60     		str	r2, [r1]
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2340:Generated_Source\PSoC4/CyLib.c **** }
 390              		.loc 1 2340 0
 391              		@ sp needed
 392 000e 7047     		bx	lr
 393              	.L32:
 394              		.align	2
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 49


 395              	.L31:
 396 0010 00030B40 		.word	1074463488
 397              		.cfi_endproc
 398              	.LFE11:
 399              		.size	CySysGetResetReason, .-CySysGetResetReason
 400              		.section	.text.CyDisableInts,"ax",%progbits
 401              		.align	2
 402              		.global	CyDisableInts
 403              		.code	16
 404              		.thumb_func
 405              		.type	CyDisableInts, %function
 406              	CyDisableInts:
 407              	.LFB12:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2344:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2345:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2348:Generated_Source\PSoC4/CyLib.c **** *
2349:Generated_Source\PSoC4/CyLib.c **** * \return
2350:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2353:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2354:Generated_Source\PSoC4/CyLib.c **** {
 408              		.loc 1 2354 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
2355:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2358:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 413              		.loc 1 2358 0
 414 0000 024B     		ldr	r3, .L34
 415 0002 1868     		ldr	r0, [r3]
 416              	.LVL20:
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2361:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 417              		.loc 1 2361 0
 418 0004 0122     		movs	r2, #1
 419 0006 5242     		rsbs	r2, r2, #0
 420 0008 1A60     		str	r2, [r3]
2362:Generated_Source\PSoC4/CyLib.c **** 
2363:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2364:Generated_Source\PSoC4/CyLib.c **** }
 421              		.loc 1 2364 0
 422              		@ sp needed
 423 000a 7047     		bx	lr
 424              	.L35:
 425              		.align	2
 426              	.L34:
 427 000c 80E100E0 		.word	-536813184
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 50


 428              		.cfi_endproc
 429              	.LFE12:
 430              		.size	CyDisableInts, .-CyDisableInts
 431              		.section	.text.CyEnableInts,"ax",%progbits
 432              		.align	2
 433              		.global	CyEnableInts
 434              		.code	16
 435              		.thumb_func
 436              		.type	CyEnableInts, %function
 437              	CyEnableInts:
 438              	.LFB13:
2365:Generated_Source\PSoC4/CyLib.c **** 
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2368:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2369:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2370:Generated_Source\PSoC4/CyLib.c **** *
2371:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2376:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2377:Generated_Source\PSoC4/CyLib.c **** {
 439              		.loc 1 2377 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL21:
2378:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 445              		.loc 1 2378 0
 446 0000 014B     		ldr	r3, .L37
 447 0002 1860     		str	r0, [r3]
2379:Generated_Source\PSoC4/CyLib.c **** }
 448              		.loc 1 2379 0
 449              		@ sp needed
 450 0004 7047     		bx	lr
 451              	.L38:
 452 0006 C046     		.align	2
 453              	.L37:
 454 0008 00E100E0 		.word	-536813312
 455              		.cfi_endproc
 456              	.LFE13:
 457              		.size	CyEnableInts, .-CyEnableInts
 458              		.section	.text.CyIntEnable,"ax",%progbits
 459              		.align	2
 460              		.global	CyIntEnable
 461              		.code	16
 462              		.thumb_func
 463              		.type	CyIntEnable, %function
 464              	CyIntEnable:
 465              	.LFB20:
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2383:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 51


2384:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2385:Generated_Source\PSoC4/CyLib.c **** *
2386:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2387:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2390:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2391:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2392:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2393:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2394:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2395:Generated_Source\PSoC4/CyLib.c **** *
2396:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2397:Generated_Source\PSoC4/CyLib.c **** *
2398:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2399:Generated_Source\PSoC4/CyLib.c **** *
2400:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2401:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2402:Generated_Source\PSoC4/CyLib.c **** {
2403:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2404:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2405:Generated_Source\PSoC4/CyLib.c **** 
2406:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2409:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2410:Generated_Source\PSoC4/CyLib.c **** 
2411:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2412:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2413:Generated_Source\PSoC4/CyLib.c **** 
2414:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2415:Generated_Source\PSoC4/CyLib.c **** }
2416:Generated_Source\PSoC4/CyLib.c **** 
2417:Generated_Source\PSoC4/CyLib.c **** 
2418:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2419:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2420:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2423:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2424:Generated_Source\PSoC4/CyLib.c **** *
2425:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2426:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2427:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2428:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2429:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2430:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2435:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2436:Generated_Source\PSoC4/CyLib.c **** {
2437:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2440:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 52


2441:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2442:Generated_Source\PSoC4/CyLib.c **** }
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2446:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2447:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2452:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2455:Generated_Source\PSoC4/CyLib.c **** *
2456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2457:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2458:Generated_Source\PSoC4/CyLib.c **** {
2459:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2460:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2465:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2468:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2471:Generated_Source\PSoC4/CyLib.c **** }
2472:Generated_Source\PSoC4/CyLib.c **** 
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2475:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2476:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
2487:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2488:Generated_Source\PSoC4/CyLib.c **** 
2489:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2492:Generated_Source\PSoC4/CyLib.c **** }
2493:Generated_Source\PSoC4/CyLib.c **** 
2494:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2495:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2496:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2497:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 53


2498:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2501:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2502:Generated_Source\PSoC4/CyLib.c **** *
2503:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2504:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2505:Generated_Source\PSoC4/CyLib.c **** {
2506:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2507:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2508:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2509:Generated_Source\PSoC4/CyLib.c **** 
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2511:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2512:Generated_Source\PSoC4/CyLib.c **** 
2513:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2518:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2519:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2520:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2523:Generated_Source\PSoC4/CyLib.c **** }
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2528:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2531:Generated_Source\PSoC4/CyLib.c **** *
2532:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2533:Generated_Source\PSoC4/CyLib.c **** *
2534:Generated_Source\PSoC4/CyLib.c **** * \return
2535:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2536:Generated_Source\PSoC4/CyLib.c **** *
2537:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2538:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2539:Generated_Source\PSoC4/CyLib.c **** {
2540:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2541:Generated_Source\PSoC4/CyLib.c **** 
2542:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2543:Generated_Source\PSoC4/CyLib.c **** 
2544:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2547:Generated_Source\PSoC4/CyLib.c **** }
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 54


2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2560:Generated_Source\PSoC4/CyLib.c **** {
 466              		.loc 1 2560 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL22:
2561:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 472              		.loc 1 2561 0
 473 0000 1F23     		movs	r3, #31
 474 0002 1840     		ands	r0, r3
 475              	.LVL23:
 476 0004 1E3B     		subs	r3, r3, #30
 477 0006 8340     		lsls	r3, r3, r0
 478 0008 014A     		ldr	r2, .L40
 479 000a 1360     		str	r3, [r2]
2562:Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2562 0
 481              		@ sp needed
 482 000c 7047     		bx	lr
 483              	.L41:
 484 000e C046     		.align	2
 485              	.L40:
 486 0010 00E100E0 		.word	-536813312
 487              		.cfi_endproc
 488              	.LFE20:
 489              		.size	CyIntEnable, .-CyIntEnable
 490              		.section	.text.CyIntGetState,"ax",%progbits
 491              		.align	2
 492              		.global	CyIntGetState
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntGetState, %function
 496              	CyIntGetState:
 497              	.LFB21:
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c **** 
2565:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2566:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2567:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2568:Generated_Source\PSoC4/CyLib.c **** *
2569:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2572:Generated_Source\PSoC4/CyLib.c **** *
2573:Generated_Source\PSoC4/CyLib.c **** * \return
2574:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2575:Generated_Source\PSoC4/CyLib.c **** *
2576:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2577:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2578:Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 2578 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 55


 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL24:
2579:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2580:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 504              		.loc 1 2580 0
 505 0000 044B     		ldr	r3, .L43
 506 0002 1B68     		ldr	r3, [r3]
 507 0004 1F22     		movs	r2, #31
 508 0006 1040     		ands	r0, r2
 509              	.LVL25:
 510 0008 C340     		lsrs	r3, r3, r0
 511 000a 1800     		movs	r0, r3
 512 000c 0123     		movs	r3, #1
 513 000e 1840     		ands	r0, r3
2581:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2581 0
 515              		@ sp needed
 516 0010 7047     		bx	lr
 517              	.L44:
 518 0012 C046     		.align	2
 519              	.L43:
 520 0014 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE21:
 523              		.size	CyIntGetState, .-CyIntGetState
 524              		.section	.text.CyIntDisable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntDisable
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntDisable, %function
 530              	CyIntDisable:
 531              	.LFB22:
2582:Generated_Source\PSoC4/CyLib.c **** 
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2585:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2586:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2587:Generated_Source\PSoC4/CyLib.c **** *
2588:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2589:Generated_Source\PSoC4/CyLib.c **** *
2590:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2591:Generated_Source\PSoC4/CyLib.c **** *
2592:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2593:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2594:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2594 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL26:
2595:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2595 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 56


 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL27:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2596:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 2596 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 80E100E0 		.word	-536813184
 553              		.cfi_endproc
 554              	.LFE22:
 555              		.size	CyIntDisable, .-CyIntDisable
 556              		.section	.text.CyIntSetPending,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntSetPending
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntSetPending, %function
 562              	CyIntSetPending:
 563              	.LFB23:
2597:Generated_Source\PSoC4/CyLib.c **** 
2598:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2599:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2600:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2605:Generated_Source\PSoC4/CyLib.c **** *
2606:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2607:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2608:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 2608 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL28:
2609:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 570              		.loc 1 2609 0
 571 0000 1F23     		movs	r3, #31
 572 0002 1840     		ands	r0, r3
 573              	.LVL29:
 574 0004 1E3B     		subs	r3, r3, #30
 575 0006 8340     		lsls	r3, r3, r0
 576 0008 014A     		ldr	r2, .L49
 577 000a 1360     		str	r3, [r2]
2610:Generated_Source\PSoC4/CyLib.c **** }
 578              		.loc 1 2610 0
 579              		@ sp needed
 580 000c 7047     		bx	lr
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 57


 581              	.L50:
 582 000e C046     		.align	2
 583              	.L49:
 584 0010 00E200E0 		.word	-536813056
 585              		.cfi_endproc
 586              	.LFE23:
 587              		.size	CyIntSetPending, .-CyIntSetPending
 588              		.section	.text.CyIntClearPending,"ax",%progbits
 589              		.align	2
 590              		.global	CyIntClearPending
 591              		.code	16
 592              		.thumb_func
 593              		.type	CyIntClearPending, %function
 594              	CyIntClearPending:
 595              	.LFB24:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2620:Generated_Source\PSoC4/CyLib.c **** *
2621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2622:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2623:Generated_Source\PSoC4/CyLib.c **** {
 596              		.loc 1 2623 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL30:
2624:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 602              		.loc 1 2624 0
 603 0000 1F23     		movs	r3, #31
 604 0002 1840     		ands	r0, r3
 605              	.LVL31:
 606 0004 1E3B     		subs	r3, r3, #30
 607 0006 8340     		lsls	r3, r3, r0
 608 0008 014A     		ldr	r2, .L52
 609 000a 1360     		str	r3, [r2]
2625:Generated_Source\PSoC4/CyLib.c **** }
 610              		.loc 1 2625 0
 611              		@ sp needed
 612 000c 7047     		bx	lr
 613              	.L53:
 614 000e C046     		.align	2
 615              	.L52:
 616 0010 80E200E0 		.word	-536812928
 617              		.cfi_endproc
 618              	.LFE24:
 619              		.size	CyIntClearPending, .-CyIntClearPending
 620              		.section	.text.CyHalt,"ax",%progbits
 621              		.align	2
 622              		.global	CyHalt
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 58


 623              		.code	16
 624              		.thumb_func
 625              		.type	CyHalt, %function
 626              	CyHalt:
 627              	.LFB25:
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2629:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2630:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2633:Generated_Source\PSoC4/CyLib.c **** *
2634:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2638:Generated_Source\PSoC4/CyLib.c **** {
 628              		.loc 1 2638 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL32:
2639:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2640:Generated_Source\PSoC4/CyLib.c ****     {
2641:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2645:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2646:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2647:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 634              		.loc 1 2647 0
 635              		.syntax divided
 636              	@ 2647 "Generated_Source\PSoC4\CyLib.c" 1
 637 0000 01BE     		    bkpt    1
 638              	@ 0 "" 2
2648:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2649:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2650:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2651:Generated_Source\PSoC4/CyLib.c **** }
 639              		.loc 1 2651 0
 640              		.thumb
 641              		.syntax unified
 642              		@ sp needed
 643 0002 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE25:
 646              		.size	CyHalt, .-CyHalt
 647              		.section	.text.CyIntSetSysVector,"ax",%progbits
 648              		.align	2
 649              		.global	CyIntSetSysVector
 650              		.code	16
 651              		.thumb_func
 652              		.type	CyIntSetSysVector, %function
 653              	CyIntSetSysVector:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 59


 654              	.LFB14:
2402:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 655              		.loc 1 2402 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              	.LVL33:
 660 0000 70B5     		push	{r4, r5, r6, lr}
 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 4, -16
 663              		.cfi_offset 5, -12
 664              		.cfi_offset 6, -8
 665              		.cfi_offset 14, -4
 666 0002 0400     		movs	r4, r0
 667 0004 0D00     		movs	r5, r1
 668              	.LVL34:
2406:Generated_Source\PSoC4/CyLib.c **** 
 669              		.loc 1 2406 0
 670 0006 0F28     		cmp	r0, #15
 671 0008 02D9     		bls	.L56
2406:Generated_Source\PSoC4/CyLib.c **** 
 672              		.loc 1 2406 0 is_stmt 0 discriminator 1
 673 000a 0020     		movs	r0, #0
 674              	.LVL35:
 675 000c FFF7FEFF 		bl	CyHalt
 676              	.LVL36:
 677              	.L56:
2409:Generated_Source\PSoC4/CyLib.c **** 
 678              		.loc 1 2409 0 is_stmt 1
 679 0010 A400     		lsls	r4, r4, #2
 680 0012 8023     		movs	r3, #128
 681 0014 9B05     		lsls	r3, r3, #22
 682 0016 9C46     		mov	ip, r3
 683 0018 6444     		add	r4, r4, ip
 684 001a 2068     		ldr	r0, [r4]
 685              	.LVL37:
2412:Generated_Source\PSoC4/CyLib.c **** 
 686              		.loc 1 2412 0
 687 001c 2560     		str	r5, [r4]
2415:Generated_Source\PSoC4/CyLib.c **** 
 688              		.loc 1 2415 0
 689              		@ sp needed
 690              	.LVL38:
 691 001e 70BD     		pop	{r4, r5, r6, pc}
 692              		.cfi_endproc
 693              	.LFE14:
 694              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 695              		.section	.text.CyIntGetSysVector,"ax",%progbits
 696              		.align	2
 697              		.global	CyIntGetSysVector
 698              		.code	16
 699              		.thumb_func
 700              		.type	CyIntGetSysVector, %function
 701              	CyIntGetSysVector:
 702              	.LFB15:
2436:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 703              		.loc 1 2436 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 60


 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL39:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
 712 0002 0400     		movs	r4, r0
 713              	.LVL40:
2439:Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2439 0
 715 0004 0F28     		cmp	r0, #15
 716 0006 02D9     		bls	.L58
2439:Generated_Source\PSoC4/CyLib.c **** 
 717              		.loc 1 2439 0 is_stmt 0 discriminator 1
 718 0008 0020     		movs	r0, #0
 719              	.LVL41:
 720 000a FFF7FEFF 		bl	CyHalt
 721              	.LVL42:
 722              	.L58:
2441:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 2441 0 is_stmt 1
 724 000e A400     		lsls	r4, r4, #2
 725 0010 8023     		movs	r3, #128
 726 0012 9B05     		lsls	r3, r3, #22
 727 0014 9C46     		mov	ip, r3
 728 0016 6444     		add	r4, r4, ip
 729 0018 2068     		ldr	r0, [r4]
2442:Generated_Source\PSoC4/CyLib.c **** 
 730              		.loc 1 2442 0
 731              		@ sp needed
 732 001a 10BD     		pop	{r4, pc}
 733              		.cfi_endproc
 734              	.LFE15:
 735              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 736              		.section	.text.CyIntSetVector,"ax",%progbits
 737              		.align	2
 738              		.global	CyIntSetVector
 739              		.code	16
 740              		.thumb_func
 741              		.type	CyIntSetVector, %function
 742              	CyIntSetVector:
 743              	.LFB16:
2458:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 744              		.loc 1 2458 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL43:
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 61


 756 0004 0D00     		movs	r5, r1
 757              	.LVL44:
2462:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 2462 0
 759 0006 1F28     		cmp	r0, #31
 760 0008 02D9     		bls	.L60
2462:Generated_Source\PSoC4/CyLib.c **** 
 761              		.loc 1 2462 0 is_stmt 0 discriminator 1
 762 000a 0020     		movs	r0, #0
 763              	.LVL45:
 764 000c FFF7FEFF 		bl	CyHalt
 765              	.LVL46:
 766              	.L60:
2465:Generated_Source\PSoC4/CyLib.c **** 
 767              		.loc 1 2465 0 is_stmt 1
 768 0010 1034     		adds	r4, r4, #16
 769 0012 A400     		lsls	r4, r4, #2
 770 0014 8023     		movs	r3, #128
 771 0016 9B05     		lsls	r3, r3, #22
 772 0018 9C46     		mov	ip, r3
 773 001a 6444     		add	r4, r4, ip
 774 001c 2068     		ldr	r0, [r4]
 775              	.LVL47:
2468:Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2468 0
 777 001e 2560     		str	r5, [r4]
2471:Generated_Source\PSoC4/CyLib.c **** 
 778              		.loc 1 2471 0
 779              		@ sp needed
 780              	.LVL48:
 781 0020 70BD     		pop	{r4, r5, r6, pc}
 782              		.cfi_endproc
 783              	.LFE16:
 784              		.size	CyIntSetVector, .-CyIntSetVector
 785 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 786              		.align	2
 787              		.global	CyIntGetVector
 788              		.code	16
 789              		.thumb_func
 790              		.type	CyIntGetVector, %function
 791              	CyIntGetVector:
 792              	.LFB17:
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 793              		.loc 1 2486 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL49:
 798 0000 10B5     		push	{r4, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 4, -8
 801              		.cfi_offset 14, -4
 802 0002 0400     		movs	r4, r0
 803              	.LVL50:
2489:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2489 0
 805 0004 1F28     		cmp	r0, #31
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 62


 806 0006 02D9     		bls	.L62
2489:Generated_Source\PSoC4/CyLib.c **** 
 807              		.loc 1 2489 0 is_stmt 0 discriminator 1
 808 0008 0020     		movs	r0, #0
 809              	.LVL51:
 810 000a FFF7FEFF 		bl	CyHalt
 811              	.LVL52:
 812              	.L62:
2491:Generated_Source\PSoC4/CyLib.c **** }
 813              		.loc 1 2491 0 is_stmt 1
 814 000e 1034     		adds	r4, r4, #16
 815 0010 A400     		lsls	r4, r4, #2
 816 0012 8023     		movs	r3, #128
 817 0014 9B05     		lsls	r3, r3, #22
 818 0016 9C46     		mov	ip, r3
 819 0018 6444     		add	r4, r4, ip
 820 001a 2068     		ldr	r0, [r4]
2492:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2492 0
 822              		@ sp needed
 823 001c 10BD     		pop	{r4, pc}
 824              		.cfi_endproc
 825              	.LFE17:
 826              		.size	CyIntGetVector, .-CyIntGetVector
 827 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 828              		.align	2
 829              		.global	CyIntSetPriority
 830              		.code	16
 831              		.thumb_func
 832              		.type	CyIntSetPriority, %function
 833              	CyIntSetPriority:
 834              	.LFB18:
2505:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 835              		.loc 1 2505 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL53:
 840 0000 70B5     		push	{r4, r5, r6, lr}
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 846 0002 0400     		movs	r4, r0
 847 0004 0E00     		movs	r6, r1
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 848              		.loc 1 2510 0
 849 0006 0329     		cmp	r1, #3
 850 0008 02D9     		bls	.L64
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 851              		.loc 1 2510 0 is_stmt 0 discriminator 1
 852 000a 0020     		movs	r0, #0
 853              	.LVL54:
 854 000c FFF7FEFF 		bl	CyHalt
 855              	.LVL55:
 856              	.L64:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 63


2511:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2511 0 is_stmt 1
 858 0010 1F2C     		cmp	r4, #31
 859 0012 02D9     		bls	.L65
2511:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2511 0 is_stmt 0 discriminator 1
 861 0014 0020     		movs	r0, #0
 862 0016 FFF7FEFF 		bl	CyHalt
 863              	.LVL56:
 864              	.L65:
2513:Generated_Source\PSoC4/CyLib.c **** 
 865              		.loc 1 2513 0 is_stmt 1
 866 001a 0325     		movs	r5, #3
 867 001c 2540     		ands	r5, r4
 868 001e ED00     		lsls	r5, r5, #3
 869 0020 0635     		adds	r5, r5, #6
 870              	.LVL57:
2515:Generated_Source\PSoC4/CyLib.c **** 
 871              		.loc 1 2515 0
 872 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 873              	.LVL58:
2517:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 874              		.loc 1 2517 0
 875 0026 A408     		lsrs	r4, r4, #2
 876 0028 A400     		lsls	r4, r4, #2
 877 002a 074B     		ldr	r3, .L66
 878 002c 9C46     		mov	ip, r3
 879 002e 6444     		add	r4, r4, ip
 880 0030 2168     		ldr	r1, [r4]
 881              	.LVL59:
2518:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 882              		.loc 1 2518 0
 883 0032 0323     		movs	r3, #3
 884 0034 AB40     		lsls	r3, r3, r5
 885 0036 9943     		bics	r1, r3
 886              	.LVL60:
 887 0038 0B00     		movs	r3, r1
 888              	.LVL61:
2519:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 889              		.loc 1 2519 0
 890 003a 3100     		movs	r1, r6
 891              	.LVL62:
 892 003c A940     		lsls	r1, r1, r5
 893 003e 1943     		orrs	r1, r3
 894              	.LVL63:
2520:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2520 0
 896 0040 2160     		str	r1, [r4]
2522:Generated_Source\PSoC4/CyLib.c **** }
 897              		.loc 1 2522 0
 898 0042 FFF7FEFF 		bl	CyExitCriticalSection
 899              	.LVL64:
2523:Generated_Source\PSoC4/CyLib.c **** 
 900              		.loc 1 2523 0
 901              		@ sp needed
 902              	.LVL65:
 903 0046 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 64


 904              	.L67:
 905              		.align	2
 906              	.L66:
 907 0048 00E400E0 		.word	-536812544
 908              		.cfi_endproc
 909              	.LFE18:
 910              		.size	CyIntSetPriority, .-CyIntSetPriority
 911              		.section	.text.CyIntGetPriority,"ax",%progbits
 912              		.align	2
 913              		.global	CyIntGetPriority
 914              		.code	16
 915              		.thumb_func
 916              		.type	CyIntGetPriority, %function
 917              	CyIntGetPriority:
 918              	.LFB19:
2539:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 919              		.loc 1 2539 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL66:
 924 0000 10B5     		push	{r4, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 0002 0400     		movs	r4, r0
2542:Generated_Source\PSoC4/CyLib.c **** 
 929              		.loc 1 2542 0
 930 0004 1F28     		cmp	r0, #31
 931 0006 02D9     		bls	.L69
2542:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2542 0 is_stmt 0 discriminator 1
 933 0008 0020     		movs	r0, #0
 934              	.LVL67:
 935 000a FFF7FEFF 		bl	CyHalt
 936              	.LVL68:
 937              	.L69:
2544:Generated_Source\PSoC4/CyLib.c **** 
 938              		.loc 1 2544 0 is_stmt 1
 939 000e A308     		lsrs	r3, r4, #2
 940 0010 9B00     		lsls	r3, r3, #2
 941 0012 054A     		ldr	r2, .L70
 942 0014 9446     		mov	ip, r2
 943 0016 6344     		add	r3, r3, ip
 944 0018 1868     		ldr	r0, [r3]
 945 001a 0323     		movs	r3, #3
 946 001c 1C40     		ands	r4, r3
 947 001e E400     		lsls	r4, r4, #3
 948 0020 0634     		adds	r4, r4, #6
 949 0022 E040     		lsrs	r0, r0, r4
 950              	.LVL69:
2546:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2546 0
 952 0024 1840     		ands	r0, r3
 953              	.LVL70:
2547:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2547 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 65


 955              		@ sp needed
 956 0026 10BD     		pop	{r4, pc}
 957              	.L71:
 958              		.align	2
 959              	.L70:
 960 0028 00E400E0 		.word	-536812544
 961              		.cfi_endproc
 962              	.LFE19:
 963              		.size	CyIntGetPriority, .-CyIntGetPriority
 964              		.section	.text.CySoftwareReset,"ax",%progbits
 965              		.align	2
 966              		.global	CySoftwareReset
 967              		.code	16
 968              		.thumb_func
 969              		.type	CySoftwareReset, %function
 970              	CySoftwareReset:
 971              	.LFB26:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2661:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2662:Generated_Source\PSoC4/CyLib.c **** {
 972              		.loc 1 2662 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
2663:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2664:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2665:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2666:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2667:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 977              		.loc 1 2667 0
 978 0000 034A     		ldr	r2, .L73
 979 0002 1368     		ldr	r3, [r2]
 980 0004 1B04     		lsls	r3, r3, #16
 981 0006 1B0C     		lsrs	r3, r3, #16
2668:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 982              		.loc 1 2668 0
 983 0008 0249     		ldr	r1, .L73+4
 984 000a 0B43     		orrs	r3, r1
2667:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 985              		.loc 1 2667 0
 986 000c 1360     		str	r3, [r2]
2669:Generated_Source\PSoC4/CyLib.c **** }
 987              		.loc 1 2669 0
 988              		@ sp needed
 989 000e 7047     		bx	lr
 990              	.L74:
 991              		.align	2
 992              	.L73:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 66


 993 0010 0CED00E0 		.word	-536810228
 994 0014 0400FA05 		.word	100270084
 995              		.cfi_endproc
 996              	.LFE26:
 997              		.size	CySoftwareReset, .-CySoftwareReset
 998              		.section	.text.CyDelay,"ax",%progbits
 999              		.align	2
 1000              		.global	CyDelay
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	CyDelay, %function
 1004              	CyDelay:
 1005              	.LFB27:
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2673:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2674:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2675:Generated_Source\PSoC4/CyLib.c **** *
2676:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2677:Generated_Source\PSoC4/CyLib.c **** *
2678:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2679:Generated_Source\PSoC4/CyLib.c **** *
2680:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2681:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2682:Generated_Source\PSoC4/CyLib.c **** {
 1006              		.loc 1 2682 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL71:
 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
 1014              		.cfi_offset 14, -4
 1015 0002 0400     		movs	r4, r0
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1016              		.loc 1 2683 0
 1017 0004 06E0     		b	.L76
 1018              	.LVL72:
 1019              	.L77:
2684:Generated_Source\PSoC4/CyLib.c ****     {
2685:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2686:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2687:Generated_Source\PSoC4/CyLib.c ****          */
2688:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1020              		.loc 1 2688 0
 1021 0006 084B     		ldr	r3, .L78
 1022 0008 5868     		ldr	r0, [r3, #4]
 1023 000a FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL73:
2689:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1025              		.loc 1 2689 0
 1026 000e 074B     		ldr	r3, .L78+4
 1027 0010 9C46     		mov	ip, r3
 1028 0012 6444     		add	r4, r4, ip
 1029              	.LVL74:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 67


 1030              	.L76:
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 2683 0
 1032 0014 8023     		movs	r3, #128
 1033 0016 1B02     		lsls	r3, r3, #8
 1034 0018 9C42     		cmp	r4, r3
 1035 001a F4D8     		bhi	.L77
2690:Generated_Source\PSoC4/CyLib.c ****     }
2691:Generated_Source\PSoC4/CyLib.c **** 
2692:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1036              		.loc 1 2692 0
 1037 001c 024B     		ldr	r3, .L78
 1038 001e 9868     		ldr	r0, [r3, #8]
 1039 0020 6043     		muls	r0, r4
 1040 0022 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL75:
2693:Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 2693 0
 1043              		@ sp needed
 1044              	.LVL76:
 1045 0026 10BD     		pop	{r4, pc}
 1046              	.L79:
 1047              		.align	2
 1048              	.L78:
 1049 0028 00000000 		.word	.LANCHOR0
 1050 002c 0080FFFF 		.word	-32768
 1051              		.cfi_endproc
 1052              	.LFE27:
 1053              		.size	CyDelay, .-CyDelay
 1054              		.section	.text.CyDelayUs,"ax",%progbits
 1055              		.align	2
 1056              		.global	CyDelayUs
 1057              		.code	16
 1058              		.thumb_func
 1059              		.type	CyDelayUs, %function
 1060              	CyDelayUs:
 1061              	.LFB28:
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2697:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2698:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2699:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1062              		.loc 1 2705 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL77:
 1067 0000 10B5     		push	{r4, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 4, -8
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 68


 1070              		.cfi_offset 14, -4
2706:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1071              		.loc 1 2706 0
 1072 0002 034B     		ldr	r3, .L81
 1073 0004 1B7B     		ldrb	r3, [r3, #12]
 1074 0006 5843     		muls	r0, r3
 1075              	.LVL78:
 1076 0008 FFF7FEFF 		bl	CyDelayCycles
 1077              	.LVL79:
2707:Generated_Source\PSoC4/CyLib.c **** }
 1078              		.loc 1 2707 0
 1079              		@ sp needed
 1080 000c 10BD     		pop	{r4, pc}
 1081              	.L82:
 1082 000e C046     		.align	2
 1083              	.L81:
 1084 0010 00000000 		.word	.LANCHOR0
 1085              		.cfi_endproc
 1086              	.LFE28:
 1087              		.size	CyDelayUs, .-CyDelayUs
 1088              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1089              		.align	2
 1090              		.global	CySysClkWriteImoFreq
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CySysClkWriteImoFreq, %function
 1094              	CySysClkWriteImoFreq:
 1095              	.LFB6:
 742:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1096              		.loc 1 742 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              	.LVL80:
 1101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1102              		.cfi_def_cfa_offset 20
 1103              		.cfi_offset 4, -20
 1104              		.cfi_offset 5, -16
 1105              		.cfi_offset 6, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 5746     		mov	r7, r10
 1109 0004 4E46     		mov	r6, r9
 1110 0006 C0B4     		push	{r6, r7}
 1111              		.cfi_def_cfa_offset 28
 1112              		.cfi_offset 9, -28
 1113              		.cfi_offset 10, -24
 1114 0008 83B0     		sub	sp, sp, #12
 1115              		.cfi_def_cfa_offset 40
 1116 000a 0400     		movs	r4, r0
 764:Generated_Source\PSoC4/CyLib.c **** 
 1117              		.loc 1 764 0
 1118 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1119              	.LVL81:
 1120 0010 0190     		str	r0, [sp, #4]
 1121              	.LVL82:
 814:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 69


 1122              		.loc 1 814 0
 1123 0012 E71E     		subs	r7, r4, #3
 1124 0014 2D2F     		cmp	r7, #45
 1125 0016 74D8     		bhi	.L84
 816:Generated_Source\PSoC4/CyLib.c ****             {
 1126              		.loc 1 816 0
 1127 0018 3F4B     		ldr	r3, .L94
 1128 001a 1B78     		ldrb	r3, [r3]
 1129 001c DBB2     		uxtb	r3, r3
 1130 001e 9C42     		cmp	r4, r3
 1131 0020 08D8     		bhi	.L85
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1132              		.loc 1 818 0
 1133 0022 3E4B     		ldr	r3, .L94+4
 1134 0024 1B78     		ldrb	r3, [r3]
 1135 0026 DBB2     		uxtb	r3, r3
 1136 0028 9A46     		mov	r10, r3
 1137              	.LVL83:
 819:Generated_Source\PSoC4/CyLib.c ****             }
 1138              		.loc 1 819 0
 1139 002a 3D4B     		ldr	r3, .L94+8
 1140 002c 1B78     		ldrb	r3, [r3]
 1141 002e DBB2     		uxtb	r3, r3
 1142 0030 9946     		mov	r9, r3
 1143              	.LVL84:
 1144 0032 31E0     		b	.L86
 1145              	.LVL85:
 1146              	.L85:
 821:Generated_Source\PSoC4/CyLib.c ****             {
 1147              		.loc 1 821 0
 1148 0034 3B4B     		ldr	r3, .L94+12
 1149 0036 1B78     		ldrb	r3, [r3]
 1150 0038 DBB2     		uxtb	r3, r3
 1151 003a 9C42     		cmp	r4, r3
 1152 003c 08D8     		bhi	.L87
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1153              		.loc 1 823 0
 1154 003e 3A4B     		ldr	r3, .L94+16
 1155 0040 1B78     		ldrb	r3, [r3]
 1156 0042 DBB2     		uxtb	r3, r3
 1157 0044 9A46     		mov	r10, r3
 1158              	.LVL86:
 824:Generated_Source\PSoC4/CyLib.c ****             }
 1159              		.loc 1 824 0
 1160 0046 394B     		ldr	r3, .L94+20
 1161 0048 1B78     		ldrb	r3, [r3]
 1162 004a DBB2     		uxtb	r3, r3
 1163 004c 9946     		mov	r9, r3
 1164              	.LVL87:
 1165 004e 23E0     		b	.L86
 1166              	.LVL88:
 1167              	.L87:
 826:Generated_Source\PSoC4/CyLib.c ****             {
 1168              		.loc 1 826 0
 1169 0050 374B     		ldr	r3, .L94+24
 1170 0052 1B78     		ldrb	r3, [r3]
 1171 0054 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 70


 1172 0056 9C42     		cmp	r4, r3
 1173 0058 08D8     		bhi	.L88
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1174              		.loc 1 828 0
 1175 005a 364B     		ldr	r3, .L94+28
 1176 005c 1B78     		ldrb	r3, [r3]
 1177 005e DBB2     		uxtb	r3, r3
 1178 0060 9A46     		mov	r10, r3
 1179              	.LVL89:
 829:Generated_Source\PSoC4/CyLib.c ****             }
 1180              		.loc 1 829 0
 1181 0062 354B     		ldr	r3, .L94+32
 1182 0064 1B78     		ldrb	r3, [r3]
 1183 0066 DBB2     		uxtb	r3, r3
 1184 0068 9946     		mov	r9, r3
 1185              	.LVL90:
 1186 006a 15E0     		b	.L86
 1187              	.LVL91:
 1188              	.L88:
 831:Generated_Source\PSoC4/CyLib.c ****             {
 1189              		.loc 1 831 0
 1190 006c 334B     		ldr	r3, .L94+36
 1191 006e 1B78     		ldrb	r3, [r3]
 1192 0070 DBB2     		uxtb	r3, r3
 1193 0072 9C42     		cmp	r4, r3
 1194 0074 08D8     		bhi	.L89
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1195              		.loc 1 833 0
 1196 0076 324B     		ldr	r3, .L94+40
 1197 0078 1B78     		ldrb	r3, [r3]
 1198 007a DBB2     		uxtb	r3, r3
 1199 007c 9A46     		mov	r10, r3
 1200              	.LVL92:
 834:Generated_Source\PSoC4/CyLib.c ****             }
 1201              		.loc 1 834 0
 1202 007e 314B     		ldr	r3, .L94+44
 1203 0080 1B78     		ldrb	r3, [r3]
 1204 0082 DBB2     		uxtb	r3, r3
 1205 0084 9946     		mov	r9, r3
 1206              	.LVL93:
 1207 0086 07E0     		b	.L86
 1208              	.LVL94:
 1209              	.L89:
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1210              		.loc 1 838 0
 1211 0088 2F4B     		ldr	r3, .L94+48
 1212 008a 1B78     		ldrb	r3, [r3]
 1213 008c DBB2     		uxtb	r3, r3
 1214 008e 9A46     		mov	r10, r3
 1215              	.LVL95:
 839:Generated_Source\PSoC4/CyLib.c ****             }
 1216              		.loc 1 839 0
 1217 0090 2E4B     		ldr	r3, .L94+52
 1218 0092 1B78     		ldrb	r3, [r3]
 1219 0094 DBB2     		uxtb	r3, r3
 1220 0096 9946     		mov	r9, r3
 1221              	.LVL96:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 71


 1222              	.L86:
 843:Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 843 0
 1224 0098 2D4B     		ldr	r3, .L94+56
 1225 009a DE5D     		ldrb	r6, [r3, r7]
 1226              	.LVL97:
 855:Generated_Source\PSoC4/CyLib.c ****             {
 1227              		.loc 1 855 0
 1228 009c 2F2E     		cmp	r6, #47
 1229 009e 09D9     		bls	.L90
 855:Generated_Source\PSoC4/CyLib.c ****             {
 1230              		.loc 1 855 0 is_stmt 0 discriminator 1
 1231 00a0 2A2C     		cmp	r4, #42
 1232 00a2 07D9     		bls	.L90
 858:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1233              		.loc 1 858 0 is_stmt 1
 1234 00a4 1922     		movs	r2, #25
 1235 00a6 2B4B     		ldr	r3, .L94+60
 1236 00a8 1A60     		str	r2, [r3]
 1237              	.LVL98:
 861:Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 861 0
 1239 00aa 0520     		movs	r0, #5
 1240 00ac FFF7FEFF 		bl	CyDelayCycles
 1241              	.LVL99:
 863:Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 863 0
 1243 00b0 1925     		movs	r5, #25
 1244 00b2 03E0     		b	.L91
 1245              	.LVL100:
 1246              	.L90:
 867:Generated_Source\PSoC4/CyLib.c ****             }
 1247              		.loc 1 867 0
 1248 00b4 274B     		ldr	r3, .L94+60
 1249 00b6 1D68     		ldr	r5, [r3]
 1250 00b8 3F23     		movs	r3, #63
 1251 00ba 1D40     		ands	r5, r3
 1252              	.LVL101:
 1253              	.L91:
 879:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 879 0
 1255 00bc B542     		cmp	r5, r6
 1256 00be 06D9     		bls	.L92
 882:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1257              		.loc 1 882 0
 1258 00c0 234B     		ldr	r3, .L94+56
 1259 00c2 DA5D     		ldrb	r2, [r3, r7]
 1260 00c4 234B     		ldr	r3, .L94+60
 1261 00c6 1A60     		str	r2, [r3]
 883:Generated_Source\PSoC4/CyLib.c ****             }
 1262              		.loc 1 883 0
 1263 00c8 0520     		movs	r0, #5
 1264 00ca FFF7FEFF 		bl	CyDelayCycles
 1265              	.LVL102:
 1266              	.L92:
 887:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1267              		.loc 1 887 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 72


 1268 00ce 1F4B     		ldr	r3, .L94+52
 1269 00d0 9C46     		mov	ip, r3
 1270 00d2 6444     		add	r4, r4, ip
 1271              	.LVL103:
 1272 00d4 2378     		ldrb	r3, [r4]
 1273 00d6 DBB2     		uxtb	r3, r3
 1274 00d8 1F4A     		ldr	r2, .L94+64
 1275 00da 1360     		str	r3, [r2]
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1276              		.loc 1 888 0
 1277 00dc 1F4B     		ldr	r3, .L94+68
 1278 00de 5246     		mov	r2, r10
 1279 00e0 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1280              		.loc 1 889 0
 1281 00e2 1F4B     		ldr	r3, .L94+72
 1282 00e4 4A46     		mov	r2, r9
 1283 00e6 1A60     		str	r2, [r3]
 890:Generated_Source\PSoC4/CyLib.c **** 
 1284              		.loc 1 890 0
 1285 00e8 0520     		movs	r0, #5
 1286 00ea FFF7FEFF 		bl	CyDelayUs
 1287              	.LVL104:
 892:Generated_Source\PSoC4/CyLib.c ****             {
 1288              		.loc 1 892 0
 1289 00ee B542     		cmp	r5, r6
 1290 00f0 0AD2     		bcs	.L93
 895:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1291              		.loc 1 895 0
 1292 00f2 174B     		ldr	r3, .L94+56
 1293 00f4 DA5D     		ldrb	r2, [r3, r7]
 1294 00f6 174B     		ldr	r3, .L94+60
 1295 00f8 1A60     		str	r2, [r3]
 896:Generated_Source\PSoC4/CyLib.c ****             }
 1296              		.loc 1 896 0
 1297 00fa 0520     		movs	r0, #5
 1298 00fc FFF7FEFF 		bl	CyDelayCycles
 1299              	.LVL105:
 1300 0100 02E0     		b	.L93
 1301              	.LVL106:
 1302              	.L84:
 902:Generated_Source\PSoC4/CyLib.c ****         }
 1303              		.loc 1 902 0 discriminator 1
 1304 0102 0020     		movs	r0, #0
 1305 0104 FFF7FEFF 		bl	CyHalt
 1306              	.LVL107:
 1307              	.L93:
 921:Generated_Source\PSoC4/CyLib.c ****     }
 1308              		.loc 1 921 0
 1309 0108 0198     		ldr	r0, [sp, #4]
 1310 010a FFF7FEFF 		bl	CyExitCriticalSection
 1311              	.LVL108:
 922:Generated_Source\PSoC4/CyLib.c **** 
 1312              		.loc 1 922 0
 1313 010e 03B0     		add	sp, sp, #12
 1314              		@ sp needed
 1315              	.LVL109:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 73


 1316 0110 0CBC     		pop	{r2, r3}
 1317 0112 9146     		mov	r9, r2
 1318 0114 9A46     		mov	r10, r3
 1319 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1320              	.L95:
 1321              		.align	2
 1322              	.L94:
 1323 0118 C0F1FF0F 		.word	268431808
 1324 011c C1F1FF0F 		.word	268431809
 1325 0120 C2F1FF0F 		.word	268431810
 1326 0124 C3F1FF0F 		.word	268431811
 1327 0128 C4F1FF0F 		.word	268431812
 1328 012c C5F1FF0F 		.word	268431813
 1329 0130 C6F1FF0F 		.word	268431814
 1330 0134 C7F1FF0F 		.word	268431815
 1331 0138 C8F1FF0F 		.word	268431816
 1332 013c C9F1FF0F 		.word	268431817
 1333 0140 CAF1FF0F 		.word	268431818
 1334 0144 CBF1FF0F 		.word	268431819
 1335 0148 CCF1FF0F 		.word	268431820
 1336 014c CDF1FF0F 		.word	268431821
 1337 0150 00000000 		.word	.LANCHOR1
 1338 0154 2CFF0B40 		.word	1074528044
 1339 0158 28FF0B40 		.word	1074528040
 1340 015c 1CFF0B40 		.word	1074528028
 1341 0160 20FF0B40 		.word	1074528032
 1342              		.cfi_endproc
 1343              	.LFE6:
 1344              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1345              		.section	.text.CySysLvdEnable,"ax",%progbits
 1346              		.align	2
 1347              		.global	CySysLvdEnable
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	CySysLvdEnable, %function
 1351              	CySysLvdEnable:
 1352              	.LFB7:
2241:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1353              		.loc 1 2241 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              	.LVL110:
 1358 0000 70B5     		push	{r4, r5, r6, lr}
 1359              		.cfi_def_cfa_offset 16
 1360              		.cfi_offset 4, -16
 1361              		.cfi_offset 5, -12
 1362              		.cfi_offset 6, -8
 1363              		.cfi_offset 14, -4
 1364 0002 0300     		movs	r3, r0
2243:Generated_Source\PSoC4/CyLib.c **** 
 1365              		.loc 1 2243 0
 1366 0004 0D4C     		ldr	r4, .L97
 1367 0006 2268     		ldr	r2, [r4]
 1368 0008 0225     		movs	r5, #2
 1369 000a AA43     		bics	r2, r5
 1370 000c 2260     		str	r2, [r4]
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 74


2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1371              		.loc 1 2246 0
 1372 000e 0C4A     		ldr	r2, .L97+4
 1373 0010 1168     		ldr	r1, [r2]
 1374 0012 1E20     		movs	r0, #30
 1375              	.LVL111:
 1376 0014 8143     		bics	r1, r0
2247:Generated_Source\PSoC4/CyLib.c **** 
 1377              		.loc 1 2247 0
 1378 0016 5B00     		lsls	r3, r3, #1
 1379              	.LVL112:
 1380 0018 1840     		ands	r0, r3
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1381              		.loc 1 2246 0
 1382 001a 0843     		orrs	r0, r1
 1383 001c 1060     		str	r0, [r2]
2250:Generated_Source\PSoC4/CyLib.c **** 
 1384              		.loc 1 2250 0
 1385 001e 1168     		ldr	r1, [r2]
 1386 0020 0123     		movs	r3, #1
 1387 0022 0B43     		orrs	r3, r1
 1388 0024 1360     		str	r3, [r2]
2253:Generated_Source\PSoC4/CyLib.c **** 
 1389              		.loc 1 2253 0
 1390 0026 FA20     		movs	r0, #250
 1391 0028 8000     		lsls	r0, r0, #2
 1392 002a FFF7FEFF 		bl	CyDelayUs
 1393              	.LVL113:
2256:Generated_Source\PSoC4/CyLib.c **** 
 1394              		.loc 1 2256 0
 1395 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1396              	.LVL114:
2259:Generated_Source\PSoC4/CyLib.c ****     }
 1397              		.loc 1 2259 0
 1398 0032 2368     		ldr	r3, [r4]
 1399 0034 1D43     		orrs	r5, r3
 1400 0036 2560     		str	r5, [r4]
2260:Generated_Source\PSoC4/CyLib.c **** 
 1401              		.loc 1 2260 0
 1402              		@ sp needed
 1403 0038 70BD     		pop	{r4, r5, r6, pc}
 1404              	.L98:
 1405 003a C046     		.align	2
 1406              	.L97:
 1407 003c 08000B40 		.word	1074462728
 1408 0040 18000B40 		.word	1074462744
 1409              		.cfi_endproc
 1410              	.LFE7:
 1411              		.size	CySysLvdEnable, .-CySysLvdEnable
 1412              		.global	__aeabi_uidiv
 1413              		.section	.text.CyDelayFreq,"ax",%progbits
 1414              		.align	2
 1415              		.global	CyDelayFreq
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	CyDelayFreq, %function
 1419              	CyDelayFreq:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 75


 1420              	.LFB29:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2718:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2719:Generated_Source\PSoC4/CyLib.c **** {
 1421              		.loc 1 2719 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              	.LVL115:
 1426 0000 70B5     		push	{r4, r5, r6, lr}
 1427              		.cfi_def_cfa_offset 16
 1428              		.cfi_offset 4, -16
 1429              		.cfi_offset 5, -12
 1430              		.cfi_offset 6, -8
 1431              		.cfi_offset 14, -4
2720:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1432              		.loc 1 2720 0
 1433 0002 0028     		cmp	r0, #0
 1434 0004 02D0     		beq	.L100
2721:Generated_Source\PSoC4/CyLib.c ****     {
2722:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1435              		.loc 1 2722 0
 1436 0006 0C4B     		ldr	r3, .L102
 1437 0008 1861     		str	r0, [r3, #16]
 1438 000a 02E0     		b	.L101
 1439              	.L100:
2723:Generated_Source\PSoC4/CyLib.c ****     }
2724:Generated_Source\PSoC4/CyLib.c ****     else
2725:Generated_Source\PSoC4/CyLib.c ****     {
2726:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1440              		.loc 1 2726 0
 1441 000c 0B4A     		ldr	r2, .L102+4
 1442 000e 0A4B     		ldr	r3, .L102
 1443 0010 1A61     		str	r2, [r3, #16]
 1444              	.L101:
2727:Generated_Source\PSoC4/CyLib.c ****     }
2728:Generated_Source\PSoC4/CyLib.c **** 
2729:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1445              		.loc 1 2729 0
 1446 0012 094C     		ldr	r4, .L102
 1447 0014 2569     		ldr	r5, [r4, #16]
 1448 0016 0A4B     		ldr	r3, .L102+8
 1449 0018 E818     		adds	r0, r5, r3
 1450              	.LVL116:
 1451 001a 0A49     		ldr	r1, .L102+12
 1452 001c FFF7FEFF 		bl	__aeabi_uidiv
 1453              	.LVL117:
 1454 0020 2073     		strb	r0, [r4, #12]
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 76


2730:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1455              		.loc 1 2730 0
 1456 0022 094B     		ldr	r3, .L102+16
 1457 0024 E818     		adds	r0, r5, r3
 1458 0026 FA21     		movs	r1, #250
 1459 0028 8900     		lsls	r1, r1, #2
 1460 002a FFF7FEFF 		bl	__aeabi_uidiv
 1461              	.LVL118:
 1462 002e A060     		str	r0, [r4, #8]
2731:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1463              		.loc 1 2731 0
 1464 0030 C003     		lsls	r0, r0, #15
 1465 0032 6060     		str	r0, [r4, #4]
2732:Generated_Source\PSoC4/CyLib.c **** }
 1466              		.loc 1 2732 0
 1467              		@ sp needed
 1468 0034 70BD     		pop	{r4, r5, r6, pc}
 1469              	.L103:
 1470 0036 C046     		.align	2
 1471              	.L102:
 1472 0038 00000000 		.word	.LANCHOR0
 1473 003c 00366E01 		.word	24000000
 1474 0040 3F420F00 		.word	999999
 1475 0044 40420F00 		.word	1000000
 1476 0048 E7030000 		.word	999
 1477              		.cfi_endproc
 1478              	.LFE29:
 1479              		.size	CyDelayFreq, .-CyDelayFreq
 1480              		.section	.text.CySysTickStop,"ax",%progbits
 1481              		.align	2
 1482              		.global	CySysTickStop
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CySysTickStop, %function
 1486              	CySysTickStop:
 1487              	.LFB33:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2740:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2743:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2744:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2747:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2748:Generated_Source\PSoC4/CyLib.c **** *
2749:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2750:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2751:Generated_Source\PSoC4/CyLib.c **** {
2752:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2753:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 77


2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2755:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2756:Generated_Source\PSoC4/CyLib.c ****     }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2759:Generated_Source\PSoC4/CyLib.c **** }
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** 
2762:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2763:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2764:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2767:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2768:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2769:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2772:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2773:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2776:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2777:Generated_Source\PSoC4/CyLib.c **** *
2778:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2780:Generated_Source\PSoC4/CyLib.c **** {
2781:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2782:Generated_Source\PSoC4/CyLib.c **** 
2783:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2784:Generated_Source\PSoC4/CyLib.c ****     {
2785:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2786:Generated_Source\PSoC4/CyLib.c ****     }
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2791:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2792:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2793:Generated_Source\PSoC4/CyLib.c **** 
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2795:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2796:Generated_Source\PSoC4/CyLib.c **** }
2797:Generated_Source\PSoC4/CyLib.c **** 
2798:Generated_Source\PSoC4/CyLib.c **** 
2799:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2800:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2801:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2802:Generated_Source\PSoC4/CyLib.c **** *
2803:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2806:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2809:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2810:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 78


2811:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2812:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2813:Generated_Source\PSoC4/CyLib.c **** }
2814:Generated_Source\PSoC4/CyLib.c **** 
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2817:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2818:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2823:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2824:Generated_Source\PSoC4/CyLib.c **** *
2825:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2826:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2827:Generated_Source\PSoC4/CyLib.c **** {
 1488              		.loc 1 2827 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
2828:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1493              		.loc 1 2828 0
 1494 0000 024A     		ldr	r2, .L105
 1495 0002 1368     		ldr	r3, [r2]
 1496 0004 0121     		movs	r1, #1
 1497 0006 8B43     		bics	r3, r1
 1498 0008 1360     		str	r3, [r2]
2829:Generated_Source\PSoC4/CyLib.c **** }
 1499              		.loc 1 2829 0
 1500              		@ sp needed
 1501 000a 7047     		bx	lr
 1502              	.L106:
 1503              		.align	2
 1504              	.L105:
 1505 000c 10E000E0 		.word	-536813552
 1506              		.cfi_endproc
 1507              	.LFE33:
 1508              		.size	CySysTickStop, .-CySysTickStop
 1509              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1510              		.align	2
 1511              		.global	CySysTickEnableInterrupt
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	CySysTickEnableInterrupt, %function
 1515              	CySysTickEnableInterrupt:
 1516              	.LFB34:
2830:Generated_Source\PSoC4/CyLib.c **** 
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2833:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2834:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2835:Generated_Source\PSoC4/CyLib.c **** *
2836:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2837:Generated_Source\PSoC4/CyLib.c **** *
2838:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 79


2839:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2840:Generated_Source\PSoC4/CyLib.c **** *
2841:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2843:Generated_Source\PSoC4/CyLib.c **** {
 1517              		.loc 1 2843 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1522              		.loc 1 2844 0
 1523 0000 024A     		ldr	r2, .L108
 1524 0002 1168     		ldr	r1, [r2]
 1525 0004 0223     		movs	r3, #2
 1526 0006 0B43     		orrs	r3, r1
 1527 0008 1360     		str	r3, [r2]
2845:Generated_Source\PSoC4/CyLib.c **** }
 1528              		.loc 1 2845 0
 1529              		@ sp needed
 1530 000a 7047     		bx	lr
 1531              	.L109:
 1532              		.align	2
 1533              	.L108:
 1534 000c 10E000E0 		.word	-536813552
 1535              		.cfi_endproc
 1536              	.LFE34:
 1537              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1538              		.section	.text.CySysTickEnable,"ax",%progbits
 1539              		.align	2
 1540              		.global	CySysTickEnable
 1541              		.code	16
 1542              		.thumb_func
 1543              		.type	CySysTickEnable, %function
 1544              	CySysTickEnable:
 1545              	.LFB32:
2810:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1546              		.loc 1 2810 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550 0000 10B5     		push	{r4, lr}
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 4, -8
 1553              		.cfi_offset 14, -4
2811:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1554              		.loc 1 2811 0
 1555 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1556              	.LVL119:
2812:Generated_Source\PSoC4/CyLib.c **** }
 1557              		.loc 1 2812 0
 1558 0006 034A     		ldr	r2, .L111
 1559 0008 1168     		ldr	r1, [r2]
 1560 000a 0123     		movs	r3, #1
 1561 000c 0B43     		orrs	r3, r1
 1562 000e 1360     		str	r3, [r2]
2813:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 80


 1563              		.loc 1 2813 0
 1564              		@ sp needed
 1565 0010 10BD     		pop	{r4, pc}
 1566              	.L112:
 1567 0012 C046     		.align	2
 1568              	.L111:
 1569 0014 10E000E0 		.word	-536813552
 1570              		.cfi_endproc
 1571              	.LFE32:
 1572              		.size	CySysTickEnable, .-CySysTickEnable
 1573              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1574              		.align	2
 1575              		.global	CySysTickDisableInterrupt
 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	CySysTickDisableInterrupt, %function
 1579              	CySysTickDisableInterrupt:
 1580              	.LFB35:
2846:Generated_Source\PSoC4/CyLib.c **** 
2847:Generated_Source\PSoC4/CyLib.c **** 
2848:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2849:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2850:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2855:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2858:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2859:Generated_Source\PSoC4/CyLib.c **** {
 1581              		.loc 1 2859 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
2860:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1586              		.loc 1 2860 0
 1587 0000 024A     		ldr	r2, .L114
 1588 0002 1368     		ldr	r3, [r2]
 1589 0004 0221     		movs	r1, #2
 1590 0006 8B43     		bics	r3, r1
 1591 0008 1360     		str	r3, [r2]
2861:Generated_Source\PSoC4/CyLib.c **** }
 1592              		.loc 1 2861 0
 1593              		@ sp needed
 1594 000a 7047     		bx	lr
 1595              	.L115:
 1596              		.align	2
 1597              	.L114:
 1598 000c 10E000E0 		.word	-536813552
 1599              		.cfi_endproc
 1600              	.LFE35:
 1601              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1602              		.section	.text.CySysTickSetReload,"ax",%progbits
 1603              		.align	2
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 81


 1604              		.global	CySysTickSetReload
 1605              		.code	16
 1606              		.thumb_func
 1607              		.type	CySysTickSetReload, %function
 1608              	CySysTickSetReload:
 1609              	.LFB36:
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c **** 
2864:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2865:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2866:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2869:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2870:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2871:Generated_Source\PSoC4/CyLib.c **** *
2872:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2873:Generated_Source\PSoC4/CyLib.c **** *
2874:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2875:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2876:Generated_Source\PSoC4/CyLib.c **** {
 1610              		.loc 1 2876 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615              	.LVL120:
2877:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1616              		.loc 1 2877 0
 1617 0000 0002     		lsls	r0, r0, #8
 1618              	.LVL121:
 1619 0002 000A     		lsrs	r0, r0, #8
 1620 0004 014B     		ldr	r3, .L117
 1621 0006 1860     		str	r0, [r3]
2878:Generated_Source\PSoC4/CyLib.c **** }
 1622              		.loc 1 2878 0
 1623              		@ sp needed
 1624 0008 7047     		bx	lr
 1625              	.L118:
 1626 000a C046     		.align	2
 1627              	.L117:
 1628 000c 14E000E0 		.word	-536813548
 1629              		.cfi_endproc
 1630              	.LFE36:
 1631              		.size	CySysTickSetReload, .-CySysTickSetReload
 1632              		.section	.text.CySysTickGetReload,"ax",%progbits
 1633              		.align	2
 1634              		.global	CySysTickGetReload
 1635              		.code	16
 1636              		.thumb_func
 1637              		.type	CySysTickGetReload, %function
 1638              	CySysTickGetReload:
 1639              	.LFB37:
2879:Generated_Source\PSoC4/CyLib.c **** 
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2882:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 82


2883:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2884:Generated_Source\PSoC4/CyLib.c **** *
2885:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2886:Generated_Source\PSoC4/CyLib.c **** *
2887:Generated_Source\PSoC4/CyLib.c **** * \return
2888:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2889:Generated_Source\PSoC4/CyLib.c **** *
2890:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2891:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2892:Generated_Source\PSoC4/CyLib.c **** {
 1640              		.loc 1 2892 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              		@ link register save eliminated.
2893:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1645              		.loc 1 2893 0
 1646 0000 024B     		ldr	r3, .L120
 1647 0002 1868     		ldr	r0, [r3]
 1648 0004 0002     		lsls	r0, r0, #8
 1649 0006 000A     		lsrs	r0, r0, #8
2894:Generated_Source\PSoC4/CyLib.c **** }
 1650              		.loc 1 2894 0
 1651              		@ sp needed
 1652 0008 7047     		bx	lr
 1653              	.L121:
 1654 000a C046     		.align	2
 1655              	.L120:
 1656 000c 14E000E0 		.word	-536813548
 1657              		.cfi_endproc
 1658              	.LFE37:
 1659              		.size	CySysTickGetReload, .-CySysTickGetReload
 1660              		.section	.text.CySysTickGetValue,"ax",%progbits
 1661              		.align	2
 1662              		.global	CySysTickGetValue
 1663              		.code	16
 1664              		.thumb_func
 1665              		.type	CySysTickGetValue, %function
 1666              	CySysTickGetValue:
 1667              	.LFB38:
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** 
2897:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2898:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2899:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2902:Generated_Source\PSoC4/CyLib.c **** *
2903:Generated_Source\PSoC4/CyLib.c **** * \return
2904:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2908:Generated_Source\PSoC4/CyLib.c **** {
 1668              		.loc 1 2908 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 83


 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              		@ link register save eliminated.
2909:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1673              		.loc 1 2909 0
 1674 0000 024B     		ldr	r3, .L123
 1675 0002 1868     		ldr	r0, [r3]
 1676 0004 0002     		lsls	r0, r0, #8
 1677 0006 000A     		lsrs	r0, r0, #8
2910:Generated_Source\PSoC4/CyLib.c **** }
 1678              		.loc 1 2910 0
 1679              		@ sp needed
 1680 0008 7047     		bx	lr
 1681              	.L124:
 1682 000a C046     		.align	2
 1683              	.L123:
 1684 000c 18E000E0 		.word	-536813544
 1685              		.cfi_endproc
 1686              	.LFE38:
 1687              		.size	CySysTickGetValue, .-CySysTickGetValue
 1688              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1689              		.align	2
 1690              		.global	CySysTickGetCountFlag
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CySysTickGetCountFlag, %function
 1694              	CySysTickGetCountFlag:
 1695              	.LFB39:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2914:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2915:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2916:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2917:Generated_Source\PSoC4/CyLib.c ****     *
2918:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2919:Generated_Source\PSoC4/CyLib.c ****     *
2920:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2921:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2922:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2923:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2924:Generated_Source\PSoC4/CyLib.c ****     *
2925:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2926:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2927:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2928:Generated_Source\PSoC4/CyLib.c ****     *
2929:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2930:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2931:Generated_Source\PSoC4/CyLib.c ****     *
2932:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2933:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2934:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2935:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2936:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2937:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2938:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2939:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2940:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 84


2941:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2942:Generated_Source\PSoC4/CyLib.c ****         {
2943:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2944:Generated_Source\PSoC4/CyLib.c ****         }
2945:Generated_Source\PSoC4/CyLib.c ****         else
2946:Generated_Source\PSoC4/CyLib.c ****         {
2947:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2948:Generated_Source\PSoC4/CyLib.c ****         }
2949:Generated_Source\PSoC4/CyLib.c ****     }
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c ****     
2952:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2954:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c ****     *
2956:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2959:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2961:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2963:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2964:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2965:Generated_Source\PSoC4/CyLib.c ****     {
2966:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2967:Generated_Source\PSoC4/CyLib.c ****     }
2968:Generated_Source\PSoC4/CyLib.c ****     
2969:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2977:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2978:Generated_Source\PSoC4/CyLib.c **** *
2979:Generated_Source\PSoC4/CyLib.c **** * \return
2980:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *
2983:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2984:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2985:Generated_Source\PSoC4/CyLib.c **** *
2986:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2987:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2988:Generated_Source\PSoC4/CyLib.c **** {
 1696              		.loc 1 2988 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
2989:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1701              		.loc 1 2989 0
 1702 0000 024B     		ldr	r3, .L126
 1703 0002 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 85


 1704 0004 000C     		lsrs	r0, r0, #16
 1705 0006 0123     		movs	r3, #1
 1706 0008 1840     		ands	r0, r3
2990:Generated_Source\PSoC4/CyLib.c **** }
 1707              		.loc 1 2990 0
 1708              		@ sp needed
 1709 000a 7047     		bx	lr
 1710              	.L127:
 1711              		.align	2
 1712              	.L126:
 1713 000c 10E000E0 		.word	-536813552
 1714              		.cfi_endproc
 1715              	.LFE39:
 1716              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1717              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1718              		.align	2
 1719              		.code	16
 1720              		.thumb_func
 1721              		.type	CySysTickServiceCallbacks, %function
 1722              	CySysTickServiceCallbacks:
 1723              	.LFB43:
2991:Generated_Source\PSoC4/CyLib.c **** 
2992:Generated_Source\PSoC4/CyLib.c **** 
2993:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2994:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2995:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2996:Generated_Source\PSoC4/CyLib.c **** *
2997:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3000:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3001:Generated_Source\PSoC4/CyLib.c **** {
3002:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3003:Generated_Source\PSoC4/CyLib.c **** }
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3011:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3012:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3015:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3016:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3017:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3018:Generated_Source\PSoC4/CyLib.c **** *  functions.
3019:Generated_Source\PSoC4/CyLib.c **** *
3020:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3021:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3024:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3025:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3026:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 86


3027:Generated_Source\PSoC4/CyLib.c **** * \return
3028:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3029:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3032:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3033:Generated_Source\PSoC4/CyLib.c **** *
3034:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3036:Generated_Source\PSoC4/CyLib.c **** {
3037:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3040:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3041:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3042:Generated_Source\PSoC4/CyLib.c **** }
3043:Generated_Source\PSoC4/CyLib.c **** 
3044:Generated_Source\PSoC4/CyLib.c **** 
3045:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3046:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3047:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3050:Generated_Source\PSoC4/CyLib.c **** *
3051:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3052:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** * \return
3055:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3056:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3060:Generated_Source\PSoC4/CyLib.c **** {
3061:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3062:Generated_Source\PSoC4/CyLib.c **** }
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3066:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3067:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3073:Generated_Source\PSoC4/CyLib.c **** {
 1724              		.loc 1 3073 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728 0000 10B5     		push	{r4, lr}
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 4, -8
 1731              		.cfi_offset 14, -4
3074:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3075:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 87


3076:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3077:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1732              		.loc 1 3077 0
 1733 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1734              	.LVL122:
 1735 0006 0128     		cmp	r0, #1
 1736 0008 0BD1     		bne	.L128
 1737 000a 07E0     		b	.L133
 1738              	.LVL123:
 1739              	.L132:
3078:Generated_Source\PSoC4/CyLib.c ****     {
3079:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3080:Generated_Source\PSoC4/CyLib.c ****         {
3081:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1740              		.loc 1 3081 0
 1741 000c A300     		lsls	r3, r4, #2
 1742 000e 054A     		ldr	r2, .L134
 1743 0010 9B58     		ldr	r3, [r3, r2]
 1744 0012 002B     		cmp	r3, #0
 1745 0014 00D0     		beq	.L131
3082:Generated_Source\PSoC4/CyLib.c ****             {
3083:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1746              		.loc 1 3083 0
 1747 0016 9847     		blx	r3
 1748              	.LVL124:
 1749              	.L131:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 1750              		.loc 1 3079 0 discriminator 2
 1751 0018 0134     		adds	r4, r4, #1
 1752              	.LVL125:
 1753 001a 00E0     		b	.L129
 1754              	.LVL126:
 1755              	.L133:
 1756 001c 0024     		movs	r4, #0
 1757              	.L129:
 1758              	.LVL127:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 1759              		.loc 1 3079 0 is_stmt 0 discriminator 1
 1760 001e 042C     		cmp	r4, #4
 1761 0020 F4D9     		bls	.L132
 1762              	.LVL128:
 1763              	.L128:
3084:Generated_Source\PSoC4/CyLib.c ****             }
3085:Generated_Source\PSoC4/CyLib.c ****         }
3086:Generated_Source\PSoC4/CyLib.c ****     }
3087:Generated_Source\PSoC4/CyLib.c **** }
 1764              		.loc 1 3087 0 is_stmt 1
 1765              		@ sp needed
 1766 0022 10BD     		pop	{r4, pc}
 1767              	.L135:
 1768              		.align	2
 1769              	.L134:
 1770 0024 00000000 		.word	.LANCHOR2
 1771              		.cfi_endproc
 1772              	.LFE43:
 1773              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1774              		.section	.text.CySysTickClear,"ax",%progbits
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 88


 1775              		.align	2
 1776              		.global	CySysTickClear
 1777              		.code	16
 1778              		.thumb_func
 1779              		.type	CySysTickClear, %function
 1780              	CySysTickClear:
 1781              	.LFB40:
3001:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1782              		.loc 1 3001 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
3002:Generated_Source\PSoC4/CyLib.c **** }
 1787              		.loc 1 3002 0
 1788 0000 0022     		movs	r2, #0
 1789 0002 014B     		ldr	r3, .L137
 1790 0004 1A60     		str	r2, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** 
 1791              		.loc 1 3003 0
 1792              		@ sp needed
 1793 0006 7047     		bx	lr
 1794              	.L138:
 1795              		.align	2
 1796              	.L137:
 1797 0008 18E000E0 		.word	-536813544
 1798              		.cfi_endproc
 1799              	.LFE40:
 1800              		.size	CySysTickClear, .-CySysTickClear
 1801              		.section	.text.CySysTickInit,"ax",%progbits
 1802              		.align	2
 1803              		.global	CySysTickInit
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	CySysTickInit, %function
 1807              	CySysTickInit:
 1808              	.LFB31:
2780:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1809              		.loc 1 2780 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813 0000 10B5     		push	{r4, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 4, -8
 1816              		.cfi_offset 14, -4
 1817              	.LVL129:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 1818              		.loc 1 2783 0
 1819 0002 0023     		movs	r3, #0
 1820 0004 04E0     		b	.L140
 1821              	.LVL130:
 1822              	.L141:
2785:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 2785 0 discriminator 3
 1824 0006 9900     		lsls	r1, r3, #2
 1825 0008 0020     		movs	r0, #0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 89


 1826 000a 0A4A     		ldr	r2, .L142
 1827 000c 8850     		str	r0, [r1, r2]
2783:Generated_Source\PSoC4/CyLib.c ****     {
 1828              		.loc 1 2783 0 discriminator 3
 1829 000e 0133     		adds	r3, r3, #1
 1830              	.LVL131:
 1831              	.L140:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 1832              		.loc 1 2783 0 is_stmt 0 discriminator 1
 1833 0010 042B     		cmp	r3, #4
 1834 0012 F8D9     		bls	.L141
2788:Generated_Source\PSoC4/CyLib.c **** 
 1835              		.loc 1 2788 0 is_stmt 1
 1836 0014 0849     		ldr	r1, .L142+4
 1837 0016 0F20     		movs	r0, #15
 1838 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1839              	.LVL132:
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1840              		.loc 1 2794 0
 1841 001c 074B     		ldr	r3, .L142+8
 1842 001e 1869     		ldr	r0, [r3, #16]
 1843 0020 FA21     		movs	r1, #250
 1844 0022 8900     		lsls	r1, r1, #2
 1845 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1846              	.LVL133:
 1847 0028 FFF7FEFF 		bl	CySysTickSetReload
 1848              	.LVL134:
2795:Generated_Source\PSoC4/CyLib.c **** }
 1849              		.loc 1 2795 0
 1850 002c FFF7FEFF 		bl	CySysTickClear
 1851              	.LVL135:
2796:Generated_Source\PSoC4/CyLib.c **** 
 1852              		.loc 1 2796 0
 1853              		@ sp needed
 1854 0030 10BD     		pop	{r4, pc}
 1855              	.L143:
 1856 0032 C046     		.align	2
 1857              	.L142:
 1858 0034 00000000 		.word	.LANCHOR2
 1859 0038 00000000 		.word	CySysTickServiceCallbacks
 1860 003c 00000000 		.word	.LANCHOR0
 1861              		.cfi_endproc
 1862              	.LFE31:
 1863              		.size	CySysTickInit, .-CySysTickInit
 1864              		.section	.text.CySysTickStart,"ax",%progbits
 1865              		.align	2
 1866              		.global	CySysTickStart
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysTickStart, %function
 1870              	CySysTickStart:
 1871              	.LFB30:
2751:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1872              		.loc 1 2751 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 90


 1876 0000 10B5     		push	{r4, lr}
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 4, -8
 1879              		.cfi_offset 14, -4
2752:Generated_Source\PSoC4/CyLib.c ****     {
 1880              		.loc 1 2752 0
 1881 0002 064B     		ldr	r3, .L146
 1882 0004 5B69     		ldr	r3, [r3, #20]
 1883 0006 002B     		cmp	r3, #0
 1884 0008 04D1     		bne	.L145
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1885              		.loc 1 2754 0
 1886 000a FFF7FEFF 		bl	CySysTickInit
 1887              	.LVL136:
2755:Generated_Source\PSoC4/CyLib.c ****     }
 1888              		.loc 1 2755 0
 1889 000e 0122     		movs	r2, #1
 1890 0010 024B     		ldr	r3, .L146
 1891 0012 5A61     		str	r2, [r3, #20]
 1892              	.L145:
2758:Generated_Source\PSoC4/CyLib.c **** }
 1893              		.loc 1 2758 0
 1894 0014 FFF7FEFF 		bl	CySysTickEnable
 1895              	.LVL137:
2759:Generated_Source\PSoC4/CyLib.c **** 
 1896              		.loc 1 2759 0
 1897              		@ sp needed
 1898 0018 10BD     		pop	{r4, pc}
 1899              	.L147:
 1900 001a C046     		.align	2
 1901              	.L146:
 1902 001c 00000000 		.word	.LANCHOR2
 1903              		.cfi_endproc
 1904              	.LFE30:
 1905              		.size	CySysTickStart, .-CySysTickStart
 1906              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1907              		.align	2
 1908              		.global	CySysTickSetCallback
 1909              		.code	16
 1910              		.thumb_func
 1911              		.type	CySysTickSetCallback, %function
 1912              	CySysTickSetCallback:
 1913              	.LFB41:
3036:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1914              		.loc 1 3036 0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918              		@ link register save eliminated.
 1919              	.LVL138:
3039:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1920              		.loc 1 3039 0
 1921 0000 024A     		ldr	r2, .L149
 1922 0002 8300     		lsls	r3, r0, #2
 1923 0004 9858     		ldr	r0, [r3, r2]
 1924              	.LVL139:
3040:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 91


 1925              		.loc 1 3040 0
 1926 0006 9950     		str	r1, [r3, r2]
3042:Generated_Source\PSoC4/CyLib.c **** 
 1927              		.loc 1 3042 0
 1928              		@ sp needed
 1929 0008 7047     		bx	lr
 1930              	.L150:
 1931 000a C046     		.align	2
 1932              	.L149:
 1933 000c 00000000 		.word	.LANCHOR2
 1934              		.cfi_endproc
 1935              	.LFE41:
 1936              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1937              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1938              		.align	2
 1939              		.global	CySysTickGetCallback
 1940              		.code	16
 1941              		.thumb_func
 1942              		.type	CySysTickGetCallback, %function
 1943              	CySysTickGetCallback:
 1944              	.LFB42:
3060:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1945              		.loc 1 3060 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 0
 1948              		@ frame_needed = 0, uses_anonymous_args = 0
 1949              		@ link register save eliminated.
 1950              	.LVL140:
3061:Generated_Source\PSoC4/CyLib.c **** }
 1951              		.loc 1 3061 0
 1952 0000 8000     		lsls	r0, r0, #2
 1953              	.LVL141:
 1954 0002 014B     		ldr	r3, .L152
 1955 0004 C058     		ldr	r0, [r0, r3]
3062:Generated_Source\PSoC4/CyLib.c **** 
 1956              		.loc 1 3062 0
 1957              		@ sp needed
 1958 0006 7047     		bx	lr
 1959              	.L153:
 1960              		.align	2
 1961              	.L152:
 1962 0008 00000000 		.word	.LANCHOR2
 1963              		.cfi_endproc
 1964              	.LFE42:
 1965              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1966              		.section	.text.CyGetUniqueId,"ax",%progbits
 1967              		.align	2
 1968              		.global	CyGetUniqueId
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CyGetUniqueId, %function
 1972              	CyGetUniqueId:
 1973              	.LFB44:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 92


3092:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c **** *
3094:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3095:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3096:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3097:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3098:Generated_Source\PSoC4/CyLib.c **** *
3099:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3100:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3101:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3102:Generated_Source\PSoC4/CyLib.c **** *
3103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3104:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3105:Generated_Source\PSoC4/CyLib.c **** {
 1974              		.loc 1 3105 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 1979              	.LVL142:
3106:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3107:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1980              		.loc 1 3107 0
 1981 0000 134B     		ldr	r3, .L155
 1982 0002 1B78     		ldrb	r3, [r3]
 1983 0004 DAB2     		uxtb	r2, r3
 1984 0006 0260     		str	r2, [r0]
3108:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1985              		.loc 1 3108 0
 1986 0008 124B     		ldr	r3, .L155+4
 1987 000a 1B78     		ldrb	r3, [r3]
 1988 000c 1B02     		lsls	r3, r3, #8
 1989 000e 1343     		orrs	r3, r2
 1990 0010 0360     		str	r3, [r0]
3109:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1991              		.loc 1 3109 0
 1992 0012 114A     		ldr	r2, .L155+8
 1993 0014 1278     		ldrb	r2, [r2]
 1994 0016 1204     		lsls	r2, r2, #16
 1995 0018 1343     		orrs	r3, r2
 1996 001a 0360     		str	r3, [r0]
3110:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1997              		.loc 1 3110 0
 1998 001c 0F4A     		ldr	r2, .L155+12
 1999 001e 1278     		ldrb	r2, [r2]
 2000 0020 1206     		lsls	r2, r2, #24
 2001 0022 1343     		orrs	r3, r2
 2002 0024 0360     		str	r3, [r0]
3111:Generated_Source\PSoC4/CyLib.c **** 
3112:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2003              		.loc 1 3112 0
 2004 0026 0E4B     		ldr	r3, .L155+16
 2005 0028 1B78     		ldrb	r3, [r3]
 2006 002a DAB2     		uxtb	r2, r3
 2007 002c 4260     		str	r2, [r0, #4]
3113:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2008              		.loc 1 3113 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 93


 2009 002e 0D4B     		ldr	r3, .L155+20
 2010 0030 1B78     		ldrb	r3, [r3]
 2011 0032 1B02     		lsls	r3, r3, #8
 2012 0034 1343     		orrs	r3, r2
 2013 0036 4360     		str	r3, [r0, #4]
3114:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2014              		.loc 1 3114 0
 2015 0038 0B4A     		ldr	r2, .L155+24
 2016 003a 1278     		ldrb	r2, [r2]
 2017 003c 1204     		lsls	r2, r2, #16
 2018 003e 1343     		orrs	r3, r2
 2019 0040 4360     		str	r3, [r0, #4]
3115:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2020              		.loc 1 3115 0
 2021 0042 0A4A     		ldr	r2, .L155+28
 2022 0044 1278     		ldrb	r2, [r2]
 2023 0046 1206     		lsls	r2, r2, #24
 2024 0048 1343     		orrs	r3, r2
 2025 004a 4360     		str	r3, [r0, #4]
3116:Generated_Source\PSoC4/CyLib.c **** #else
3117:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3118:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3119:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3120:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3121:Generated_Source\PSoC4/CyLib.c **** 
3122:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3123:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3124:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3125:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3126:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3127:Generated_Source\PSoC4/CyLib.c **** }
 2026              		.loc 1 3127 0
 2027              		@ sp needed
 2028 004c 7047     		bx	lr
 2029              	.L156:
 2030 004e C046     		.align	2
 2031              	.L155:
 2032 0050 78F1FF0F 		.word	268431736
 2033 0054 79F1FF0F 		.word	268431737
 2034 0058 7AF1FF0F 		.word	268431738
 2035 005c 7BF1FF0F 		.word	268431739
 2036 0060 7CF1FF0F 		.word	268431740
 2037 0064 7DF1FF0F 		.word	268431741
 2038 0068 7EF1FF0F 		.word	268431742
 2039 006c 7FF1FF0F 		.word	268431743
 2040              		.cfi_endproc
 2041              	.LFE44:
 2042              		.size	CyGetUniqueId, .-CyGetUniqueId
 2043              		.global	CySysClkPumpConfig
 2044              		.global	cyImoFreqMhz2Reg
 2045              		.global	CySysTickInitVar
 2046              		.global	cydelay32kMs
 2047              		.global	cydelayFreqMhz
 2048              		.global	cydelayFreqKhz
 2049              		.global	cydelayFreqHz
 2050              		.section	.rodata
 2051              		.align	2
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 94


 2052              		.set	.LANCHOR1,. + 0
 2053              		.type	cyImoFreqMhz2Reg, %object
 2054              		.size	cyImoFreqMhz2Reg, 46
 2055              	cyImoFreqMhz2Reg:
 2056 0000 03       		.byte	3
 2057 0001 04       		.byte	4
 2058 0002 05       		.byte	5
 2059 0003 06       		.byte	6
 2060 0004 07       		.byte	7
 2061 0005 08       		.byte	8
 2062 0006 09       		.byte	9
 2063 0007 0A       		.byte	10
 2064 0008 0B       		.byte	11
 2065 0009 0C       		.byte	12
 2066 000a 0E       		.byte	14
 2067 000b 0F       		.byte	15
 2068 000c 10       		.byte	16
 2069 000d 11       		.byte	17
 2070 000e 12       		.byte	18
 2071 000f 13       		.byte	19
 2072 0010 14       		.byte	20
 2073 0011 15       		.byte	21
 2074 0012 16       		.byte	22
 2075 0013 17       		.byte	23
 2076 0014 18       		.byte	24
 2077 0015 19       		.byte	25
 2078 0016 1B       		.byte	27
 2079 0017 1C       		.byte	28
 2080 0018 1D       		.byte	29
 2081 0019 1E       		.byte	30
 2082 001a 1F       		.byte	31
 2083 001b 20       		.byte	32
 2084 001c 21       		.byte	33
 2085 001d 22       		.byte	34
 2086 001e 23       		.byte	35
 2087 001f 25       		.byte	37
 2088 0020 26       		.byte	38
 2089 0021 27       		.byte	39
 2090 0022 28       		.byte	40
 2091 0023 29       		.byte	41
 2092 0024 2A       		.byte	42
 2093 0025 2B       		.byte	43
 2094 0026 2E       		.byte	46
 2095 0027 2F       		.byte	47
 2096 0028 30       		.byte	48
 2097 0029 31       		.byte	49
 2098 002a 32       		.byte	50
 2099 002b 33       		.byte	51
 2100 002c 34       		.byte	52
 2101 002d 35       		.byte	53
 2102              		.data
 2103              		.align	2
 2104              		.set	.LANCHOR0,. + 0
 2105              		.type	CySysClkPumpConfig, %object
 2106              		.size	CySysClkPumpConfig, 4
 2107              	CySysClkPumpConfig:
 2108 0000 01000000 		.word	1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 95


 2109              		.type	cydelay32kMs, %object
 2110              		.size	cydelay32kMs, 4
 2111              	cydelay32kMs:
 2112 0004 0000E02E 		.word	786432000
 2113              		.type	cydelayFreqKhz, %object
 2114              		.size	cydelayFreqKhz, 4
 2115              	cydelayFreqKhz:
 2116 0008 C05D0000 		.word	24000
 2117              		.type	cydelayFreqMhz, %object
 2118              		.size	cydelayFreqMhz, 1
 2119              	cydelayFreqMhz:
 2120 000c 18       		.byte	24
 2121 000d 000000   		.space	3
 2122              		.type	cydelayFreqHz, %object
 2123              		.size	cydelayFreqHz, 4
 2124              	cydelayFreqHz:
 2125 0010 00366E01 		.word	24000000
 2126              		.bss
 2127              		.align	2
 2128              		.set	.LANCHOR2,. + 0
 2129              		.type	CySysTickCallbacks, %object
 2130              		.size	CySysTickCallbacks, 20
 2131              	CySysTickCallbacks:
 2132 0000 00000000 		.space	20
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2133              		.type	CySysTickInitVar, %object
 2134              		.size	CySysTickInitVar, 4
 2135              	CySysTickInitVar:
 2136 0014 00000000 		.space	4
 2137              		.text
 2138              	.Letext0:
 2139              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2140              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2141              		.section	.debug_info,"",%progbits
 2142              	.Ldebug_info0:
 2143 0000 E80A0000 		.4byte	0xae8
 2144 0004 0400     		.2byte	0x4
 2145 0006 00000000 		.4byte	.Ldebug_abbrev0
 2146 000a 04       		.byte	0x4
 2147 000b 01       		.uleb128 0x1
 2148 000c E1000000 		.4byte	.LASF104
 2149 0010 0C       		.byte	0xc
 2150 0011 71060000 		.4byte	.LASF105
 2151 0015 53000000 		.4byte	.LASF106
 2152 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2153 001d 00000000 		.4byte	0
 2154 0021 00000000 		.4byte	.Ldebug_line0
 2155 0025 02       		.uleb128 0x2
 2156 0026 01       		.byte	0x1
 2157 0027 06       		.byte	0x6
 2158 0028 E9010000 		.4byte	.LASF0
 2159 002c 02       		.uleb128 0x2
 2160 002d 01       		.byte	0x1
 2161 002e 08       		.byte	0x8
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 96


 2162 002f 3D050000 		.4byte	.LASF1
 2163 0033 02       		.uleb128 0x2
 2164 0034 02       		.byte	0x2
 2165 0035 05       		.byte	0x5
 2166 0036 4B050000 		.4byte	.LASF2
 2167 003a 02       		.uleb128 0x2
 2168 003b 02       		.byte	0x2
 2169 003c 07       		.byte	0x7
 2170 003d A1030000 		.4byte	.LASF3
 2171 0041 02       		.uleb128 0x2
 2172 0042 04       		.byte	0x4
 2173 0043 05       		.byte	0x5
 2174 0044 28020000 		.4byte	.LASF4
 2175 0048 02       		.uleb128 0x2
 2176 0049 04       		.byte	0x4
 2177 004a 07       		.byte	0x7
 2178 004b 29030000 		.4byte	.LASF5
 2179 004f 02       		.uleb128 0x2
 2180 0050 08       		.byte	0x8
 2181 0051 05       		.byte	0x5
 2182 0052 DB010000 		.4byte	.LASF6
 2183 0056 02       		.uleb128 0x2
 2184 0057 08       		.byte	0x8
 2185 0058 07       		.byte	0x7
 2186 0059 6F010000 		.4byte	.LASF7
 2187 005d 03       		.uleb128 0x3
 2188 005e 04       		.byte	0x4
 2189 005f 05       		.byte	0x5
 2190 0060 696E7400 		.ascii	"int\000"
 2191 0064 02       		.uleb128 0x2
 2192 0065 04       		.byte	0x4
 2193 0066 07       		.byte	0x7
 2194 0067 0D030000 		.4byte	.LASF8
 2195 006b 04       		.uleb128 0x4
 2196 006c 53020000 		.4byte	.LASF9
 2197 0070 02       		.byte	0x2
 2198 0071 E401     		.2byte	0x1e4
 2199 0073 2C000000 		.4byte	0x2c
 2200 0077 04       		.uleb128 0x4
 2201 0078 17000000 		.4byte	.LASF10
 2202 007c 02       		.byte	0x2
 2203 007d E501     		.2byte	0x1e5
 2204 007f 3A000000 		.4byte	0x3a
 2205 0083 04       		.uleb128 0x4
 2206 0084 93020000 		.4byte	.LASF11
 2207 0088 02       		.byte	0x2
 2208 0089 E601     		.2byte	0x1e6
 2209 008b 48000000 		.4byte	0x48
 2210 008f 02       		.uleb128 0x2
 2211 0090 04       		.byte	0x4
 2212 0091 04       		.byte	0x4
 2213 0092 C0040000 		.4byte	.LASF12
 2214 0096 02       		.uleb128 0x2
 2215 0097 08       		.byte	0x8
 2216 0098 04       		.byte	0x4
 2217 0099 6F020000 		.4byte	.LASF13
 2218 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 97


 2219 009e 01       		.byte	0x1
 2220 009f 08       		.byte	0x8
 2221 00a0 8E050000 		.4byte	.LASF14
 2222 00a4 04       		.uleb128 0x4
 2223 00a5 27050000 		.4byte	.LASF15
 2224 00a9 02       		.byte	0x2
 2225 00aa 8E02     		.2byte	0x28e
 2226 00ac B0000000 		.4byte	0xb0
 2227 00b0 05       		.uleb128 0x5
 2228 00b1 6B000000 		.4byte	0x6b
 2229 00b5 04       		.uleb128 0x4
 2230 00b6 0F040000 		.4byte	.LASF16
 2231 00ba 02       		.byte	0x2
 2232 00bb 9002     		.2byte	0x290
 2233 00bd C1000000 		.4byte	0xc1
 2234 00c1 05       		.uleb128 0x5
 2235 00c2 83000000 		.4byte	0x83
 2236 00c6 04       		.uleb128 0x4
 2237 00c7 93050000 		.4byte	.LASF17
 2238 00cb 02       		.byte	0x2
 2239 00cc A002     		.2byte	0x2a0
 2240 00ce D2000000 		.4byte	0xd2
 2241 00d2 06       		.uleb128 0x6
 2242 00d3 04       		.byte	0x4
 2243 00d4 D8000000 		.4byte	0xd8
 2244 00d8 07       		.uleb128 0x7
 2245 00d9 02       		.uleb128 0x2
 2246 00da 08       		.byte	0x8
 2247 00db 04       		.byte	0x4
 2248 00dc 4C040000 		.4byte	.LASF18
 2249 00e0 02       		.uleb128 0x2
 2250 00e1 04       		.byte	0x4
 2251 00e2 07       		.byte	0x7
 2252 00e3 31040000 		.4byte	.LASF19
 2253 00e7 08       		.uleb128 0x8
 2254 00e8 EB040000 		.4byte	.LASF20
 2255 00ec 03       		.byte	0x3
 2256 00ed F5       		.byte	0xf5
 2257 00ee D2000000 		.4byte	0xd2
 2258 00f2 09       		.uleb128 0x9
 2259 00f3 4F060000 		.4byte	.LASF21
 2260 00f7 01       		.byte	0x1
 2261 00f8 6C       		.byte	0x6c
 2262 00f9 00000000 		.4byte	.LFB0
 2263 00fd 14000000 		.4byte	.LFE0-.LFB0
 2264 0101 01       		.uleb128 0x1
 2265 0102 9C       		.byte	0x9c
 2266 0103 09       		.uleb128 0x9
 2267 0104 56030000 		.4byte	.LASF22
 2268 0108 01       		.byte	0x1
 2269 0109 8C       		.byte	0x8c
 2270 010a 00000000 		.4byte	.LFB1
 2271 010e 10000000 		.4byte	.LFE1-.LFB1
 2272 0112 01       		.uleb128 0x1
 2273 0113 9C       		.byte	0x9c
 2274 0114 0A       		.uleb128 0xa
 2275 0115 27000000 		.4byte	.LASF25
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 98


 2276 0119 01       		.byte	0x1
 2277 011a 0102     		.2byte	0x201
 2278 011c 00000000 		.4byte	.LFB2
 2279 0120 20000000 		.4byte	.LFE2-.LFB2
 2280 0124 01       		.uleb128 0x1
 2281 0125 9C       		.byte	0x9c
 2282 0126 6D010000 		.4byte	0x16d
 2283 012a 0B       		.uleb128 0xb
 2284 012b 73050000 		.4byte	.LASF27
 2285 012f 01       		.byte	0x1
 2286 0130 0102     		.2byte	0x201
 2287 0132 83000000 		.4byte	0x83
 2288 0136 00000000 		.4byte	.LLST0
 2289 013a 0C       		.uleb128 0xc
 2290 013b 06020000 		.4byte	.LASF23
 2291 013f 01       		.byte	0x1
 2292 0140 0302     		.2byte	0x203
 2293 0142 6B000000 		.4byte	0x6b
 2294 0146 2C000000 		.4byte	.LLST1
 2295 014a 0C       		.uleb128 0xc
 2296 014b 9D060000 		.4byte	.LASF24
 2297 014f 01       		.byte	0x1
 2298 0150 0402     		.2byte	0x204
 2299 0152 83000000 		.4byte	0x83
 2300 0156 3F000000 		.4byte	.LLST2
 2301 015a 0D       		.uleb128 0xd
 2302 015b 08000000 		.4byte	.LVL1
 2303 015f CA0A0000 		.4byte	0xaca
 2304 0163 0D       		.uleb128 0xd
 2305 0164 1A000000 		.4byte	.LVL5
 2306 0168 D50A0000 		.4byte	0xad5
 2307 016c 00       		.byte	0
 2308 016d 0A       		.uleb128 0xa
 2309 016e FA030000 		.4byte	.LASF26
 2310 0172 01       		.byte	0x1
 2311 0173 4902     		.2byte	0x249
 2312 0175 00000000 		.4byte	.LFB3
 2313 0179 38000000 		.4byte	.LFE3-.LFB3
 2314 017d 01       		.uleb128 0x1
 2315 017e 9C       		.byte	0x9c
 2316 017f 92010000 		.4byte	0x192
 2317 0183 0E       		.uleb128 0xe
 2318 0184 68020000 		.4byte	.LASF28
 2319 0188 01       		.byte	0x1
 2320 0189 4902     		.2byte	0x249
 2321 018b 83000000 		.4byte	0x83
 2322 018f 01       		.uleb128 0x1
 2323 0190 50       		.byte	0x50
 2324 0191 00       		.byte	0
 2325 0192 0F       		.uleb128 0xf
 2326 0193 9F020000 		.4byte	.LASF34
 2327 0197 01       		.byte	0x1
 2328 0198 6E02     		.2byte	0x26e
 2329 019a 83000000 		.4byte	0x83
 2330 019e 00000000 		.4byte	.LFB4
 2331 01a2 1C000000 		.4byte	.LFE4-.LFB4
 2332 01a6 01       		.uleb128 0x1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 99


 2333 01a7 9C       		.byte	0x9c
 2334 01a8 DF010000 		.4byte	0x1df
 2335 01ac 0C       		.uleb128 0xc
 2336 01ad 06020000 		.4byte	.LASF23
 2337 01b1 01       		.byte	0x1
 2338 01b2 7002     		.2byte	0x270
 2339 01b4 6B000000 		.4byte	0x6b
 2340 01b8 5D000000 		.4byte	.LLST3
 2341 01bc 0C       		.uleb128 0xc
 2342 01bd 68040000 		.4byte	.LASF29
 2343 01c1 01       		.byte	0x1
 2344 01c2 7102     		.2byte	0x271
 2345 01c4 83000000 		.4byte	0x83
 2346 01c8 70000000 		.4byte	.LLST4
 2347 01cc 0D       		.uleb128 0xd
 2348 01cd 06000000 		.4byte	.LVL8
 2349 01d1 CA0A0000 		.4byte	0xaca
 2350 01d5 0D       		.uleb128 0xd
 2351 01d6 12000000 		.4byte	.LVL10
 2352 01da D50A0000 		.4byte	0xad5
 2353 01de 00       		.byte	0
 2354 01df 0A       		.uleb128 0xa
 2355 01e0 B0050000 		.4byte	.LASF30
 2356 01e4 01       		.byte	0x1
 2357 01e5 AB02     		.2byte	0x2ab
 2358 01e7 00000000 		.4byte	.LFB5
 2359 01eb 30000000 		.4byte	.LFE5-.LFB5
 2360 01ef 01       		.uleb128 0x1
 2361 01f0 9C       		.byte	0x9c
 2362 01f1 28020000 		.4byte	0x228
 2363 01f5 0B       		.uleb128 0xb
 2364 01f6 47060000 		.4byte	.LASF31
 2365 01fa 01       		.byte	0x1
 2366 01fb AB02     		.2byte	0x2ab
 2367 01fd 83000000 		.4byte	0x83
 2368 0201 8E000000 		.4byte	.LLST5
 2369 0205 0C       		.uleb128 0xc
 2370 0206 06020000 		.4byte	.LASF23
 2371 020a 01       		.byte	0x1
 2372 020b AD02     		.2byte	0x2ad
 2373 020d 6B000000 		.4byte	0x6b
 2374 0211 BA000000 		.4byte	.LLST6
 2375 0215 0D       		.uleb128 0xd
 2376 0216 08000000 		.4byte	.LVL13
 2377 021a CA0A0000 		.4byte	0xaca
 2378 021e 0D       		.uleb128 0xd
 2379 021f 24000000 		.4byte	.LVL15
 2380 0223 D50A0000 		.4byte	0xad5
 2381 0227 00       		.byte	0
 2382 0228 10       		.uleb128 0x10
 2383 0229 1A060000 		.4byte	.LASF32
 2384 022d 01       		.byte	0x1
 2385 022e DE08     		.2byte	0x8de
 2386 0230 00000000 		.4byte	.LFB8
 2387 0234 20000000 		.4byte	.LFE8-.LFB8
 2388 0238 01       		.uleb128 0x1
 2389 0239 9C       		.byte	0x9c
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 100


 2390 023a 11       		.uleb128 0x11
 2391 023b 3B030000 		.4byte	.LASF80
 2392 023f 01       		.byte	0x1
 2393 0240 F008     		.2byte	0x8f0
 2394 0242 83000000 		.4byte	0x83
 2395 0246 00000000 		.4byte	.LFB9
 2396 024a 10000000 		.4byte	.LFE9-.LFB9
 2397 024e 01       		.uleb128 0x1
 2398 024f 9C       		.byte	0x9c
 2399 0250 10       		.uleb128 0x10
 2400 0251 7C020000 		.4byte	.LASF33
 2401 0255 01       		.byte	0x1
 2402 0256 0009     		.2byte	0x900
 2403 0258 00000000 		.4byte	.LFB10
 2404 025c 0C000000 		.4byte	.LFE10-.LFB10
 2405 0260 01       		.uleb128 0x1
 2406 0261 9C       		.byte	0x9c
 2407 0262 0F       		.uleb128 0xf
 2408 0263 8D030000 		.4byte	.LASF35
 2409 0267 01       		.byte	0x1
 2410 0268 1A09     		.2byte	0x91a
 2411 026a 83000000 		.4byte	0x83
 2412 026e 00000000 		.4byte	.LFB11
 2413 0272 14000000 		.4byte	.LFE11-.LFB11
 2414 0276 01       		.uleb128 0x1
 2415 0277 9C       		.byte	0x9c
 2416 0278 9B020000 		.4byte	0x29b
 2417 027c 0B       		.uleb128 0xb
 2418 027d 87050000 		.4byte	.LASF36
 2419 0281 01       		.byte	0x1
 2420 0282 1A09     		.2byte	0x91a
 2421 0284 83000000 		.4byte	0x83
 2422 0288 CD000000 		.4byte	.LLST7
 2423 028c 12       		.uleb128 0x12
 2424 028d 24040000 		.4byte	.LASF37
 2425 0291 01       		.byte	0x1
 2426 0292 1C09     		.2byte	0x91c
 2427 0294 83000000 		.4byte	0x83
 2428 0298 01       		.uleb128 0x1
 2429 0299 50       		.byte	0x50
 2430 029a 00       		.byte	0
 2431 029b 0F       		.uleb128 0xf
 2432 029c BE000000 		.4byte	.LASF38
 2433 02a0 01       		.byte	0x1
 2434 02a1 3109     		.2byte	0x931
 2435 02a3 83000000 		.4byte	0x83
 2436 02a7 00000000 		.4byte	.LFB12
 2437 02ab 10000000 		.4byte	.LFE12-.LFB12
 2438 02af 01       		.uleb128 0x1
 2439 02b0 9C       		.byte	0x9c
 2440 02b1 C4020000 		.4byte	0x2c4
 2441 02b5 12       		.uleb128 0x12
 2442 02b6 1E000000 		.4byte	.LASF39
 2443 02ba 01       		.byte	0x1
 2444 02bb 3309     		.2byte	0x933
 2445 02bd 83000000 		.4byte	0x83
 2446 02c1 01       		.uleb128 0x1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 101


 2447 02c2 50       		.byte	0x50
 2448 02c3 00       		.byte	0
 2449 02c4 0A       		.uleb128 0xa
 2450 02c5 97010000 		.4byte	.LASF40
 2451 02c9 01       		.byte	0x1
 2452 02ca 4809     		.2byte	0x948
 2453 02cc 00000000 		.4byte	.LFB13
 2454 02d0 0C000000 		.4byte	.LFE13-.LFB13
 2455 02d4 01       		.uleb128 0x1
 2456 02d5 9C       		.byte	0x9c
 2457 02d6 E9020000 		.4byte	0x2e9
 2458 02da 0E       		.uleb128 0xe
 2459 02db 9A020000 		.4byte	.LASF41
 2460 02df 01       		.byte	0x1
 2461 02e0 4809     		.2byte	0x948
 2462 02e2 83000000 		.4byte	0x83
 2463 02e6 01       		.uleb128 0x1
 2464 02e7 50       		.byte	0x50
 2465 02e8 00       		.byte	0
 2466 02e9 0A       		.uleb128 0xa
 2467 02ea 55050000 		.4byte	.LASF42
 2468 02ee 01       		.byte	0x1
 2469 02ef FF09     		.2byte	0x9ff
 2470 02f1 00000000 		.4byte	.LFB20
 2471 02f5 14000000 		.4byte	.LFE20-.LFB20
 2472 02f9 01       		.uleb128 0x1
 2473 02fa 9C       		.byte	0x9c
 2474 02fb 10030000 		.4byte	0x310
 2475 02ff 0B       		.uleb128 0xb
 2476 0300 C3030000 		.4byte	.LASF43
 2477 0304 01       		.byte	0x1
 2478 0305 FF09     		.2byte	0x9ff
 2479 0307 6B000000 		.4byte	0x6b
 2480 030b EB000000 		.4byte	.LLST8
 2481 030f 00       		.byte	0
 2482 0310 0F       		.uleb128 0xf
 2483 0311 CD010000 		.4byte	.LASF44
 2484 0315 01       		.byte	0x1
 2485 0316 110A     		.2byte	0xa11
 2486 0318 6B000000 		.4byte	0x6b
 2487 031c 00000000 		.4byte	.LFB21
 2488 0320 18000000 		.4byte	.LFE21-.LFB21
 2489 0324 01       		.uleb128 0x1
 2490 0325 9C       		.byte	0x9c
 2491 0326 3B030000 		.4byte	0x33b
 2492 032a 0B       		.uleb128 0xb
 2493 032b C3030000 		.4byte	.LASF43
 2494 032f 01       		.byte	0x1
 2495 0330 110A     		.2byte	0xa11
 2496 0332 6B000000 		.4byte	0x6b
 2497 0336 0C010000 		.4byte	.LLST9
 2498 033a 00       		.byte	0
 2499 033b 0A       		.uleb128 0xa
 2500 033c 31020000 		.4byte	.LASF45
 2501 0340 01       		.byte	0x1
 2502 0341 210A     		.2byte	0xa21
 2503 0343 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 102


 2504 0347 14000000 		.4byte	.LFE22-.LFB22
 2505 034b 01       		.uleb128 0x1
 2506 034c 9C       		.byte	0x9c
 2507 034d 62030000 		.4byte	0x362
 2508 0351 0B       		.uleb128 0xb
 2509 0352 C3030000 		.4byte	.LASF43
 2510 0356 01       		.byte	0x1
 2511 0357 210A     		.2byte	0xa21
 2512 0359 6B000000 		.4byte	0x6b
 2513 035d 2D010000 		.4byte	.LLST10
 2514 0361 00       		.byte	0
 2515 0362 0A       		.uleb128 0xa
 2516 0363 7D030000 		.4byte	.LASF46
 2517 0367 01       		.byte	0x1
 2518 0368 2F0A     		.2byte	0xa2f
 2519 036a 00000000 		.4byte	.LFB23
 2520 036e 14000000 		.4byte	.LFE23-.LFB23
 2521 0372 01       		.uleb128 0x1
 2522 0373 9C       		.byte	0x9c
 2523 0374 89030000 		.4byte	0x389
 2524 0378 0B       		.uleb128 0xb
 2525 0379 C3030000 		.4byte	.LASF43
 2526 037d 01       		.byte	0x1
 2527 037e 2F0A     		.2byte	0xa2f
 2528 0380 6B000000 		.4byte	0x6b
 2529 0384 4E010000 		.4byte	.LLST11
 2530 0388 00       		.byte	0
 2531 0389 0A       		.uleb128 0xa
 2532 038a 3A040000 		.4byte	.LASF47
 2533 038e 01       		.byte	0x1
 2534 038f 3E0A     		.2byte	0xa3e
 2535 0391 00000000 		.4byte	.LFB24
 2536 0395 14000000 		.4byte	.LFE24-.LFB24
 2537 0399 01       		.uleb128 0x1
 2538 039a 9C       		.byte	0x9c
 2539 039b B0030000 		.4byte	0x3b0
 2540 039f 0B       		.uleb128 0xb
 2541 03a0 C3030000 		.4byte	.LASF43
 2542 03a4 01       		.byte	0x1
 2543 03a5 3E0A     		.2byte	0xa3e
 2544 03a7 6B000000 		.4byte	0x6b
 2545 03ab 6F010000 		.4byte	.LLST12
 2546 03af 00       		.byte	0
 2547 03b0 0A       		.uleb128 0xa
 2548 03b1 36050000 		.4byte	.LASF48
 2549 03b5 01       		.byte	0x1
 2550 03b6 4D0A     		.2byte	0xa4d
 2551 03b8 00000000 		.4byte	.LFB25
 2552 03bc 04000000 		.4byte	.LFE25-.LFB25
 2553 03c0 01       		.uleb128 0x1
 2554 03c1 9C       		.byte	0x9c
 2555 03c2 D5030000 		.4byte	0x3d5
 2556 03c6 0E       		.uleb128 0xe
 2557 03c7 87050000 		.4byte	.LASF36
 2558 03cb 01       		.byte	0x1
 2559 03cc 4D0A     		.2byte	0xa4d
 2560 03ce 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 103


 2561 03d2 01       		.uleb128 0x1
 2562 03d3 50       		.byte	0x50
 2563 03d4 00       		.byte	0
 2564 03d5 0F       		.uleb128 0xf
 2565 03d6 E8030000 		.4byte	.LASF49
 2566 03da 01       		.byte	0x1
 2567 03db 6109     		.2byte	0x961
 2568 03dd C6000000 		.4byte	0xc6
 2569 03e1 00000000 		.4byte	.LFB14
 2570 03e5 20000000 		.4byte	.LFE14-.LFB14
 2571 03e9 01       		.uleb128 0x1
 2572 03ea 9C       		.byte	0x9c
 2573 03eb 3D040000 		.4byte	0x43d
 2574 03ef 0B       		.uleb128 0xb
 2575 03f0 C3030000 		.4byte	.LASF43
 2576 03f4 01       		.byte	0x1
 2577 03f5 6109     		.2byte	0x961
 2578 03f7 6B000000 		.4byte	0x6b
 2579 03fb 90010000 		.4byte	.LLST13
 2580 03ff 0B       		.uleb128 0xb
 2581 0400 58040000 		.4byte	.LASF50
 2582 0404 01       		.byte	0x1
 2583 0405 6109     		.2byte	0x961
 2584 0407 C6000000 		.4byte	0xc6
 2585 040b B1010000 		.4byte	.LLST14
 2586 040f 12       		.uleb128 0x12
 2587 0410 B0000000 		.4byte	.LASF51
 2588 0414 01       		.byte	0x1
 2589 0415 6309     		.2byte	0x963
 2590 0417 C6000000 		.4byte	0xc6
 2591 041b 01       		.uleb128 0x1
 2592 041c 50       		.byte	0x50
 2593 041d 13       		.uleb128 0x13
 2594 041e 00000000 		.4byte	.LASF52
 2595 0422 01       		.byte	0x1
 2596 0423 6409     		.2byte	0x964
 2597 0425 3D040000 		.4byte	0x43d
 2598 0429 00000020 		.4byte	0x20000000
 2599 042d 14       		.uleb128 0x14
 2600 042e 10000000 		.4byte	.LVL36
 2601 0432 B0030000 		.4byte	0x3b0
 2602 0436 15       		.uleb128 0x15
 2603 0437 01       		.uleb128 0x1
 2604 0438 50       		.byte	0x50
 2605 0439 01       		.uleb128 0x1
 2606 043a 30       		.byte	0x30
 2607 043b 00       		.byte	0
 2608 043c 00       		.byte	0
 2609 043d 06       		.uleb128 0x6
 2610 043e 04       		.byte	0x4
 2611 043f C6000000 		.4byte	0xc6
 2612 0443 0F       		.uleb128 0xf
 2613 0444 61050000 		.4byte	.LASF53
 2614 0448 01       		.byte	0x1
 2615 0449 8309     		.2byte	0x983
 2616 044b C6000000 		.4byte	0xc6
 2617 044f 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 104


 2618 0453 1C000000 		.4byte	.LFE15-.LFB15
 2619 0457 01       		.uleb128 0x1
 2620 0458 9C       		.byte	0x9c
 2621 0459 8D040000 		.4byte	0x48d
 2622 045d 0B       		.uleb128 0xb
 2623 045e C3030000 		.4byte	.LASF43
 2624 0462 01       		.byte	0x1
 2625 0463 8309     		.2byte	0x983
 2626 0465 6B000000 		.4byte	0x6b
 2627 0469 DD010000 		.4byte	.LLST15
 2628 046d 13       		.uleb128 0x13
 2629 046e 00000000 		.4byte	.LASF52
 2630 0472 01       		.byte	0x1
 2631 0473 8509     		.2byte	0x985
 2632 0475 3D040000 		.4byte	0x43d
 2633 0479 00000020 		.4byte	0x20000000
 2634 047d 14       		.uleb128 0x14
 2635 047e 0E000000 		.4byte	.LVL42
 2636 0482 B0030000 		.4byte	0x3b0
 2637 0486 15       		.uleb128 0x15
 2638 0487 01       		.uleb128 0x1
 2639 0488 50       		.byte	0x50
 2640 0489 01       		.uleb128 0x1
 2641 048a 30       		.byte	0x30
 2642 048b 00       		.byte	0
 2643 048c 00       		.byte	0
 2644 048d 0F       		.uleb128 0xf
 2645 048e B4030000 		.4byte	.LASF54
 2646 0492 01       		.byte	0x1
 2647 0493 9909     		.2byte	0x999
 2648 0495 C6000000 		.4byte	0xc6
 2649 0499 00000000 		.4byte	.LFB16
 2650 049d 22000000 		.4byte	.LFE16-.LFB16
 2651 04a1 01       		.uleb128 0x1
 2652 04a2 9C       		.byte	0x9c
 2653 04a3 F5040000 		.4byte	0x4f5
 2654 04a7 0B       		.uleb128 0xb
 2655 04a8 C3030000 		.4byte	.LASF43
 2656 04ac 01       		.byte	0x1
 2657 04ad 9909     		.2byte	0x999
 2658 04af 6B000000 		.4byte	0x6b
 2659 04b3 FE010000 		.4byte	.LLST16
 2660 04b7 0B       		.uleb128 0xb
 2661 04b8 58040000 		.4byte	.LASF50
 2662 04bc 01       		.byte	0x1
 2663 04bd 9909     		.2byte	0x999
 2664 04bf C6000000 		.4byte	0xc6
 2665 04c3 1F020000 		.4byte	.LLST17
 2666 04c7 12       		.uleb128 0x12
 2667 04c8 B0000000 		.4byte	.LASF51
 2668 04cc 01       		.byte	0x1
 2669 04cd 9B09     		.2byte	0x99b
 2670 04cf C6000000 		.4byte	0xc6
 2671 04d3 01       		.uleb128 0x1
 2672 04d4 50       		.byte	0x50
 2673 04d5 13       		.uleb128 0x13
 2674 04d6 00000000 		.4byte	.LASF52
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 105


 2675 04da 01       		.byte	0x1
 2676 04db 9C09     		.2byte	0x99c
 2677 04dd 3D040000 		.4byte	0x43d
 2678 04e1 00000020 		.4byte	0x20000000
 2679 04e5 14       		.uleb128 0x14
 2680 04e6 10000000 		.4byte	.LVL46
 2681 04ea B0030000 		.4byte	0x3b0
 2682 04ee 15       		.uleb128 0x15
 2683 04ef 01       		.uleb128 0x1
 2684 04f0 50       		.byte	0x50
 2685 04f1 01       		.uleb128 0x1
 2686 04f2 30       		.byte	0x30
 2687 04f3 00       		.byte	0
 2688 04f4 00       		.byte	0
 2689 04f5 0F       		.uleb128 0xf
 2690 04f6 FD040000 		.4byte	.LASF55
 2691 04fa 01       		.byte	0x1
 2692 04fb B509     		.2byte	0x9b5
 2693 04fd C6000000 		.4byte	0xc6
 2694 0501 00000000 		.4byte	.LFB17
 2695 0505 1E000000 		.4byte	.LFE17-.LFB17
 2696 0509 01       		.uleb128 0x1
 2697 050a 9C       		.byte	0x9c
 2698 050b 3F050000 		.4byte	0x53f
 2699 050f 0B       		.uleb128 0xb
 2700 0510 C3030000 		.4byte	.LASF43
 2701 0514 01       		.byte	0x1
 2702 0515 B509     		.2byte	0x9b5
 2703 0517 6B000000 		.4byte	0x6b
 2704 051b 4B020000 		.4byte	.LLST18
 2705 051f 13       		.uleb128 0x13
 2706 0520 00000000 		.4byte	.LASF52
 2707 0524 01       		.byte	0x1
 2708 0525 B709     		.2byte	0x9b7
 2709 0527 3D040000 		.4byte	0x43d
 2710 052b 00000020 		.4byte	0x20000000
 2711 052f 14       		.uleb128 0x14
 2712 0530 0E000000 		.4byte	.LVL52
 2713 0534 B0030000 		.4byte	0x3b0
 2714 0538 15       		.uleb128 0x15
 2715 0539 01       		.uleb128 0x1
 2716 053a 50       		.byte	0x50
 2717 053b 01       		.uleb128 0x1
 2718 053c 30       		.byte	0x30
 2719 053d 00       		.byte	0
 2720 053e 00       		.byte	0
 2721 053f 0A       		.uleb128 0xa
 2722 0540 AF040000 		.4byte	.LASF56
 2723 0544 01       		.byte	0x1
 2724 0545 C809     		.2byte	0x9c8
 2725 0547 00000000 		.4byte	.LFB18
 2726 054b 4C000000 		.4byte	.LFE18-.LFB18
 2727 054f 01       		.uleb128 0x1
 2728 0550 9C       		.byte	0x9c
 2729 0551 DE050000 		.4byte	0x5de
 2730 0555 0B       		.uleb128 0xb
 2731 0556 C3030000 		.4byte	.LASF43
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 106


 2732 055a 01       		.byte	0x1
 2733 055b C809     		.2byte	0x9c8
 2734 055d 6B000000 		.4byte	0x6b
 2735 0561 6C020000 		.4byte	.LLST19
 2736 0565 0B       		.uleb128 0xb
 2737 0566 CA030000 		.4byte	.LASF57
 2738 056a 01       		.byte	0x1
 2739 056b C809     		.2byte	0x9c8
 2740 056d 6B000000 		.4byte	0x6b
 2741 0571 8D020000 		.4byte	.LLST20
 2742 0575 0C       		.uleb128 0xc
 2743 0576 06020000 		.4byte	.LASF23
 2744 057a 01       		.byte	0x1
 2745 057b CA09     		.2byte	0x9ca
 2746 057d 6B000000 		.4byte	0x6b
 2747 0581 AE020000 		.4byte	.LLST21
 2748 0585 0C       		.uleb128 0xc
 2749 0586 76020000 		.4byte	.LASF58
 2750 058a 01       		.byte	0x1
 2751 058b CB09     		.2byte	0x9cb
 2752 058d 83000000 		.4byte	0x83
 2753 0591 C1020000 		.4byte	.LLST22
 2754 0595 0C       		.uleb128 0xc
 2755 0596 E3020000 		.4byte	.LASF59
 2756 059a 01       		.byte	0x1
 2757 059b CC09     		.2byte	0x9cc
 2758 059d 83000000 		.4byte	0x83
 2759 05a1 D4020000 		.4byte	.LLST23
 2760 05a5 16       		.uleb128 0x16
 2761 05a6 10000000 		.4byte	.LVL55
 2762 05aa B0030000 		.4byte	0x3b0
 2763 05ae B8050000 		.4byte	0x5b8
 2764 05b2 15       		.uleb128 0x15
 2765 05b3 01       		.uleb128 0x1
 2766 05b4 50       		.byte	0x50
 2767 05b5 01       		.uleb128 0x1
 2768 05b6 30       		.byte	0x30
 2769 05b7 00       		.byte	0
 2770 05b8 16       		.uleb128 0x16
 2771 05b9 1A000000 		.4byte	.LVL56
 2772 05bd B0030000 		.4byte	0x3b0
 2773 05c1 CB050000 		.4byte	0x5cb
 2774 05c5 15       		.uleb128 0x15
 2775 05c6 01       		.uleb128 0x1
 2776 05c7 50       		.byte	0x50
 2777 05c8 01       		.uleb128 0x1
 2778 05c9 30       		.byte	0x30
 2779 05ca 00       		.byte	0
 2780 05cb 0D       		.uleb128 0xd
 2781 05cc 26000000 		.4byte	.LVL58
 2782 05d0 CA0A0000 		.4byte	0xaca
 2783 05d4 0D       		.uleb128 0xd
 2784 05d5 46000000 		.4byte	.LVL64
 2785 05d9 D50A0000 		.4byte	0xad5
 2786 05dd 00       		.byte	0
 2787 05de 0F       		.uleb128 0xf
 2788 05df B7020000 		.4byte	.LASF60
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 107


 2789 05e3 01       		.byte	0x1
 2790 05e4 EA09     		.2byte	0x9ea
 2791 05e6 6B000000 		.4byte	0x6b
 2792 05ea 00000000 		.4byte	.LFB19
 2793 05ee 2C000000 		.4byte	.LFE19-.LFB19
 2794 05f2 01       		.uleb128 0x1
 2795 05f3 9C       		.byte	0x9c
 2796 05f4 28060000 		.4byte	0x628
 2797 05f8 0B       		.uleb128 0xb
 2798 05f9 C3030000 		.4byte	.LASF43
 2799 05fd 01       		.byte	0x1
 2800 05fe EA09     		.2byte	0x9ea
 2801 0600 6B000000 		.4byte	0x6b
 2802 0604 08030000 		.4byte	.LLST24
 2803 0608 0C       		.uleb128 0xc
 2804 0609 CA030000 		.4byte	.LASF57
 2805 060d 01       		.byte	0x1
 2806 060e EC09     		.2byte	0x9ec
 2807 0610 6B000000 		.4byte	0x6b
 2808 0614 29030000 		.4byte	.LLST25
 2809 0618 14       		.uleb128 0x14
 2810 0619 0E000000 		.4byte	.LVL68
 2811 061d B0030000 		.4byte	0x3b0
 2812 0621 15       		.uleb128 0x15
 2813 0622 01       		.uleb128 0x1
 2814 0623 50       		.byte	0x50
 2815 0624 01       		.uleb128 0x1
 2816 0625 30       		.byte	0x30
 2817 0626 00       		.byte	0
 2818 0627 00       		.byte	0
 2819 0628 10       		.uleb128 0x10
 2820 0629 A4010000 		.4byte	.LASF61
 2821 062d 01       		.byte	0x1
 2822 062e 650A     		.2byte	0xa65
 2823 0630 00000000 		.4byte	.LFB26
 2824 0634 18000000 		.4byte	.LFE26-.LFB26
 2825 0638 01       		.uleb128 0x1
 2826 0639 9C       		.byte	0x9c
 2827 063a 0A       		.uleb128 0xa
 2828 063b F8050000 		.4byte	.LASF62
 2829 063f 01       		.byte	0x1
 2830 0640 790A     		.2byte	0xa79
 2831 0642 00000000 		.4byte	.LFB27
 2832 0646 30000000 		.4byte	.LFE27-.LFB27
 2833 064a 01       		.uleb128 0x1
 2834 064b 9C       		.byte	0x9c
 2835 064c 73060000 		.4byte	0x673
 2836 0650 0B       		.uleb128 0xb
 2837 0651 0C050000 		.4byte	.LASF63
 2838 0655 01       		.byte	0x1
 2839 0656 790A     		.2byte	0xa79
 2840 0658 83000000 		.4byte	0x83
 2841 065c 3C030000 		.4byte	.LLST26
 2842 0660 0D       		.uleb128 0xd
 2843 0661 0E000000 		.4byte	.LVL73
 2844 0665 E00A0000 		.4byte	0xae0
 2845 0669 0D       		.uleb128 0xd
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 108


 2846 066a 26000000 		.4byte	.LVL75
 2847 066e E00A0000 		.4byte	0xae0
 2848 0672 00       		.byte	0
 2849 0673 0A       		.uleb128 0xa
 2850 0674 7D050000 		.4byte	.LASF64
 2851 0678 01       		.byte	0x1
 2852 0679 900A     		.2byte	0xa90
 2853 067b 00000000 		.4byte	.LFB28
 2854 067f 14000000 		.4byte	.LFE28-.LFB28
 2855 0683 01       		.uleb128 0x1
 2856 0684 9C       		.byte	0x9c
 2857 0685 A3060000 		.4byte	0x6a3
 2858 0689 0B       		.uleb128 0xb
 2859 068a 90060000 		.4byte	.LASF65
 2860 068e 01       		.byte	0x1
 2861 068f 900A     		.2byte	0xa90
 2862 0691 77000000 		.4byte	0x77
 2863 0695 5A030000 		.4byte	.LLST27
 2864 0699 0D       		.uleb128 0xd
 2865 069a 0C000000 		.4byte	.LVL79
 2866 069e E00A0000 		.4byte	0xae0
 2867 06a2 00       		.byte	0
 2868 06a3 0A       		.uleb128 0xa
 2869 06a4 D3030000 		.4byte	.LASF66
 2870 06a8 01       		.byte	0x1
 2871 06a9 E502     		.2byte	0x2e5
 2872 06ab 00000000 		.4byte	.LFB6
 2873 06af 64010000 		.4byte	.LFE6-.LFB6
 2874 06b3 01       		.uleb128 0x1
 2875 06b4 9C       		.byte	0x9c
 2876 06b5 94070000 		.4byte	0x794
 2877 06b9 0B       		.uleb128 0xb
 2878 06ba F5010000 		.4byte	.LASF67
 2879 06be 01       		.byte	0x1
 2880 06bf E502     		.2byte	0x2e5
 2881 06c1 83000000 		.4byte	0x83
 2882 06c5 7B030000 		.4byte	.LLST28
 2883 06c9 0C       		.uleb128 0xc
 2884 06ca 0F000000 		.4byte	.LASF68
 2885 06ce 01       		.byte	0x1
 2886 06cf EB02     		.2byte	0x2eb
 2887 06d1 6B000000 		.4byte	0x6b
 2888 06d5 D0030000 		.4byte	.LLST29
 2889 06d9 0C       		.uleb128 0xc
 2890 06da 60040000 		.4byte	.LASF69
 2891 06de 01       		.byte	0x1
 2892 06df EC02     		.2byte	0x2ec
 2893 06e1 6B000000 		.4byte	0x6b
 2894 06e5 0F040000 		.4byte	.LLST30
 2895 06e9 0C       		.uleb128 0xc
 2896 06ea 60060000 		.4byte	.LASF70
 2897 06ee 01       		.byte	0x1
 2898 06ef ED02     		.2byte	0x2ed
 2899 06f1 6B000000 		.4byte	0x6b
 2900 06f5 4E040000 		.4byte	.LLST31
 2901 06f9 0C       		.uleb128 0xc
 2902 06fa CC000000 		.4byte	.LASF71
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 109


 2903 06fe 01       		.byte	0x1
 2904 06ff EE02     		.2byte	0x2ee
 2905 0701 6B000000 		.4byte	0x6b
 2906 0705 61040000 		.4byte	.LLST32
 2907 0709 0C       		.uleb128 0xc
 2908 070a 06020000 		.4byte	.LASF23
 2909 070e 01       		.byte	0x1
 2910 070f F902     		.2byte	0x2f9
 2911 0711 6B000000 		.4byte	0x6b
 2912 0715 80040000 		.4byte	.LLST33
 2913 0719 0D       		.uleb128 0xd
 2914 071a 10000000 		.4byte	.LVL81
 2915 071e CA0A0000 		.4byte	0xaca
 2916 0722 16       		.uleb128 0x16
 2917 0723 B0000000 		.4byte	.LVL99
 2918 0727 E00A0000 		.4byte	0xae0
 2919 072b 35070000 		.4byte	0x735
 2920 072f 15       		.uleb128 0x15
 2921 0730 01       		.uleb128 0x1
 2922 0731 50       		.byte	0x50
 2923 0732 01       		.uleb128 0x1
 2924 0733 35       		.byte	0x35
 2925 0734 00       		.byte	0
 2926 0735 16       		.uleb128 0x16
 2927 0736 CE000000 		.4byte	.LVL102
 2928 073a E00A0000 		.4byte	0xae0
 2929 073e 48070000 		.4byte	0x748
 2930 0742 15       		.uleb128 0x15
 2931 0743 01       		.uleb128 0x1
 2932 0744 50       		.byte	0x50
 2933 0745 01       		.uleb128 0x1
 2934 0746 35       		.byte	0x35
 2935 0747 00       		.byte	0
 2936 0748 16       		.uleb128 0x16
 2937 0749 EE000000 		.4byte	.LVL104
 2938 074d 73060000 		.4byte	0x673
 2939 0751 5B070000 		.4byte	0x75b
 2940 0755 15       		.uleb128 0x15
 2941 0756 01       		.uleb128 0x1
 2942 0757 50       		.byte	0x50
 2943 0758 01       		.uleb128 0x1
 2944 0759 35       		.byte	0x35
 2945 075a 00       		.byte	0
 2946 075b 16       		.uleb128 0x16
 2947 075c 00010000 		.4byte	.LVL105
 2948 0760 E00A0000 		.4byte	0xae0
 2949 0764 6E070000 		.4byte	0x76e
 2950 0768 15       		.uleb128 0x15
 2951 0769 01       		.uleb128 0x1
 2952 076a 50       		.byte	0x50
 2953 076b 01       		.uleb128 0x1
 2954 076c 35       		.byte	0x35
 2955 076d 00       		.byte	0
 2956 076e 16       		.uleb128 0x16
 2957 076f 08010000 		.4byte	.LVL107
 2958 0773 B0030000 		.4byte	0x3b0
 2959 0777 81070000 		.4byte	0x781
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 110


 2960 077b 15       		.uleb128 0x15
 2961 077c 01       		.uleb128 0x1
 2962 077d 50       		.byte	0x50
 2963 077e 01       		.uleb128 0x1
 2964 077f 30       		.byte	0x30
 2965 0780 00       		.byte	0
 2966 0781 14       		.uleb128 0x14
 2967 0782 0E010000 		.4byte	.LVL108
 2968 0786 D50A0000 		.4byte	0xad5
 2969 078a 15       		.uleb128 0x15
 2970 078b 01       		.uleb128 0x1
 2971 078c 50       		.byte	0x50
 2972 078d 04       		.uleb128 0x4
 2973 078e 91       		.byte	0x91
 2974 078f 5C       		.sleb128 -36
 2975 0790 94       		.byte	0x94
 2976 0791 01       		.byte	0x1
 2977 0792 00       		.byte	0
 2978 0793 00       		.byte	0
 2979 0794 0A       		.uleb128 0xa
 2980 0795 DC040000 		.4byte	.LASF72
 2981 0799 01       		.byte	0x1
 2982 079a C008     		.2byte	0x8c0
 2983 079c 00000000 		.4byte	.LFB7
 2984 07a0 44000000 		.4byte	.LFE7-.LFB7
 2985 07a4 01       		.uleb128 0x1
 2986 07a5 9C       		.byte	0x9c
 2987 07a6 D9070000 		.4byte	0x7d9
 2988 07aa 0B       		.uleb128 0xb
 2989 07ab 2C050000 		.4byte	.LASF73
 2990 07af 01       		.byte	0x1
 2991 07b0 C008     		.2byte	0x8c0
 2992 07b2 83000000 		.4byte	0x83
 2993 07b6 AC040000 		.4byte	.LLST34
 2994 07ba 16       		.uleb128 0x16
 2995 07bb 2E000000 		.4byte	.LVL113
 2996 07bf 73060000 		.4byte	0x673
 2997 07c3 CF070000 		.4byte	0x7cf
 2998 07c7 15       		.uleb128 0x15
 2999 07c8 01       		.uleb128 0x1
 3000 07c9 50       		.byte	0x50
 3001 07ca 03       		.uleb128 0x3
 3002 07cb 0A       		.byte	0xa
 3003 07cc E803     		.2byte	0x3e8
 3004 07ce 00       		.byte	0
 3005 07cf 0D       		.uleb128 0xd
 3006 07d0 32000000 		.4byte	.LVL114
 3007 07d4 50020000 		.4byte	0x250
 3008 07d8 00       		.byte	0
 3009 07d9 17       		.uleb128 0x17
 3010 07da FA010000 		.4byte	.LASF74
 3011 07de 01       		.byte	0x1
 3012 07df 9E0A     		.2byte	0xa9e
 3013 07e1 00000000 		.4byte	.LFB29
 3014 07e5 4C000000 		.4byte	.LFE29-.LFB29
 3015 07e9 01       		.uleb128 0x1
 3016 07ea 9C       		.byte	0x9c
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 111


 3017 07eb 00080000 		.4byte	0x800
 3018 07ef 0B       		.uleb128 0xb
 3019 07f0 F5010000 		.4byte	.LASF67
 3020 07f4 01       		.byte	0x1
 3021 07f5 9E0A     		.2byte	0xa9e
 3022 07f7 83000000 		.4byte	0x83
 3023 07fb D8040000 		.4byte	.LLST35
 3024 07ff 00       		.byte	0
 3025 0800 10       		.uleb128 0x10
 3026 0801 39060000 		.4byte	.LASF75
 3027 0805 01       		.byte	0x1
 3028 0806 0A0B     		.2byte	0xb0a
 3029 0808 00000000 		.4byte	.LFB33
 3030 080c 10000000 		.4byte	.LFE33-.LFB33
 3031 0810 01       		.uleb128 0x1
 3032 0811 9C       		.byte	0x9c
 3033 0812 10       		.uleb128 0x10
 3034 0813 B4010000 		.4byte	.LASF76
 3035 0817 01       		.byte	0x1
 3036 0818 1A0B     		.2byte	0xb1a
 3037 081a 00000000 		.4byte	.LFB34
 3038 081e 10000000 		.4byte	.LFE34-.LFB34
 3039 0822 01       		.uleb128 0x1
 3040 0823 9C       		.byte	0x9c
 3041 0824 0A       		.uleb128 0xa
 3042 0825 A0050000 		.4byte	.LASF77
 3043 0829 01       		.byte	0x1
 3044 082a F90A     		.2byte	0xaf9
 3045 082c 00000000 		.4byte	.LFB32
 3046 0830 18000000 		.4byte	.LFE32-.LFB32
 3047 0834 01       		.uleb128 0x1
 3048 0835 9C       		.byte	0x9c
 3049 0836 44080000 		.4byte	0x844
 3050 083a 0D       		.uleb128 0xd
 3051 083b 06000000 		.4byte	.LVL119
 3052 083f 12080000 		.4byte	0x812
 3053 0843 00       		.byte	0
 3054 0844 10       		.uleb128 0x10
 3055 0845 00060000 		.4byte	.LASF78
 3056 0849 01       		.byte	0x1
 3057 084a 2A0B     		.2byte	0xb2a
 3058 084c 00000000 		.4byte	.LFB35
 3059 0850 10000000 		.4byte	.LFE35-.LFB35
 3060 0854 01       		.uleb128 0x1
 3061 0855 9C       		.byte	0x9c
 3062 0856 0A       		.uleb128 0xa
 3063 0857 A4060000 		.4byte	.LASF79
 3064 085b 01       		.byte	0x1
 3065 085c 3B0B     		.2byte	0xb3b
 3066 085e 00000000 		.4byte	.LFB36
 3067 0862 10000000 		.4byte	.LFE36-.LFB36
 3068 0866 01       		.uleb128 0x1
 3069 0867 9C       		.byte	0x9c
 3070 0868 7D080000 		.4byte	0x87d
 3071 086c 0B       		.uleb128 0xb
 3072 086d E3020000 		.4byte	.LASF59
 3073 0871 01       		.byte	0x1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 112


 3074 0872 3B0B     		.2byte	0xb3b
 3075 0874 83000000 		.4byte	0x83
 3076 0878 F9040000 		.4byte	.LLST36
 3077 087c 00       		.byte	0
 3078 087d 11       		.uleb128 0x11
 3079 087e 15020000 		.4byte	.LASF81
 3080 0882 01       		.byte	0x1
 3081 0883 4B0B     		.2byte	0xb4b
 3082 0885 83000000 		.4byte	0x83
 3083 0889 00000000 		.4byte	.LFB37
 3084 088d 10000000 		.4byte	.LFE37-.LFB37
 3085 0891 01       		.uleb128 0x1
 3086 0892 9C       		.byte	0x9c
 3087 0893 11       		.uleb128 0x11
 3088 0894 8F040000 		.4byte	.LASF82
 3089 0898 01       		.byte	0x1
 3090 0899 5B0B     		.2byte	0xb5b
 3091 089b 83000000 		.4byte	0x83
 3092 089f 00000000 		.4byte	.LFB38
 3093 08a3 10000000 		.4byte	.LFE38-.LFB38
 3094 08a7 01       		.uleb128 0x1
 3095 08a8 9C       		.byte	0x9c
 3096 08a9 11       		.uleb128 0x11
 3097 08aa F7020000 		.4byte	.LASF83
 3098 08ae 01       		.byte	0x1
 3099 08af AB0B     		.2byte	0xbab
 3100 08b1 83000000 		.4byte	0x83
 3101 08b5 00000000 		.4byte	.LFB39
 3102 08b9 10000000 		.4byte	.LFE39-.LFB39
 3103 08bd 01       		.uleb128 0x1
 3104 08be 9C       		.byte	0x9c
 3105 08bf 18       		.uleb128 0x18
 3106 08c0 B7060000 		.4byte	.LASF107
 3107 08c4 01       		.byte	0x1
 3108 08c5 000C     		.2byte	0xc00
 3109 08c7 00000000 		.4byte	.LFB43
 3110 08cb 28000000 		.4byte	.LFE43-.LFB43
 3111 08cf 01       		.uleb128 0x1
 3112 08d0 9C       		.byte	0x9c
 3113 08d1 ED080000 		.4byte	0x8ed
 3114 08d5 19       		.uleb128 0x19
 3115 08d6 6900     		.ascii	"i\000"
 3116 08d8 01       		.byte	0x1
 3117 08d9 020C     		.2byte	0xc02
 3118 08db 83000000 		.4byte	0x83
 3119 08df 1A050000 		.4byte	.LLST37
 3120 08e3 0D       		.uleb128 0xd
 3121 08e4 06000000 		.4byte	.LVL122
 3122 08e8 A9080000 		.4byte	0x8a9
 3123 08ec 00       		.byte	0
 3124 08ed 10       		.uleb128 0x10
 3125 08ee 1A030000 		.4byte	.LASF84
 3126 08f2 01       		.byte	0x1
 3127 08f3 B80B     		.2byte	0xbb8
 3128 08f5 00000000 		.4byte	.LFB40
 3129 08f9 0C000000 		.4byte	.LFE40-.LFB40
 3130 08fd 01       		.uleb128 0x1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 113


 3131 08fe 9C       		.byte	0x9c
 3132 08ff 17       		.uleb128 0x17
 3133 0900 D5020000 		.4byte	.LASF85
 3134 0904 01       		.byte	0x1
 3135 0905 DB0A     		.2byte	0xadb
 3136 0907 00000000 		.4byte	.LFB31
 3137 090b 40000000 		.4byte	.LFE31-.LFB31
 3138 090f 01       		.uleb128 0x1
 3139 0910 9C       		.byte	0x9c
 3140 0911 52090000 		.4byte	0x952
 3141 0915 19       		.uleb128 0x19
 3142 0916 6900     		.ascii	"i\000"
 3143 0918 01       		.byte	0x1
 3144 0919 DD0A     		.2byte	0xadd
 3145 091b 83000000 		.4byte	0x83
 3146 091f 38050000 		.4byte	.LLST38
 3147 0923 16       		.uleb128 0x16
 3148 0924 1C000000 		.4byte	.LVL132
 3149 0928 D5030000 		.4byte	0x3d5
 3150 092c 3F090000 		.4byte	0x93f
 3151 0930 15       		.uleb128 0x15
 3152 0931 01       		.uleb128 0x1
 3153 0932 50       		.byte	0x50
 3154 0933 01       		.uleb128 0x1
 3155 0934 3F       		.byte	0x3f
 3156 0935 15       		.uleb128 0x15
 3157 0936 01       		.uleb128 0x1
 3158 0937 51       		.byte	0x51
 3159 0938 05       		.uleb128 0x5
 3160 0939 03       		.byte	0x3
 3161 093a 00000000 		.4byte	CySysTickServiceCallbacks
 3162 093e 00       		.byte	0
 3163 093f 0D       		.uleb128 0xd
 3164 0940 2C000000 		.4byte	.LVL134
 3165 0944 56080000 		.4byte	0x856
 3166 0948 0D       		.uleb128 0xd
 3167 0949 30000000 		.4byte	.LVL135
 3168 094d ED080000 		.4byte	0x8ed
 3169 0951 00       		.byte	0
 3170 0952 0A       		.uleb128 0xa
 3171 0953 15040000 		.4byte	.LASF86
 3172 0957 01       		.byte	0x1
 3173 0958 BE0A     		.2byte	0xabe
 3174 095a 00000000 		.4byte	.LFB30
 3175 095e 20000000 		.4byte	.LFE30-.LFB30
 3176 0962 01       		.uleb128 0x1
 3177 0963 9C       		.byte	0x9c
 3178 0964 7B090000 		.4byte	0x97b
 3179 0968 0D       		.uleb128 0xd
 3180 0969 0E000000 		.4byte	.LVL136
 3181 096d FF080000 		.4byte	0x8ff
 3182 0971 0D       		.uleb128 0xd
 3183 0972 18000000 		.4byte	.LVL137
 3184 0976 24080000 		.4byte	0x824
 3185 097a 00       		.byte	0
 3186 097b 0F       		.uleb128 0xf
 3187 097c C7050000 		.4byte	.LASF87
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 114


 3188 0980 01       		.byte	0x1
 3189 0981 DB0B     		.2byte	0xbdb
 3190 0983 E7000000 		.4byte	0xe7
 3191 0987 00000000 		.4byte	.LFB41
 3192 098b 10000000 		.4byte	.LFE41-.LFB41
 3193 098f 01       		.uleb128 0x1
 3194 0990 9C       		.byte	0x9c
 3195 0991 C2090000 		.4byte	0x9c2
 3196 0995 0B       		.uleb128 0xb
 3197 0996 C3030000 		.4byte	.LASF43
 3198 099a 01       		.byte	0x1
 3199 099b DB0B     		.2byte	0xbdb
 3200 099d 83000000 		.4byte	0x83
 3201 09a1 57050000 		.4byte	.LLST39
 3202 09a5 0E       		.uleb128 0xe
 3203 09a6 75040000 		.4byte	.LASF88
 3204 09aa 01       		.byte	0x1
 3205 09ab DB0B     		.2byte	0xbdb
 3206 09ad E7000000 		.4byte	0xe7
 3207 09b1 01       		.uleb128 0x1
 3208 09b2 51       		.byte	0x51
 3209 09b3 12       		.uleb128 0x12
 3210 09b4 B7000000 		.4byte	.LASF89
 3211 09b8 01       		.byte	0x1
 3212 09b9 DD0B     		.2byte	0xbdd
 3213 09bb E7000000 		.4byte	0xe7
 3214 09bf 01       		.uleb128 0x1
 3215 09c0 50       		.byte	0x50
 3216 09c1 00       		.byte	0
 3217 09c2 0F       		.uleb128 0xf
 3218 09c3 3E020000 		.4byte	.LASF90
 3219 09c7 01       		.byte	0x1
 3220 09c8 F30B     		.2byte	0xbf3
 3221 09ca E7000000 		.4byte	0xe7
 3222 09ce 00000000 		.4byte	.LFB42
 3223 09d2 0C000000 		.4byte	.LFE42-.LFB42
 3224 09d6 01       		.uleb128 0x1
 3225 09d7 9C       		.byte	0x9c
 3226 09d8 ED090000 		.4byte	0x9ed
 3227 09dc 0B       		.uleb128 0xb
 3228 09dd C3030000 		.4byte	.LASF43
 3229 09e1 01       		.byte	0x1
 3230 09e2 F30B     		.2byte	0xbf3
 3231 09e4 83000000 		.4byte	0x83
 3232 09e8 78050000 		.4byte	.LLST40
 3233 09ec 00       		.byte	0
 3234 09ed 0A       		.uleb128 0xa
 3235 09ee E9020000 		.4byte	.LASF91
 3236 09f2 01       		.byte	0x1
 3237 09f3 200C     		.2byte	0xc20
 3238 09f5 00000000 		.4byte	.LFB44
 3239 09f9 70000000 		.4byte	.LFE44-.LFB44
 3240 09fd 01       		.uleb128 0x1
 3241 09fe 9C       		.byte	0x9c
 3242 09ff 120A0000 		.4byte	0xa12
 3243 0a03 0E       		.uleb128 0xe
 3244 0a04 EF050000 		.4byte	.LASF92
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 115


 3245 0a08 01       		.byte	0x1
 3246 0a09 200C     		.2byte	0xc20
 3247 0a0b 120A0000 		.4byte	0xa12
 3248 0a0f 01       		.uleb128 0x1
 3249 0a10 50       		.byte	0x50
 3250 0a11 00       		.byte	0
 3251 0a12 06       		.uleb128 0x6
 3252 0a13 04       		.byte	0x4
 3253 0a14 83000000 		.4byte	0x83
 3254 0a18 1A       		.uleb128 0x1a
 3255 0a19 E7000000 		.4byte	0xe7
 3256 0a1d 280A0000 		.4byte	0xa28
 3257 0a21 1B       		.uleb128 0x1b
 3258 0a22 E0000000 		.4byte	0xe0
 3259 0a26 04       		.byte	0x4
 3260 0a27 00       		.byte	0
 3261 0a28 1C       		.uleb128 0x1c
 3262 0a29 DC050000 		.4byte	.LASF93
 3263 0a2d 01       		.byte	0x1
 3264 0a2e 22       		.byte	0x22
 3265 0a2f 180A0000 		.4byte	0xa18
 3266 0a33 05       		.uleb128 0x5
 3267 0a34 03       		.byte	0x3
 3268 0a35 00000000 		.4byte	CySysTickCallbacks
 3269 0a39 1D       		.uleb128 0x1d
 3270 0a3a A1040000 		.4byte	.LASF94
 3271 0a3e 01       		.byte	0x1
 3272 0a3f 1B       		.byte	0x1b
 3273 0a40 83000000 		.4byte	0x83
 3274 0a44 05       		.uleb128 0x5
 3275 0a45 03       		.byte	0x3
 3276 0a46 00000000 		.4byte	cydelayFreqHz
 3277 0a4a 1D       		.uleb128 0x1d
 3278 0a4b 59020000 		.4byte	.LASF95
 3279 0a4f 01       		.byte	0x1
 3280 0a50 1C       		.byte	0x1c
 3281 0a51 83000000 		.4byte	0x83
 3282 0a55 05       		.uleb128 0x5
 3283 0a56 03       		.byte	0x3
 3284 0a57 00000000 		.4byte	cydelayFreqKhz
 3285 0a5b 1D       		.uleb128 0x1d
 3286 0a5c 2A060000 		.4byte	.LASF96
 3287 0a60 01       		.byte	0x1
 3288 0a61 1D       		.byte	0x1d
 3289 0a62 6B000000 		.4byte	0x6b
 3290 0a66 05       		.uleb128 0x5
 3291 0a67 03       		.byte	0x3
 3292 0a68 00000000 		.4byte	cydelayFreqMhz
 3293 0a6c 1D       		.uleb128 0x1d
 3294 0a6d C8020000 		.4byte	.LASF97
 3295 0a71 01       		.byte	0x1
 3296 0a72 1E       		.byte	0x1e
 3297 0a73 83000000 		.4byte	0x83
 3298 0a77 05       		.uleb128 0x5
 3299 0a78 03       		.byte	0x3
 3300 0a79 00000000 		.4byte	cydelay32kMs
 3301 0a7d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 116


 3302 0a7e 86010000 		.4byte	.LASF98
 3303 0a82 01       		.byte	0x1
 3304 0a83 36       		.byte	0x36
 3305 0a84 83000000 		.4byte	0x83
 3306 0a88 05       		.uleb128 0x5
 3307 0a89 03       		.byte	0x3
 3308 0a8a 00000000 		.4byte	CySysTickInitVar
 3309 0a8e 1A       		.uleb128 0x1a
 3310 0a8f 9E0A0000 		.4byte	0xa9e
 3311 0a93 9E0A0000 		.4byte	0xa9e
 3312 0a97 1B       		.uleb128 0x1b
 3313 0a98 E0000000 		.4byte	0xe0
 3314 0a9c 2D       		.byte	0x2d
 3315 0a9d 00       		.byte	0
 3316 0a9e 1E       		.uleb128 0x1e
 3317 0a9f 6B000000 		.4byte	0x6b
 3318 0aa3 1D       		.uleb128 0x1d
 3319 0aa4 7E040000 		.4byte	.LASF99
 3320 0aa8 01       		.byte	0x1
 3321 0aa9 3B       		.byte	0x3b
 3322 0aaa B40A0000 		.4byte	0xab4
 3323 0aae 05       		.uleb128 0x5
 3324 0aaf 03       		.byte	0x3
 3325 0ab0 00000000 		.4byte	cyImoFreqMhz2Reg
 3326 0ab4 1E       		.uleb128 0x1e
 3327 0ab5 8E0A0000 		.4byte	0xa8e
 3328 0ab9 1D       		.uleb128 0x1d
 3329 0aba 40000000 		.4byte	.LASF100
 3330 0abe 01       		.byte	0x1
 3331 0abf 5C       		.byte	0x5c
 3332 0ac0 83000000 		.4byte	0x83
 3333 0ac4 05       		.uleb128 0x5
 3334 0ac5 03       		.byte	0x3
 3335 0ac6 00000000 		.4byte	CySysClkPumpConfig
 3336 0aca 1F       		.uleb128 0x1f
 3337 0acb 66030000 		.4byte	.LASF101
 3338 0acf 66030000 		.4byte	.LASF101
 3339 0ad3 03       		.byte	0x3
 3340 0ad4 E5       		.byte	0xe5
 3341 0ad5 1F       		.uleb128 0x1f
 3342 0ad6 C6040000 		.4byte	.LASF102
 3343 0ada C6040000 		.4byte	.LASF102
 3344 0ade 03       		.byte	0x3
 3345 0adf E6       		.byte	0xe6
 3346 0ae0 1F       		.uleb128 0x1f
 3347 0ae1 19050000 		.4byte	.LASF103
 3348 0ae5 19050000 		.4byte	.LASF103
 3349 0ae9 03       		.byte	0x3
 3350 0aea DC       		.byte	0xdc
 3351 0aeb 00       		.byte	0
 3352              		.section	.debug_abbrev,"",%progbits
 3353              	.Ldebug_abbrev0:
 3354 0000 01       		.uleb128 0x1
 3355 0001 11       		.uleb128 0x11
 3356 0002 01       		.byte	0x1
 3357 0003 25       		.uleb128 0x25
 3358 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 117


 3359 0005 13       		.uleb128 0x13
 3360 0006 0B       		.uleb128 0xb
 3361 0007 03       		.uleb128 0x3
 3362 0008 0E       		.uleb128 0xe
 3363 0009 1B       		.uleb128 0x1b
 3364 000a 0E       		.uleb128 0xe
 3365 000b 55       		.uleb128 0x55
 3366 000c 17       		.uleb128 0x17
 3367 000d 11       		.uleb128 0x11
 3368 000e 01       		.uleb128 0x1
 3369 000f 10       		.uleb128 0x10
 3370 0010 17       		.uleb128 0x17
 3371 0011 00       		.byte	0
 3372 0012 00       		.byte	0
 3373 0013 02       		.uleb128 0x2
 3374 0014 24       		.uleb128 0x24
 3375 0015 00       		.byte	0
 3376 0016 0B       		.uleb128 0xb
 3377 0017 0B       		.uleb128 0xb
 3378 0018 3E       		.uleb128 0x3e
 3379 0019 0B       		.uleb128 0xb
 3380 001a 03       		.uleb128 0x3
 3381 001b 0E       		.uleb128 0xe
 3382 001c 00       		.byte	0
 3383 001d 00       		.byte	0
 3384 001e 03       		.uleb128 0x3
 3385 001f 24       		.uleb128 0x24
 3386 0020 00       		.byte	0
 3387 0021 0B       		.uleb128 0xb
 3388 0022 0B       		.uleb128 0xb
 3389 0023 3E       		.uleb128 0x3e
 3390 0024 0B       		.uleb128 0xb
 3391 0025 03       		.uleb128 0x3
 3392 0026 08       		.uleb128 0x8
 3393 0027 00       		.byte	0
 3394 0028 00       		.byte	0
 3395 0029 04       		.uleb128 0x4
 3396 002a 16       		.uleb128 0x16
 3397 002b 00       		.byte	0
 3398 002c 03       		.uleb128 0x3
 3399 002d 0E       		.uleb128 0xe
 3400 002e 3A       		.uleb128 0x3a
 3401 002f 0B       		.uleb128 0xb
 3402 0030 3B       		.uleb128 0x3b
 3403 0031 05       		.uleb128 0x5
 3404 0032 49       		.uleb128 0x49
 3405 0033 13       		.uleb128 0x13
 3406 0034 00       		.byte	0
 3407 0035 00       		.byte	0
 3408 0036 05       		.uleb128 0x5
 3409 0037 35       		.uleb128 0x35
 3410 0038 00       		.byte	0
 3411 0039 49       		.uleb128 0x49
 3412 003a 13       		.uleb128 0x13
 3413 003b 00       		.byte	0
 3414 003c 00       		.byte	0
 3415 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 118


 3416 003e 0F       		.uleb128 0xf
 3417 003f 00       		.byte	0
 3418 0040 0B       		.uleb128 0xb
 3419 0041 0B       		.uleb128 0xb
 3420 0042 49       		.uleb128 0x49
 3421 0043 13       		.uleb128 0x13
 3422 0044 00       		.byte	0
 3423 0045 00       		.byte	0
 3424 0046 07       		.uleb128 0x7
 3425 0047 15       		.uleb128 0x15
 3426 0048 00       		.byte	0
 3427 0049 27       		.uleb128 0x27
 3428 004a 19       		.uleb128 0x19
 3429 004b 00       		.byte	0
 3430 004c 00       		.byte	0
 3431 004d 08       		.uleb128 0x8
 3432 004e 16       		.uleb128 0x16
 3433 004f 00       		.byte	0
 3434 0050 03       		.uleb128 0x3
 3435 0051 0E       		.uleb128 0xe
 3436 0052 3A       		.uleb128 0x3a
 3437 0053 0B       		.uleb128 0xb
 3438 0054 3B       		.uleb128 0x3b
 3439 0055 0B       		.uleb128 0xb
 3440 0056 49       		.uleb128 0x49
 3441 0057 13       		.uleb128 0x13
 3442 0058 00       		.byte	0
 3443 0059 00       		.byte	0
 3444 005a 09       		.uleb128 0x9
 3445 005b 2E       		.uleb128 0x2e
 3446 005c 00       		.byte	0
 3447 005d 3F       		.uleb128 0x3f
 3448 005e 19       		.uleb128 0x19
 3449 005f 03       		.uleb128 0x3
 3450 0060 0E       		.uleb128 0xe
 3451 0061 3A       		.uleb128 0x3a
 3452 0062 0B       		.uleb128 0xb
 3453 0063 3B       		.uleb128 0x3b
 3454 0064 0B       		.uleb128 0xb
 3455 0065 27       		.uleb128 0x27
 3456 0066 19       		.uleb128 0x19
 3457 0067 11       		.uleb128 0x11
 3458 0068 01       		.uleb128 0x1
 3459 0069 12       		.uleb128 0x12
 3460 006a 06       		.uleb128 0x6
 3461 006b 40       		.uleb128 0x40
 3462 006c 18       		.uleb128 0x18
 3463 006d 9742     		.uleb128 0x2117
 3464 006f 19       		.uleb128 0x19
 3465 0070 00       		.byte	0
 3466 0071 00       		.byte	0
 3467 0072 0A       		.uleb128 0xa
 3468 0073 2E       		.uleb128 0x2e
 3469 0074 01       		.byte	0x1
 3470 0075 3F       		.uleb128 0x3f
 3471 0076 19       		.uleb128 0x19
 3472 0077 03       		.uleb128 0x3
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 119


 3473 0078 0E       		.uleb128 0xe
 3474 0079 3A       		.uleb128 0x3a
 3475 007a 0B       		.uleb128 0xb
 3476 007b 3B       		.uleb128 0x3b
 3477 007c 05       		.uleb128 0x5
 3478 007d 27       		.uleb128 0x27
 3479 007e 19       		.uleb128 0x19
 3480 007f 11       		.uleb128 0x11
 3481 0080 01       		.uleb128 0x1
 3482 0081 12       		.uleb128 0x12
 3483 0082 06       		.uleb128 0x6
 3484 0083 40       		.uleb128 0x40
 3485 0084 18       		.uleb128 0x18
 3486 0085 9742     		.uleb128 0x2117
 3487 0087 19       		.uleb128 0x19
 3488 0088 01       		.uleb128 0x1
 3489 0089 13       		.uleb128 0x13
 3490 008a 00       		.byte	0
 3491 008b 00       		.byte	0
 3492 008c 0B       		.uleb128 0xb
 3493 008d 05       		.uleb128 0x5
 3494 008e 00       		.byte	0
 3495 008f 03       		.uleb128 0x3
 3496 0090 0E       		.uleb128 0xe
 3497 0091 3A       		.uleb128 0x3a
 3498 0092 0B       		.uleb128 0xb
 3499 0093 3B       		.uleb128 0x3b
 3500 0094 05       		.uleb128 0x5
 3501 0095 49       		.uleb128 0x49
 3502 0096 13       		.uleb128 0x13
 3503 0097 02       		.uleb128 0x2
 3504 0098 17       		.uleb128 0x17
 3505 0099 00       		.byte	0
 3506 009a 00       		.byte	0
 3507 009b 0C       		.uleb128 0xc
 3508 009c 34       		.uleb128 0x34
 3509 009d 00       		.byte	0
 3510 009e 03       		.uleb128 0x3
 3511 009f 0E       		.uleb128 0xe
 3512 00a0 3A       		.uleb128 0x3a
 3513 00a1 0B       		.uleb128 0xb
 3514 00a2 3B       		.uleb128 0x3b
 3515 00a3 05       		.uleb128 0x5
 3516 00a4 49       		.uleb128 0x49
 3517 00a5 13       		.uleb128 0x13
 3518 00a6 02       		.uleb128 0x2
 3519 00a7 17       		.uleb128 0x17
 3520 00a8 00       		.byte	0
 3521 00a9 00       		.byte	0
 3522 00aa 0D       		.uleb128 0xd
 3523 00ab 898201   		.uleb128 0x4109
 3524 00ae 00       		.byte	0
 3525 00af 11       		.uleb128 0x11
 3526 00b0 01       		.uleb128 0x1
 3527 00b1 31       		.uleb128 0x31
 3528 00b2 13       		.uleb128 0x13
 3529 00b3 00       		.byte	0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 120


 3530 00b4 00       		.byte	0
 3531 00b5 0E       		.uleb128 0xe
 3532 00b6 05       		.uleb128 0x5
 3533 00b7 00       		.byte	0
 3534 00b8 03       		.uleb128 0x3
 3535 00b9 0E       		.uleb128 0xe
 3536 00ba 3A       		.uleb128 0x3a
 3537 00bb 0B       		.uleb128 0xb
 3538 00bc 3B       		.uleb128 0x3b
 3539 00bd 05       		.uleb128 0x5
 3540 00be 49       		.uleb128 0x49
 3541 00bf 13       		.uleb128 0x13
 3542 00c0 02       		.uleb128 0x2
 3543 00c1 18       		.uleb128 0x18
 3544 00c2 00       		.byte	0
 3545 00c3 00       		.byte	0
 3546 00c4 0F       		.uleb128 0xf
 3547 00c5 2E       		.uleb128 0x2e
 3548 00c6 01       		.byte	0x1
 3549 00c7 3F       		.uleb128 0x3f
 3550 00c8 19       		.uleb128 0x19
 3551 00c9 03       		.uleb128 0x3
 3552 00ca 0E       		.uleb128 0xe
 3553 00cb 3A       		.uleb128 0x3a
 3554 00cc 0B       		.uleb128 0xb
 3555 00cd 3B       		.uleb128 0x3b
 3556 00ce 05       		.uleb128 0x5
 3557 00cf 27       		.uleb128 0x27
 3558 00d0 19       		.uleb128 0x19
 3559 00d1 49       		.uleb128 0x49
 3560 00d2 13       		.uleb128 0x13
 3561 00d3 11       		.uleb128 0x11
 3562 00d4 01       		.uleb128 0x1
 3563 00d5 12       		.uleb128 0x12
 3564 00d6 06       		.uleb128 0x6
 3565 00d7 40       		.uleb128 0x40
 3566 00d8 18       		.uleb128 0x18
 3567 00d9 9742     		.uleb128 0x2117
 3568 00db 19       		.uleb128 0x19
 3569 00dc 01       		.uleb128 0x1
 3570 00dd 13       		.uleb128 0x13
 3571 00de 00       		.byte	0
 3572 00df 00       		.byte	0
 3573 00e0 10       		.uleb128 0x10
 3574 00e1 2E       		.uleb128 0x2e
 3575 00e2 00       		.byte	0
 3576 00e3 3F       		.uleb128 0x3f
 3577 00e4 19       		.uleb128 0x19
 3578 00e5 03       		.uleb128 0x3
 3579 00e6 0E       		.uleb128 0xe
 3580 00e7 3A       		.uleb128 0x3a
 3581 00e8 0B       		.uleb128 0xb
 3582 00e9 3B       		.uleb128 0x3b
 3583 00ea 05       		.uleb128 0x5
 3584 00eb 27       		.uleb128 0x27
 3585 00ec 19       		.uleb128 0x19
 3586 00ed 11       		.uleb128 0x11
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 121


 3587 00ee 01       		.uleb128 0x1
 3588 00ef 12       		.uleb128 0x12
 3589 00f0 06       		.uleb128 0x6
 3590 00f1 40       		.uleb128 0x40
 3591 00f2 18       		.uleb128 0x18
 3592 00f3 9742     		.uleb128 0x2117
 3593 00f5 19       		.uleb128 0x19
 3594 00f6 00       		.byte	0
 3595 00f7 00       		.byte	0
 3596 00f8 11       		.uleb128 0x11
 3597 00f9 2E       		.uleb128 0x2e
 3598 00fa 00       		.byte	0
 3599 00fb 3F       		.uleb128 0x3f
 3600 00fc 19       		.uleb128 0x19
 3601 00fd 03       		.uleb128 0x3
 3602 00fe 0E       		.uleb128 0xe
 3603 00ff 3A       		.uleb128 0x3a
 3604 0100 0B       		.uleb128 0xb
 3605 0101 3B       		.uleb128 0x3b
 3606 0102 05       		.uleb128 0x5
 3607 0103 27       		.uleb128 0x27
 3608 0104 19       		.uleb128 0x19
 3609 0105 49       		.uleb128 0x49
 3610 0106 13       		.uleb128 0x13
 3611 0107 11       		.uleb128 0x11
 3612 0108 01       		.uleb128 0x1
 3613 0109 12       		.uleb128 0x12
 3614 010a 06       		.uleb128 0x6
 3615 010b 40       		.uleb128 0x40
 3616 010c 18       		.uleb128 0x18
 3617 010d 9742     		.uleb128 0x2117
 3618 010f 19       		.uleb128 0x19
 3619 0110 00       		.byte	0
 3620 0111 00       		.byte	0
 3621 0112 12       		.uleb128 0x12
 3622 0113 34       		.uleb128 0x34
 3623 0114 00       		.byte	0
 3624 0115 03       		.uleb128 0x3
 3625 0116 0E       		.uleb128 0xe
 3626 0117 3A       		.uleb128 0x3a
 3627 0118 0B       		.uleb128 0xb
 3628 0119 3B       		.uleb128 0x3b
 3629 011a 05       		.uleb128 0x5
 3630 011b 49       		.uleb128 0x49
 3631 011c 13       		.uleb128 0x13
 3632 011d 02       		.uleb128 0x2
 3633 011e 18       		.uleb128 0x18
 3634 011f 00       		.byte	0
 3635 0120 00       		.byte	0
 3636 0121 13       		.uleb128 0x13
 3637 0122 34       		.uleb128 0x34
 3638 0123 00       		.byte	0
 3639 0124 03       		.uleb128 0x3
 3640 0125 0E       		.uleb128 0xe
 3641 0126 3A       		.uleb128 0x3a
 3642 0127 0B       		.uleb128 0xb
 3643 0128 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 122


 3644 0129 05       		.uleb128 0x5
 3645 012a 49       		.uleb128 0x49
 3646 012b 13       		.uleb128 0x13
 3647 012c 1C       		.uleb128 0x1c
 3648 012d 06       		.uleb128 0x6
 3649 012e 00       		.byte	0
 3650 012f 00       		.byte	0
 3651 0130 14       		.uleb128 0x14
 3652 0131 898201   		.uleb128 0x4109
 3653 0134 01       		.byte	0x1
 3654 0135 11       		.uleb128 0x11
 3655 0136 01       		.uleb128 0x1
 3656 0137 31       		.uleb128 0x31
 3657 0138 13       		.uleb128 0x13
 3658 0139 00       		.byte	0
 3659 013a 00       		.byte	0
 3660 013b 15       		.uleb128 0x15
 3661 013c 8A8201   		.uleb128 0x410a
 3662 013f 00       		.byte	0
 3663 0140 02       		.uleb128 0x2
 3664 0141 18       		.uleb128 0x18
 3665 0142 9142     		.uleb128 0x2111
 3666 0144 18       		.uleb128 0x18
 3667 0145 00       		.byte	0
 3668 0146 00       		.byte	0
 3669 0147 16       		.uleb128 0x16
 3670 0148 898201   		.uleb128 0x4109
 3671 014b 01       		.byte	0x1
 3672 014c 11       		.uleb128 0x11
 3673 014d 01       		.uleb128 0x1
 3674 014e 31       		.uleb128 0x31
 3675 014f 13       		.uleb128 0x13
 3676 0150 01       		.uleb128 0x1
 3677 0151 13       		.uleb128 0x13
 3678 0152 00       		.byte	0
 3679 0153 00       		.byte	0
 3680 0154 17       		.uleb128 0x17
 3681 0155 2E       		.uleb128 0x2e
 3682 0156 01       		.byte	0x1
 3683 0157 3F       		.uleb128 0x3f
 3684 0158 19       		.uleb128 0x19
 3685 0159 03       		.uleb128 0x3
 3686 015a 0E       		.uleb128 0xe
 3687 015b 3A       		.uleb128 0x3a
 3688 015c 0B       		.uleb128 0xb
 3689 015d 3B       		.uleb128 0x3b
 3690 015e 05       		.uleb128 0x5
 3691 015f 27       		.uleb128 0x27
 3692 0160 19       		.uleb128 0x19
 3693 0161 11       		.uleb128 0x11
 3694 0162 01       		.uleb128 0x1
 3695 0163 12       		.uleb128 0x12
 3696 0164 06       		.uleb128 0x6
 3697 0165 40       		.uleb128 0x40
 3698 0166 18       		.uleb128 0x18
 3699 0167 9642     		.uleb128 0x2116
 3700 0169 19       		.uleb128 0x19
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 123


 3701 016a 01       		.uleb128 0x1
 3702 016b 13       		.uleb128 0x13
 3703 016c 00       		.byte	0
 3704 016d 00       		.byte	0
 3705 016e 18       		.uleb128 0x18
 3706 016f 2E       		.uleb128 0x2e
 3707 0170 01       		.byte	0x1
 3708 0171 03       		.uleb128 0x3
 3709 0172 0E       		.uleb128 0xe
 3710 0173 3A       		.uleb128 0x3a
 3711 0174 0B       		.uleb128 0xb
 3712 0175 3B       		.uleb128 0x3b
 3713 0176 05       		.uleb128 0x5
 3714 0177 27       		.uleb128 0x27
 3715 0178 19       		.uleb128 0x19
 3716 0179 11       		.uleb128 0x11
 3717 017a 01       		.uleb128 0x1
 3718 017b 12       		.uleb128 0x12
 3719 017c 06       		.uleb128 0x6
 3720 017d 40       		.uleb128 0x40
 3721 017e 18       		.uleb128 0x18
 3722 017f 9642     		.uleb128 0x2116
 3723 0181 19       		.uleb128 0x19
 3724 0182 01       		.uleb128 0x1
 3725 0183 13       		.uleb128 0x13
 3726 0184 00       		.byte	0
 3727 0185 00       		.byte	0
 3728 0186 19       		.uleb128 0x19
 3729 0187 34       		.uleb128 0x34
 3730 0188 00       		.byte	0
 3731 0189 03       		.uleb128 0x3
 3732 018a 08       		.uleb128 0x8
 3733 018b 3A       		.uleb128 0x3a
 3734 018c 0B       		.uleb128 0xb
 3735 018d 3B       		.uleb128 0x3b
 3736 018e 05       		.uleb128 0x5
 3737 018f 49       		.uleb128 0x49
 3738 0190 13       		.uleb128 0x13
 3739 0191 02       		.uleb128 0x2
 3740 0192 17       		.uleb128 0x17
 3741 0193 00       		.byte	0
 3742 0194 00       		.byte	0
 3743 0195 1A       		.uleb128 0x1a
 3744 0196 01       		.uleb128 0x1
 3745 0197 01       		.byte	0x1
 3746 0198 49       		.uleb128 0x49
 3747 0199 13       		.uleb128 0x13
 3748 019a 01       		.uleb128 0x1
 3749 019b 13       		.uleb128 0x13
 3750 019c 00       		.byte	0
 3751 019d 00       		.byte	0
 3752 019e 1B       		.uleb128 0x1b
 3753 019f 21       		.uleb128 0x21
 3754 01a0 00       		.byte	0
 3755 01a1 49       		.uleb128 0x49
 3756 01a2 13       		.uleb128 0x13
 3757 01a3 2F       		.uleb128 0x2f
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 124


 3758 01a4 0B       		.uleb128 0xb
 3759 01a5 00       		.byte	0
 3760 01a6 00       		.byte	0
 3761 01a7 1C       		.uleb128 0x1c
 3762 01a8 34       		.uleb128 0x34
 3763 01a9 00       		.byte	0
 3764 01aa 03       		.uleb128 0x3
 3765 01ab 0E       		.uleb128 0xe
 3766 01ac 3A       		.uleb128 0x3a
 3767 01ad 0B       		.uleb128 0xb
 3768 01ae 3B       		.uleb128 0x3b
 3769 01af 0B       		.uleb128 0xb
 3770 01b0 49       		.uleb128 0x49
 3771 01b1 13       		.uleb128 0x13
 3772 01b2 02       		.uleb128 0x2
 3773 01b3 18       		.uleb128 0x18
 3774 01b4 00       		.byte	0
 3775 01b5 00       		.byte	0
 3776 01b6 1D       		.uleb128 0x1d
 3777 01b7 34       		.uleb128 0x34
 3778 01b8 00       		.byte	0
 3779 01b9 03       		.uleb128 0x3
 3780 01ba 0E       		.uleb128 0xe
 3781 01bb 3A       		.uleb128 0x3a
 3782 01bc 0B       		.uleb128 0xb
 3783 01bd 3B       		.uleb128 0x3b
 3784 01be 0B       		.uleb128 0xb
 3785 01bf 49       		.uleb128 0x49
 3786 01c0 13       		.uleb128 0x13
 3787 01c1 3F       		.uleb128 0x3f
 3788 01c2 19       		.uleb128 0x19
 3789 01c3 02       		.uleb128 0x2
 3790 01c4 18       		.uleb128 0x18
 3791 01c5 00       		.byte	0
 3792 01c6 00       		.byte	0
 3793 01c7 1E       		.uleb128 0x1e
 3794 01c8 26       		.uleb128 0x26
 3795 01c9 00       		.byte	0
 3796 01ca 49       		.uleb128 0x49
 3797 01cb 13       		.uleb128 0x13
 3798 01cc 00       		.byte	0
 3799 01cd 00       		.byte	0
 3800 01ce 1F       		.uleb128 0x1f
 3801 01cf 2E       		.uleb128 0x2e
 3802 01d0 00       		.byte	0
 3803 01d1 3F       		.uleb128 0x3f
 3804 01d2 19       		.uleb128 0x19
 3805 01d3 3C       		.uleb128 0x3c
 3806 01d4 19       		.uleb128 0x19
 3807 01d5 6E       		.uleb128 0x6e
 3808 01d6 0E       		.uleb128 0xe
 3809 01d7 03       		.uleb128 0x3
 3810 01d8 0E       		.uleb128 0xe
 3811 01d9 3A       		.uleb128 0x3a
 3812 01da 0B       		.uleb128 0xb
 3813 01db 3B       		.uleb128 0x3b
 3814 01dc 0B       		.uleb128 0xb
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 125


 3815 01dd 00       		.byte	0
 3816 01de 00       		.byte	0
 3817 01df 00       		.byte	0
 3818              		.section	.debug_loc,"",%progbits
 3819              	.Ldebug_loc0:
 3820              	.LLST0:
 3821 0000 00000000 		.4byte	.LVL0
 3822 0004 07000000 		.4byte	.LVL1-1
 3823 0008 0100     		.2byte	0x1
 3824 000a 50       		.byte	0x50
 3825 000b 07000000 		.4byte	.LVL1-1
 3826 000f 12000000 		.4byte	.LVL3
 3827 0013 0100     		.2byte	0x1
 3828 0015 54       		.byte	0x54
 3829 0016 12000000 		.4byte	.LVL3
 3830 001a 20000000 		.4byte	.LFE2
 3831 001e 0400     		.2byte	0x4
 3832 0020 F3       		.byte	0xf3
 3833 0021 01       		.uleb128 0x1
 3834 0022 50       		.byte	0x50
 3835 0023 9F       		.byte	0x9f
 3836 0024 00000000 		.4byte	0
 3837 0028 00000000 		.4byte	0
 3838              	.LLST1:
 3839 002c 08000000 		.4byte	.LVL1
 3840 0030 19000000 		.4byte	.LVL5-1
 3841 0034 0100     		.2byte	0x1
 3842 0036 50       		.byte	0x50
 3843 0037 00000000 		.4byte	0
 3844 003b 00000000 		.4byte	0
 3845              	.LLST2:
 3846 003f 10000000 		.4byte	.LVL2
 3847 0043 14000000 		.4byte	.LVL4
 3848 0047 0100     		.2byte	0x1
 3849 0049 53       		.byte	0x53
 3850 004a 14000000 		.4byte	.LVL4
 3851 004e 1A000000 		.4byte	.LVL6
 3852 0052 0100     		.2byte	0x1
 3853 0054 54       		.byte	0x54
 3854 0055 00000000 		.4byte	0
 3855 0059 00000000 		.4byte	0
 3856              	.LLST3:
 3857 005d 06000000 		.4byte	.LVL8
 3858 0061 11000000 		.4byte	.LVL10-1
 3859 0065 0100     		.2byte	0x1
 3860 0067 50       		.byte	0x50
 3861 0068 00000000 		.4byte	0
 3862 006c 00000000 		.4byte	0
 3863              	.LLST4:
 3864 0070 0E000000 		.4byte	.LVL9
 3865 0074 14000000 		.4byte	.LVL11
 3866 0078 0100     		.2byte	0x1
 3867 007a 54       		.byte	0x54
 3868 007b 14000000 		.4byte	.LVL11
 3869 007f 1C000000 		.4byte	.LFE4
 3870 0083 0100     		.2byte	0x1
 3871 0085 50       		.byte	0x50
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 126


 3872 0086 00000000 		.4byte	0
 3873 008a 00000000 		.4byte	0
 3874              	.LLST5:
 3875 008e 00000000 		.4byte	.LVL12
 3876 0092 07000000 		.4byte	.LVL13-1
 3877 0096 0100     		.2byte	0x1
 3878 0098 50       		.byte	0x50
 3879 0099 07000000 		.4byte	.LVL13-1
 3880 009d 14000000 		.4byte	.LVL14
 3881 00a1 0100     		.2byte	0x1
 3882 00a3 54       		.byte	0x54
 3883 00a4 14000000 		.4byte	.LVL14
 3884 00a8 30000000 		.4byte	.LFE5
 3885 00ac 0400     		.2byte	0x4
 3886 00ae F3       		.byte	0xf3
 3887 00af 01       		.uleb128 0x1
 3888 00b0 50       		.byte	0x50
 3889 00b1 9F       		.byte	0x9f
 3890 00b2 00000000 		.4byte	0
 3891 00b6 00000000 		.4byte	0
 3892              	.LLST6:
 3893 00ba 08000000 		.4byte	.LVL13
 3894 00be 23000000 		.4byte	.LVL15-1
 3895 00c2 0100     		.2byte	0x1
 3896 00c4 50       		.byte	0x50
 3897 00c5 00000000 		.4byte	0
 3898 00c9 00000000 		.4byte	0
 3899              	.LLST7:
 3900 00cd 00000000 		.4byte	.LVL16
 3901 00d1 04000000 		.4byte	.LVL17
 3902 00d5 0100     		.2byte	0x1
 3903 00d7 50       		.byte	0x50
 3904 00d8 04000000 		.4byte	.LVL17
 3905 00dc 14000000 		.4byte	.LFE11
 3906 00e0 0100     		.2byte	0x1
 3907 00e2 52       		.byte	0x52
 3908 00e3 00000000 		.4byte	0
 3909 00e7 00000000 		.4byte	0
 3910              	.LLST8:
 3911 00eb 00000000 		.4byte	.LVL22
 3912 00ef 04000000 		.4byte	.LVL23
 3913 00f3 0100     		.2byte	0x1
 3914 00f5 50       		.byte	0x50
 3915 00f6 04000000 		.4byte	.LVL23
 3916 00fa 14000000 		.4byte	.LFE20
 3917 00fe 0400     		.2byte	0x4
 3918 0100 F3       		.byte	0xf3
 3919 0101 01       		.uleb128 0x1
 3920 0102 50       		.byte	0x50
 3921 0103 9F       		.byte	0x9f
 3922 0104 00000000 		.4byte	0
 3923 0108 00000000 		.4byte	0
 3924              	.LLST9:
 3925 010c 00000000 		.4byte	.LVL24
 3926 0110 08000000 		.4byte	.LVL25
 3927 0114 0100     		.2byte	0x1
 3928 0116 50       		.byte	0x50
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 127


 3929 0117 08000000 		.4byte	.LVL25
 3930 011b 18000000 		.4byte	.LFE21
 3931 011f 0400     		.2byte	0x4
 3932 0121 F3       		.byte	0xf3
 3933 0122 01       		.uleb128 0x1
 3934 0123 50       		.byte	0x50
 3935 0124 9F       		.byte	0x9f
 3936 0125 00000000 		.4byte	0
 3937 0129 00000000 		.4byte	0
 3938              	.LLST10:
 3939 012d 00000000 		.4byte	.LVL26
 3940 0131 04000000 		.4byte	.LVL27
 3941 0135 0100     		.2byte	0x1
 3942 0137 50       		.byte	0x50
 3943 0138 04000000 		.4byte	.LVL27
 3944 013c 14000000 		.4byte	.LFE22
 3945 0140 0400     		.2byte	0x4
 3946 0142 F3       		.byte	0xf3
 3947 0143 01       		.uleb128 0x1
 3948 0144 50       		.byte	0x50
 3949 0145 9F       		.byte	0x9f
 3950 0146 00000000 		.4byte	0
 3951 014a 00000000 		.4byte	0
 3952              	.LLST11:
 3953 014e 00000000 		.4byte	.LVL28
 3954 0152 04000000 		.4byte	.LVL29
 3955 0156 0100     		.2byte	0x1
 3956 0158 50       		.byte	0x50
 3957 0159 04000000 		.4byte	.LVL29
 3958 015d 14000000 		.4byte	.LFE23
 3959 0161 0400     		.2byte	0x4
 3960 0163 F3       		.byte	0xf3
 3961 0164 01       		.uleb128 0x1
 3962 0165 50       		.byte	0x50
 3963 0166 9F       		.byte	0x9f
 3964 0167 00000000 		.4byte	0
 3965 016b 00000000 		.4byte	0
 3966              	.LLST12:
 3967 016f 00000000 		.4byte	.LVL30
 3968 0173 04000000 		.4byte	.LVL31
 3969 0177 0100     		.2byte	0x1
 3970 0179 50       		.byte	0x50
 3971 017a 04000000 		.4byte	.LVL31
 3972 017e 14000000 		.4byte	.LFE24
 3973 0182 0400     		.2byte	0x4
 3974 0184 F3       		.byte	0xf3
 3975 0185 01       		.uleb128 0x1
 3976 0186 50       		.byte	0x50
 3977 0187 9F       		.byte	0x9f
 3978 0188 00000000 		.4byte	0
 3979 018c 00000000 		.4byte	0
 3980              	.LLST13:
 3981 0190 00000000 		.4byte	.LVL33
 3982 0194 0C000000 		.4byte	.LVL35
 3983 0198 0100     		.2byte	0x1
 3984 019a 50       		.byte	0x50
 3985 019b 0C000000 		.4byte	.LVL35
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 128


 3986 019f 20000000 		.4byte	.LFE14
 3987 01a3 0400     		.2byte	0x4
 3988 01a5 F3       		.byte	0xf3
 3989 01a6 01       		.uleb128 0x1
 3990 01a7 50       		.byte	0x50
 3991 01a8 9F       		.byte	0x9f
 3992 01a9 00000000 		.4byte	0
 3993 01ad 00000000 		.4byte	0
 3994              	.LLST14:
 3995 01b1 00000000 		.4byte	.LVL33
 3996 01b5 0F000000 		.4byte	.LVL36-1
 3997 01b9 0100     		.2byte	0x1
 3998 01bb 51       		.byte	0x51
 3999 01bc 0F000000 		.4byte	.LVL36-1
 4000 01c0 1E000000 		.4byte	.LVL38
 4001 01c4 0100     		.2byte	0x1
 4002 01c6 55       		.byte	0x55
 4003 01c7 1E000000 		.4byte	.LVL38
 4004 01cb 20000000 		.4byte	.LFE14
 4005 01cf 0400     		.2byte	0x4
 4006 01d1 F3       		.byte	0xf3
 4007 01d2 01       		.uleb128 0x1
 4008 01d3 51       		.byte	0x51
 4009 01d4 9F       		.byte	0x9f
 4010 01d5 00000000 		.4byte	0
 4011 01d9 00000000 		.4byte	0
 4012              	.LLST15:
 4013 01dd 00000000 		.4byte	.LVL39
 4014 01e1 0A000000 		.4byte	.LVL41
 4015 01e5 0100     		.2byte	0x1
 4016 01e7 50       		.byte	0x50
 4017 01e8 0A000000 		.4byte	.LVL41
 4018 01ec 1C000000 		.4byte	.LFE15
 4019 01f0 0400     		.2byte	0x4
 4020 01f2 F3       		.byte	0xf3
 4021 01f3 01       		.uleb128 0x1
 4022 01f4 50       		.byte	0x50
 4023 01f5 9F       		.byte	0x9f
 4024 01f6 00000000 		.4byte	0
 4025 01fa 00000000 		.4byte	0
 4026              	.LLST16:
 4027 01fe 00000000 		.4byte	.LVL43
 4028 0202 0C000000 		.4byte	.LVL45
 4029 0206 0100     		.2byte	0x1
 4030 0208 50       		.byte	0x50
 4031 0209 0C000000 		.4byte	.LVL45
 4032 020d 22000000 		.4byte	.LFE16
 4033 0211 0400     		.2byte	0x4
 4034 0213 F3       		.byte	0xf3
 4035 0214 01       		.uleb128 0x1
 4036 0215 50       		.byte	0x50
 4037 0216 9F       		.byte	0x9f
 4038 0217 00000000 		.4byte	0
 4039 021b 00000000 		.4byte	0
 4040              	.LLST17:
 4041 021f 00000000 		.4byte	.LVL43
 4042 0223 0F000000 		.4byte	.LVL46-1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 129


 4043 0227 0100     		.2byte	0x1
 4044 0229 51       		.byte	0x51
 4045 022a 0F000000 		.4byte	.LVL46-1
 4046 022e 20000000 		.4byte	.LVL48
 4047 0232 0100     		.2byte	0x1
 4048 0234 55       		.byte	0x55
 4049 0235 20000000 		.4byte	.LVL48
 4050 0239 22000000 		.4byte	.LFE16
 4051 023d 0400     		.2byte	0x4
 4052 023f F3       		.byte	0xf3
 4053 0240 01       		.uleb128 0x1
 4054 0241 51       		.byte	0x51
 4055 0242 9F       		.byte	0x9f
 4056 0243 00000000 		.4byte	0
 4057 0247 00000000 		.4byte	0
 4058              	.LLST18:
 4059 024b 00000000 		.4byte	.LVL49
 4060 024f 0A000000 		.4byte	.LVL51
 4061 0253 0100     		.2byte	0x1
 4062 0255 50       		.byte	0x50
 4063 0256 0A000000 		.4byte	.LVL51
 4064 025a 1E000000 		.4byte	.LFE17
 4065 025e 0400     		.2byte	0x4
 4066 0260 F3       		.byte	0xf3
 4067 0261 01       		.uleb128 0x1
 4068 0262 50       		.byte	0x50
 4069 0263 9F       		.byte	0x9f
 4070 0264 00000000 		.4byte	0
 4071 0268 00000000 		.4byte	0
 4072              	.LLST19:
 4073 026c 00000000 		.4byte	.LVL53
 4074 0270 0C000000 		.4byte	.LVL54
 4075 0274 0100     		.2byte	0x1
 4076 0276 50       		.byte	0x50
 4077 0277 0C000000 		.4byte	.LVL54
 4078 027b 4C000000 		.4byte	.LFE18
 4079 027f 0400     		.2byte	0x4
 4080 0281 F3       		.byte	0xf3
 4081 0282 01       		.uleb128 0x1
 4082 0283 50       		.byte	0x50
 4083 0284 9F       		.byte	0x9f
 4084 0285 00000000 		.4byte	0
 4085 0289 00000000 		.4byte	0
 4086              	.LLST20:
 4087 028d 00000000 		.4byte	.LVL53
 4088 0291 0F000000 		.4byte	.LVL55-1
 4089 0295 0100     		.2byte	0x1
 4090 0297 51       		.byte	0x51
 4091 0298 0F000000 		.4byte	.LVL55-1
 4092 029c 4C000000 		.4byte	.LFE18
 4093 02a0 0400     		.2byte	0x4
 4094 02a2 F3       		.byte	0xf3
 4095 02a3 01       		.uleb128 0x1
 4096 02a4 51       		.byte	0x51
 4097 02a5 9F       		.byte	0x9f
 4098 02a6 00000000 		.4byte	0
 4099 02aa 00000000 		.4byte	0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 130


 4100              	.LLST21:
 4101 02ae 26000000 		.4byte	.LVL58
 4102 02b2 45000000 		.4byte	.LVL64-1
 4103 02b6 0100     		.2byte	0x1
 4104 02b8 50       		.byte	0x50
 4105 02b9 00000000 		.4byte	0
 4106 02bd 00000000 		.4byte	0
 4107              	.LLST22:
 4108 02c1 22000000 		.4byte	.LVL57
 4109 02c5 46000000 		.4byte	.LVL65
 4110 02c9 0100     		.2byte	0x1
 4111 02cb 55       		.byte	0x55
 4112 02cc 00000000 		.4byte	0
 4113 02d0 00000000 		.4byte	0
 4114              	.LLST23:
 4115 02d4 32000000 		.4byte	.LVL59
 4116 02d8 38000000 		.4byte	.LVL60
 4117 02dc 0100     		.2byte	0x1
 4118 02de 51       		.byte	0x51
 4119 02df 3A000000 		.4byte	.LVL61
 4120 02e3 3C000000 		.4byte	.LVL62
 4121 02e7 0100     		.2byte	0x1
 4122 02e9 51       		.byte	0x51
 4123 02ea 3C000000 		.4byte	.LVL62
 4124 02ee 40000000 		.4byte	.LVL63
 4125 02f2 0100     		.2byte	0x1
 4126 02f4 53       		.byte	0x53
 4127 02f5 40000000 		.4byte	.LVL63
 4128 02f9 45000000 		.4byte	.LVL64-1
 4129 02fd 0100     		.2byte	0x1
 4130 02ff 51       		.byte	0x51
 4131 0300 00000000 		.4byte	0
 4132 0304 00000000 		.4byte	0
 4133              	.LLST24:
 4134 0308 00000000 		.4byte	.LVL66
 4135 030c 0A000000 		.4byte	.LVL67
 4136 0310 0100     		.2byte	0x1
 4137 0312 50       		.byte	0x50
 4138 0313 0A000000 		.4byte	.LVL67
 4139 0317 2C000000 		.4byte	.LFE19
 4140 031b 0400     		.2byte	0x4
 4141 031d F3       		.byte	0xf3
 4142 031e 01       		.uleb128 0x1
 4143 031f 50       		.byte	0x50
 4144 0320 9F       		.byte	0x9f
 4145 0321 00000000 		.4byte	0
 4146 0325 00000000 		.4byte	0
 4147              	.LLST25:
 4148 0329 24000000 		.4byte	.LVL69
 4149 032d 26000000 		.4byte	.LVL70
 4150 0331 0100     		.2byte	0x1
 4151 0333 50       		.byte	0x50
 4152 0334 00000000 		.4byte	0
 4153 0338 00000000 		.4byte	0
 4154              	.LLST26:
 4155 033c 00000000 		.4byte	.LVL71
 4156 0340 06000000 		.4byte	.LVL72
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 131


 4157 0344 0100     		.2byte	0x1
 4158 0346 50       		.byte	0x50
 4159 0347 06000000 		.4byte	.LVL72
 4160 034b 26000000 		.4byte	.LVL76
 4161 034f 0100     		.2byte	0x1
 4162 0351 54       		.byte	0x54
 4163 0352 00000000 		.4byte	0
 4164 0356 00000000 		.4byte	0
 4165              	.LLST27:
 4166 035a 00000000 		.4byte	.LVL77
 4167 035e 08000000 		.4byte	.LVL78
 4168 0362 0100     		.2byte	0x1
 4169 0364 50       		.byte	0x50
 4170 0365 08000000 		.4byte	.LVL78
 4171 0369 14000000 		.4byte	.LFE28
 4172 036d 0400     		.2byte	0x4
 4173 036f F3       		.byte	0xf3
 4174 0370 01       		.uleb128 0x1
 4175 0371 50       		.byte	0x50
 4176 0372 9F       		.byte	0x9f
 4177 0373 00000000 		.4byte	0
 4178 0377 00000000 		.4byte	0
 4179              	.LLST28:
 4180 037b 00000000 		.4byte	.LVL80
 4181 037f 0F000000 		.4byte	.LVL81-1
 4182 0383 0100     		.2byte	0x1
 4183 0385 50       		.byte	0x50
 4184 0386 0F000000 		.4byte	.LVL81-1
 4185 038a D4000000 		.4byte	.LVL103
 4186 038e 0100     		.2byte	0x1
 4187 0390 54       		.byte	0x54
 4188 0391 D4000000 		.4byte	.LVL103
 4189 0395 02010000 		.4byte	.LVL106
 4190 0399 0700     		.2byte	0x7
 4191 039b 74       		.byte	0x74
 4192 039c B39C8080 		.sleb128 -268431821
 4192      7F
 4193 03a1 9F       		.byte	0x9f
 4194 03a2 02010000 		.4byte	.LVL106
 4195 03a6 08010000 		.4byte	.LVL107
 4196 03aa 0100     		.2byte	0x1
 4197 03ac 54       		.byte	0x54
 4198 03ad 08010000 		.4byte	.LVL107
 4199 03b1 10010000 		.4byte	.LVL109
 4200 03b5 0300     		.2byte	0x3
 4201 03b7 77       		.byte	0x77
 4202 03b8 03       		.sleb128 3
 4203 03b9 9F       		.byte	0x9f
 4204 03ba 10010000 		.4byte	.LVL109
 4205 03be 64010000 		.4byte	.LFE6
 4206 03c2 0400     		.2byte	0x4
 4207 03c4 F3       		.byte	0xf3
 4208 03c5 01       		.uleb128 0x1
 4209 03c6 50       		.byte	0x50
 4210 03c7 9F       		.byte	0x9f
 4211 03c8 00000000 		.4byte	0
 4212 03cc 00000000 		.4byte	0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 132


 4213              	.LLST29:
 4214 03d0 2A000000 		.4byte	.LVL83
 4215 03d4 34000000 		.4byte	.LVL85
 4216 03d8 0100     		.2byte	0x1
 4217 03da 5A       		.byte	0x5a
 4218 03db 46000000 		.4byte	.LVL86
 4219 03df 50000000 		.4byte	.LVL88
 4220 03e3 0100     		.2byte	0x1
 4221 03e5 5A       		.byte	0x5a
 4222 03e6 62000000 		.4byte	.LVL89
 4223 03ea 6C000000 		.4byte	.LVL91
 4224 03ee 0100     		.2byte	0x1
 4225 03f0 5A       		.byte	0x5a
 4226 03f1 7E000000 		.4byte	.LVL92
 4227 03f5 88000000 		.4byte	.LVL94
 4228 03f9 0100     		.2byte	0x1
 4229 03fb 5A       		.byte	0x5a
 4230 03fc 90000000 		.4byte	.LVL95
 4231 0400 02010000 		.4byte	.LVL106
 4232 0404 0100     		.2byte	0x1
 4233 0406 5A       		.byte	0x5a
 4234 0407 00000000 		.4byte	0
 4235 040b 00000000 		.4byte	0
 4236              	.LLST30:
 4237 040f 32000000 		.4byte	.LVL84
 4238 0413 34000000 		.4byte	.LVL85
 4239 0417 0100     		.2byte	0x1
 4240 0419 59       		.byte	0x59
 4241 041a 4E000000 		.4byte	.LVL87
 4242 041e 50000000 		.4byte	.LVL88
 4243 0422 0100     		.2byte	0x1
 4244 0424 59       		.byte	0x59
 4245 0425 6A000000 		.4byte	.LVL90
 4246 0429 6C000000 		.4byte	.LVL91
 4247 042d 0100     		.2byte	0x1
 4248 042f 59       		.byte	0x59
 4249 0430 86000000 		.4byte	.LVL93
 4250 0434 88000000 		.4byte	.LVL94
 4251 0438 0100     		.2byte	0x1
 4252 043a 59       		.byte	0x59
 4253 043b 98000000 		.4byte	.LVL96
 4254 043f 02010000 		.4byte	.LVL106
 4255 0443 0100     		.2byte	0x1
 4256 0445 59       		.byte	0x59
 4257 0446 00000000 		.4byte	0
 4258 044a 00000000 		.4byte	0
 4259              	.LLST31:
 4260 044e 9C000000 		.4byte	.LVL97
 4261 0452 02010000 		.4byte	.LVL106
 4262 0456 0100     		.2byte	0x1
 4263 0458 56       		.byte	0x56
 4264 0459 00000000 		.4byte	0
 4265 045d 00000000 		.4byte	0
 4266              	.LLST32:
 4267 0461 B0000000 		.4byte	.LVL99
 4268 0465 B4000000 		.4byte	.LVL100
 4269 0469 0200     		.2byte	0x2
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 133


 4270 046b 49       		.byte	0x49
 4271 046c 9F       		.byte	0x9f
 4272 046d BC000000 		.4byte	.LVL101
 4273 0471 02010000 		.4byte	.LVL106
 4274 0475 0100     		.2byte	0x1
 4275 0477 55       		.byte	0x55
 4276 0478 00000000 		.4byte	0
 4277 047c 00000000 		.4byte	0
 4278              	.LLST33:
 4279 0480 12000000 		.4byte	.LVL82
 4280 0484 AA000000 		.4byte	.LVL98
 4281 0488 0200     		.2byte	0x2
 4282 048a 91       		.byte	0x91
 4283 048b 5C       		.sleb128 -36
 4284 048c B4000000 		.4byte	.LVL100
 4285 0490 BC000000 		.4byte	.LVL101
 4286 0494 0200     		.2byte	0x2
 4287 0496 91       		.byte	0x91
 4288 0497 5C       		.sleb128 -36
 4289 0498 02010000 		.4byte	.LVL106
 4290 049c 08010000 		.4byte	.LVL107
 4291 04a0 0200     		.2byte	0x2
 4292 04a2 91       		.byte	0x91
 4293 04a3 5C       		.sleb128 -36
 4294 04a4 00000000 		.4byte	0
 4295 04a8 00000000 		.4byte	0
 4296              	.LLST34:
 4297 04ac 00000000 		.4byte	.LVL110
 4298 04b0 14000000 		.4byte	.LVL111
 4299 04b4 0100     		.2byte	0x1
 4300 04b6 50       		.byte	0x50
 4301 04b7 14000000 		.4byte	.LVL111
 4302 04bb 18000000 		.4byte	.LVL112
 4303 04bf 0100     		.2byte	0x1
 4304 04c1 53       		.byte	0x53
 4305 04c2 18000000 		.4byte	.LVL112
 4306 04c6 44000000 		.4byte	.LFE7
 4307 04ca 0400     		.2byte	0x4
 4308 04cc F3       		.byte	0xf3
 4309 04cd 01       		.uleb128 0x1
 4310 04ce 50       		.byte	0x50
 4311 04cf 9F       		.byte	0x9f
 4312 04d0 00000000 		.4byte	0
 4313 04d4 00000000 		.4byte	0
 4314              	.LLST35:
 4315 04d8 00000000 		.4byte	.LVL115
 4316 04dc 1A000000 		.4byte	.LVL116
 4317 04e0 0100     		.2byte	0x1
 4318 04e2 50       		.byte	0x50
 4319 04e3 1A000000 		.4byte	.LVL116
 4320 04e7 4C000000 		.4byte	.LFE29
 4321 04eb 0400     		.2byte	0x4
 4322 04ed F3       		.byte	0xf3
 4323 04ee 01       		.uleb128 0x1
 4324 04ef 50       		.byte	0x50
 4325 04f0 9F       		.byte	0x9f
 4326 04f1 00000000 		.4byte	0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 134


 4327 04f5 00000000 		.4byte	0
 4328              	.LLST36:
 4329 04f9 00000000 		.4byte	.LVL120
 4330 04fd 02000000 		.4byte	.LVL121
 4331 0501 0100     		.2byte	0x1
 4332 0503 50       		.byte	0x50
 4333 0504 02000000 		.4byte	.LVL121
 4334 0508 10000000 		.4byte	.LFE36
 4335 050c 0400     		.2byte	0x4
 4336 050e F3       		.byte	0xf3
 4337 050f 01       		.uleb128 0x1
 4338 0510 50       		.byte	0x50
 4339 0511 9F       		.byte	0x9f
 4340 0512 00000000 		.4byte	0
 4341 0516 00000000 		.4byte	0
 4342              	.LLST37:
 4343 051a 0C000000 		.4byte	.LVL123
 4344 051e 1C000000 		.4byte	.LVL126
 4345 0522 0100     		.2byte	0x1
 4346 0524 54       		.byte	0x54
 4347 0525 1E000000 		.4byte	.LVL127
 4348 0529 22000000 		.4byte	.LVL128
 4349 052d 0100     		.2byte	0x1
 4350 052f 54       		.byte	0x54
 4351 0530 00000000 		.4byte	0
 4352 0534 00000000 		.4byte	0
 4353              	.LLST38:
 4354 0538 02000000 		.4byte	.LVL129
 4355 053c 06000000 		.4byte	.LVL130
 4356 0540 0200     		.2byte	0x2
 4357 0542 30       		.byte	0x30
 4358 0543 9F       		.byte	0x9f
 4359 0544 06000000 		.4byte	.LVL130
 4360 0548 1B000000 		.4byte	.LVL132-1
 4361 054c 0100     		.2byte	0x1
 4362 054e 53       		.byte	0x53
 4363 054f 00000000 		.4byte	0
 4364 0553 00000000 		.4byte	0
 4365              	.LLST39:
 4366 0557 00000000 		.4byte	.LVL138
 4367 055b 06000000 		.4byte	.LVL139
 4368 055f 0100     		.2byte	0x1
 4369 0561 50       		.byte	0x50
 4370 0562 06000000 		.4byte	.LVL139
 4371 0566 10000000 		.4byte	.LFE41
 4372 056a 0400     		.2byte	0x4
 4373 056c F3       		.byte	0xf3
 4374 056d 01       		.uleb128 0x1
 4375 056e 50       		.byte	0x50
 4376 056f 9F       		.byte	0x9f
 4377 0570 00000000 		.4byte	0
 4378 0574 00000000 		.4byte	0
 4379              	.LLST40:
 4380 0578 00000000 		.4byte	.LVL140
 4381 057c 02000000 		.4byte	.LVL141
 4382 0580 0100     		.2byte	0x1
 4383 0582 50       		.byte	0x50
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 135


 4384 0583 02000000 		.4byte	.LVL141
 4385 0587 0C000000 		.4byte	.LFE42
 4386 058b 0400     		.2byte	0x4
 4387 058d F3       		.byte	0xf3
 4388 058e 01       		.uleb128 0x1
 4389 058f 50       		.byte	0x50
 4390 0590 9F       		.byte	0x9f
 4391 0591 00000000 		.4byte	0
 4392 0595 00000000 		.4byte	0
 4393              		.section	.debug_aranges,"",%progbits
 4394 0000 7C010000 		.4byte	0x17c
 4395 0004 0200     		.2byte	0x2
 4396 0006 00000000 		.4byte	.Ldebug_info0
 4397 000a 04       		.byte	0x4
 4398 000b 00       		.byte	0
 4399 000c 0000     		.2byte	0
 4400 000e 0000     		.2byte	0
 4401 0010 00000000 		.4byte	.LFB0
 4402 0014 14000000 		.4byte	.LFE0-.LFB0
 4403 0018 00000000 		.4byte	.LFB1
 4404 001c 10000000 		.4byte	.LFE1-.LFB1
 4405 0020 00000000 		.4byte	.LFB2
 4406 0024 20000000 		.4byte	.LFE2-.LFB2
 4407 0028 00000000 		.4byte	.LFB3
 4408 002c 38000000 		.4byte	.LFE3-.LFB3
 4409 0030 00000000 		.4byte	.LFB4
 4410 0034 1C000000 		.4byte	.LFE4-.LFB4
 4411 0038 00000000 		.4byte	.LFB5
 4412 003c 30000000 		.4byte	.LFE5-.LFB5
 4413 0040 00000000 		.4byte	.LFB8
 4414 0044 20000000 		.4byte	.LFE8-.LFB8
 4415 0048 00000000 		.4byte	.LFB9
 4416 004c 10000000 		.4byte	.LFE9-.LFB9
 4417 0050 00000000 		.4byte	.LFB10
 4418 0054 0C000000 		.4byte	.LFE10-.LFB10
 4419 0058 00000000 		.4byte	.LFB11
 4420 005c 14000000 		.4byte	.LFE11-.LFB11
 4421 0060 00000000 		.4byte	.LFB12
 4422 0064 10000000 		.4byte	.LFE12-.LFB12
 4423 0068 00000000 		.4byte	.LFB13
 4424 006c 0C000000 		.4byte	.LFE13-.LFB13
 4425 0070 00000000 		.4byte	.LFB20
 4426 0074 14000000 		.4byte	.LFE20-.LFB20
 4427 0078 00000000 		.4byte	.LFB21
 4428 007c 18000000 		.4byte	.LFE21-.LFB21
 4429 0080 00000000 		.4byte	.LFB22
 4430 0084 14000000 		.4byte	.LFE22-.LFB22
 4431 0088 00000000 		.4byte	.LFB23
 4432 008c 14000000 		.4byte	.LFE23-.LFB23
 4433 0090 00000000 		.4byte	.LFB24
 4434 0094 14000000 		.4byte	.LFE24-.LFB24
 4435 0098 00000000 		.4byte	.LFB25
 4436 009c 04000000 		.4byte	.LFE25-.LFB25
 4437 00a0 00000000 		.4byte	.LFB14
 4438 00a4 20000000 		.4byte	.LFE14-.LFB14
 4439 00a8 00000000 		.4byte	.LFB15
 4440 00ac 1C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 136


 4441 00b0 00000000 		.4byte	.LFB16
 4442 00b4 22000000 		.4byte	.LFE16-.LFB16
 4443 00b8 00000000 		.4byte	.LFB17
 4444 00bc 1E000000 		.4byte	.LFE17-.LFB17
 4445 00c0 00000000 		.4byte	.LFB18
 4446 00c4 4C000000 		.4byte	.LFE18-.LFB18
 4447 00c8 00000000 		.4byte	.LFB19
 4448 00cc 2C000000 		.4byte	.LFE19-.LFB19
 4449 00d0 00000000 		.4byte	.LFB26
 4450 00d4 18000000 		.4byte	.LFE26-.LFB26
 4451 00d8 00000000 		.4byte	.LFB27
 4452 00dc 30000000 		.4byte	.LFE27-.LFB27
 4453 00e0 00000000 		.4byte	.LFB28
 4454 00e4 14000000 		.4byte	.LFE28-.LFB28
 4455 00e8 00000000 		.4byte	.LFB6
 4456 00ec 64010000 		.4byte	.LFE6-.LFB6
 4457 00f0 00000000 		.4byte	.LFB7
 4458 00f4 44000000 		.4byte	.LFE7-.LFB7
 4459 00f8 00000000 		.4byte	.LFB29
 4460 00fc 4C000000 		.4byte	.LFE29-.LFB29
 4461 0100 00000000 		.4byte	.LFB33
 4462 0104 10000000 		.4byte	.LFE33-.LFB33
 4463 0108 00000000 		.4byte	.LFB34
 4464 010c 10000000 		.4byte	.LFE34-.LFB34
 4465 0110 00000000 		.4byte	.LFB32
 4466 0114 18000000 		.4byte	.LFE32-.LFB32
 4467 0118 00000000 		.4byte	.LFB35
 4468 011c 10000000 		.4byte	.LFE35-.LFB35
 4469 0120 00000000 		.4byte	.LFB36
 4470 0124 10000000 		.4byte	.LFE36-.LFB36
 4471 0128 00000000 		.4byte	.LFB37
 4472 012c 10000000 		.4byte	.LFE37-.LFB37
 4473 0130 00000000 		.4byte	.LFB38
 4474 0134 10000000 		.4byte	.LFE38-.LFB38
 4475 0138 00000000 		.4byte	.LFB39
 4476 013c 10000000 		.4byte	.LFE39-.LFB39
 4477 0140 00000000 		.4byte	.LFB43
 4478 0144 28000000 		.4byte	.LFE43-.LFB43
 4479 0148 00000000 		.4byte	.LFB40
 4480 014c 0C000000 		.4byte	.LFE40-.LFB40
 4481 0150 00000000 		.4byte	.LFB31
 4482 0154 40000000 		.4byte	.LFE31-.LFB31
 4483 0158 00000000 		.4byte	.LFB30
 4484 015c 20000000 		.4byte	.LFE30-.LFB30
 4485 0160 00000000 		.4byte	.LFB41
 4486 0164 10000000 		.4byte	.LFE41-.LFB41
 4487 0168 00000000 		.4byte	.LFB42
 4488 016c 0C000000 		.4byte	.LFE42-.LFB42
 4489 0170 00000000 		.4byte	.LFB44
 4490 0174 70000000 		.4byte	.LFE44-.LFB44
 4491 0178 00000000 		.4byte	0
 4492 017c 00000000 		.4byte	0
 4493              		.section	.debug_ranges,"",%progbits
 4494              	.Ldebug_ranges0:
 4495 0000 00000000 		.4byte	.LFB0
 4496 0004 14000000 		.4byte	.LFE0
 4497 0008 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 137


 4498 000c 10000000 		.4byte	.LFE1
 4499 0010 00000000 		.4byte	.LFB2
 4500 0014 20000000 		.4byte	.LFE2
 4501 0018 00000000 		.4byte	.LFB3
 4502 001c 38000000 		.4byte	.LFE3
 4503 0020 00000000 		.4byte	.LFB4
 4504 0024 1C000000 		.4byte	.LFE4
 4505 0028 00000000 		.4byte	.LFB5
 4506 002c 30000000 		.4byte	.LFE5
 4507 0030 00000000 		.4byte	.LFB8
 4508 0034 20000000 		.4byte	.LFE8
 4509 0038 00000000 		.4byte	.LFB9
 4510 003c 10000000 		.4byte	.LFE9
 4511 0040 00000000 		.4byte	.LFB10
 4512 0044 0C000000 		.4byte	.LFE10
 4513 0048 00000000 		.4byte	.LFB11
 4514 004c 14000000 		.4byte	.LFE11
 4515 0050 00000000 		.4byte	.LFB12
 4516 0054 10000000 		.4byte	.LFE12
 4517 0058 00000000 		.4byte	.LFB13
 4518 005c 0C000000 		.4byte	.LFE13
 4519 0060 00000000 		.4byte	.LFB20
 4520 0064 14000000 		.4byte	.LFE20
 4521 0068 00000000 		.4byte	.LFB21
 4522 006c 18000000 		.4byte	.LFE21
 4523 0070 00000000 		.4byte	.LFB22
 4524 0074 14000000 		.4byte	.LFE22
 4525 0078 00000000 		.4byte	.LFB23
 4526 007c 14000000 		.4byte	.LFE23
 4527 0080 00000000 		.4byte	.LFB24
 4528 0084 14000000 		.4byte	.LFE24
 4529 0088 00000000 		.4byte	.LFB25
 4530 008c 04000000 		.4byte	.LFE25
 4531 0090 00000000 		.4byte	.LFB14
 4532 0094 20000000 		.4byte	.LFE14
 4533 0098 00000000 		.4byte	.LFB15
 4534 009c 1C000000 		.4byte	.LFE15
 4535 00a0 00000000 		.4byte	.LFB16
 4536 00a4 22000000 		.4byte	.LFE16
 4537 00a8 00000000 		.4byte	.LFB17
 4538 00ac 1E000000 		.4byte	.LFE17
 4539 00b0 00000000 		.4byte	.LFB18
 4540 00b4 4C000000 		.4byte	.LFE18
 4541 00b8 00000000 		.4byte	.LFB19
 4542 00bc 2C000000 		.4byte	.LFE19
 4543 00c0 00000000 		.4byte	.LFB26
 4544 00c4 18000000 		.4byte	.LFE26
 4545 00c8 00000000 		.4byte	.LFB27
 4546 00cc 30000000 		.4byte	.LFE27
 4547 00d0 00000000 		.4byte	.LFB28
 4548 00d4 14000000 		.4byte	.LFE28
 4549 00d8 00000000 		.4byte	.LFB6
 4550 00dc 64010000 		.4byte	.LFE6
 4551 00e0 00000000 		.4byte	.LFB7
 4552 00e4 44000000 		.4byte	.LFE7
 4553 00e8 00000000 		.4byte	.LFB29
 4554 00ec 4C000000 		.4byte	.LFE29
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 138


 4555 00f0 00000000 		.4byte	.LFB33
 4556 00f4 10000000 		.4byte	.LFE33
 4557 00f8 00000000 		.4byte	.LFB34
 4558 00fc 10000000 		.4byte	.LFE34
 4559 0100 00000000 		.4byte	.LFB32
 4560 0104 18000000 		.4byte	.LFE32
 4561 0108 00000000 		.4byte	.LFB35
 4562 010c 10000000 		.4byte	.LFE35
 4563 0110 00000000 		.4byte	.LFB36
 4564 0114 10000000 		.4byte	.LFE36
 4565 0118 00000000 		.4byte	.LFB37
 4566 011c 10000000 		.4byte	.LFE37
 4567 0120 00000000 		.4byte	.LFB38
 4568 0124 10000000 		.4byte	.LFE38
 4569 0128 00000000 		.4byte	.LFB39
 4570 012c 10000000 		.4byte	.LFE39
 4571 0130 00000000 		.4byte	.LFB43
 4572 0134 28000000 		.4byte	.LFE43
 4573 0138 00000000 		.4byte	.LFB40
 4574 013c 0C000000 		.4byte	.LFE40
 4575 0140 00000000 		.4byte	.LFB31
 4576 0144 40000000 		.4byte	.LFE31
 4577 0148 00000000 		.4byte	.LFB30
 4578 014c 20000000 		.4byte	.LFE30
 4579 0150 00000000 		.4byte	.LFB41
 4580 0154 10000000 		.4byte	.LFE41
 4581 0158 00000000 		.4byte	.LFB42
 4582 015c 0C000000 		.4byte	.LFE42
 4583 0160 00000000 		.4byte	.LFB44
 4584 0164 70000000 		.4byte	.LFE44
 4585 0168 00000000 		.4byte	0
 4586 016c 00000000 		.4byte	0
 4587              		.section	.debug_line,"",%progbits
 4588              	.Ldebug_line0:
 4589 0000 5C040000 		.section	.debug_str,"MS",%progbits,1
 4589      02004D00 
 4589      00000201 
 4589      FB0E0D00 
 4589      01010101 
 4590              	.LASF52:
 4591 0000 72616D56 		.ascii	"ramVectorTable\000"
 4591      6563746F 
 4591      72546162 
 4591      6C6500
 4592              	.LASF68:
 4593 000f 62675472 		.ascii	"bgTrim4\000"
 4593      696D3400 
 4594              	.LASF10:
 4595 0017 75696E74 		.ascii	"uint16\000"
 4595      313600
 4596              	.LASF39:
 4597 001e 696E7453 		.ascii	"intState\000"
 4597      74617465 
 4597      00
 4598              	.LASF25:
 4599 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4599      73436C6B 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 139


 4599      57726974 
 4599      65486663 
 4599      6C6B4469 
 4600              	.LASF100:
 4601 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4601      73436C6B 
 4601      50756D70 
 4601      436F6E66 
 4601      696700
 4602              	.LASF106:
 4603 0053 433A5C55 		.ascii	"C:\\Users\\ccheney\\Dropbox (MIT)\\MICA\\Creator\\l"
 4603      73657273 
 4603      5C636368 
 4603      656E6579 
 4603      5C44726F 
 4604 0080 69627261 		.ascii	"ibraries\\micaComponents_testing\\main_v1_0.cydsn\000"
 4604      72696573 
 4604      5C6D6963 
 4604      61436F6D 
 4604      706F6E65 
 4605              	.LASF51:
 4606 00b0 6F6C6449 		.ascii	"oldIsr\000"
 4606      737200
 4607              	.LASF89:
 4608 00b7 72657456 		.ascii	"retVal\000"
 4608      616C00
 4609              	.LASF38:
 4610 00be 43794469 		.ascii	"CyDisableInts\000"
 4610      7361626C 
 4610      65496E74 
 4610      7300
 4611              	.LASF71:
 4612 00cc 63757272 		.ascii	"currentImoTrim2Value\000"
 4612      656E7449 
 4612      6D6F5472 
 4612      696D3256 
 4612      616C7565 
 4613              	.LASF104:
 4614 00e1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4614      43313120 
 4614      352E342E 
 4614      31203230 
 4614      31363036 
 4615 0114 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4615      20726576 
 4615      6973696F 
 4615      6E203233 
 4615      37373135 
 4616 0147 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4616      66756E63 
 4616      74696F6E 
 4616      2D736563 
 4616      74696F6E 
 4617              	.LASF7:
 4618 016f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4618      206C6F6E 
 4618      6720756E 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 140


 4618      7369676E 
 4618      65642069 
 4619              	.LASF98:
 4620 0186 43795379 		.ascii	"CySysTickInitVar\000"
 4620      73546963 
 4620      6B496E69 
 4620      74566172 
 4620      00
 4621              	.LASF40:
 4622 0197 4379456E 		.ascii	"CyEnableInts\000"
 4622      61626C65 
 4622      496E7473 
 4622      00
 4623              	.LASF61:
 4624 01a4 4379536F 		.ascii	"CySoftwareReset\000"
 4624      66747761 
 4624      72655265 
 4624      73657400 
 4625              	.LASF76:
 4626 01b4 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4626      73546963 
 4626      6B456E61 
 4626      626C6549 
 4626      6E746572 
 4627              	.LASF44:
 4628 01cd 4379496E 		.ascii	"CyIntGetState\000"
 4628      74476574 
 4628      53746174 
 4628      6500
 4629              	.LASF6:
 4630 01db 6C6F6E67 		.ascii	"long long int\000"
 4630      206C6F6E 
 4630      6720696E 
 4630      7400
 4631              	.LASF0:
 4632 01e9 7369676E 		.ascii	"signed char\000"
 4632      65642063 
 4632      68617200 
 4633              	.LASF67:
 4634 01f5 66726571 		.ascii	"freq\000"
 4634      00
 4635              	.LASF74:
 4636 01fa 43794465 		.ascii	"CyDelayFreq\000"
 4636      6C617946 
 4636      72657100 
 4637              	.LASF23:
 4638 0206 696E7465 		.ascii	"interruptState\000"
 4638      72727570 
 4638      74537461 
 4638      746500
 4639              	.LASF81:
 4640 0215 43795379 		.ascii	"CySysTickGetReload\000"
 4640      73546963 
 4640      6B476574 
 4640      52656C6F 
 4640      616400
 4641              	.LASF4:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 141


 4642 0228 6C6F6E67 		.ascii	"long int\000"
 4642      20696E74 
 4642      00
 4643              	.LASF45:
 4644 0231 4379496E 		.ascii	"CyIntDisable\000"
 4644      74446973 
 4644      61626C65 
 4644      00
 4645              	.LASF90:
 4646 023e 43795379 		.ascii	"CySysTickGetCallback\000"
 4646      73546963 
 4646      6B476574 
 4646      43616C6C 
 4646      6261636B 
 4647              	.LASF9:
 4648 0253 75696E74 		.ascii	"uint8\000"
 4648      3800
 4649              	.LASF95:
 4650 0259 63796465 		.ascii	"cydelayFreqKhz\000"
 4650      6C617946 
 4650      7265714B 
 4650      687A00
 4651              	.LASF28:
 4652 0268 656E6162 		.ascii	"enable\000"
 4652      6C6500
 4653              	.LASF13:
 4654 026f 646F7562 		.ascii	"double\000"
 4654      6C6500
 4655              	.LASF58:
 4656 0276 73686966 		.ascii	"shift\000"
 4656      7400
 4657              	.LASF33:
 4658 027c 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4658      734C7664 
 4658      436C6561 
 4658      72496E74 
 4658      65727275 
 4659              	.LASF11:
 4660 0293 75696E74 		.ascii	"uint32\000"
 4660      333200
 4661              	.LASF41:
 4662 029a 6D61736B 		.ascii	"mask\000"
 4662      00
 4663              	.LASF34:
 4664 029f 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4664      73436C6B 
 4664      47657453 
 4664      7973636C 
 4664      6B536F75 
 4665              	.LASF60:
 4666 02b7 4379496E 		.ascii	"CyIntGetPriority\000"
 4666      74476574 
 4666      5072696F 
 4666      72697479 
 4666      00
 4667              	.LASF97:
 4668 02c8 63796465 		.ascii	"cydelay32kMs\000"
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 142


 4668      6C617933 
 4668      326B4D73 
 4668      00
 4669              	.LASF85:
 4670 02d5 43795379 		.ascii	"CySysTickInit\000"
 4670      73546963 
 4670      6B496E69 
 4670      7400
 4671              	.LASF59:
 4672 02e3 76616C75 		.ascii	"value\000"
 4672      6500
 4673              	.LASF91:
 4674 02e9 43794765 		.ascii	"CyGetUniqueId\000"
 4674      74556E69 
 4674      71756549 
 4674      6400
 4675              	.LASF83:
 4676 02f7 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4676      73546963 
 4676      6B476574 
 4676      436F756E 
 4676      74466C61 
 4677              	.LASF8:
 4678 030d 756E7369 		.ascii	"unsigned int\000"
 4678      676E6564 
 4678      20696E74 
 4678      00
 4679              	.LASF84:
 4680 031a 43795379 		.ascii	"CySysTickClear\000"
 4680      73546963 
 4680      6B436C65 
 4680      617200
 4681              	.LASF5:
 4682 0329 6C6F6E67 		.ascii	"long unsigned int\000"
 4682      20756E73 
 4682      69676E65 
 4682      6420696E 
 4682      7400
 4683              	.LASF80:
 4684 033b 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4684      734C7664 
 4684      47657449 
 4684      6E746572 
 4684      72757074 
 4685              	.LASF22:
 4686 0356 43795379 		.ascii	"CySysClkImoStop\000"
 4686      73436C6B 
 4686      496D6F53 
 4686      746F7000 
 4687              	.LASF101:
 4688 0366 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4688      74657243 
 4688      72697469 
 4688      63616C53 
 4688      65637469 
 4689              	.LASF46:
 4690 037d 4379496E 		.ascii	"CyIntSetPending\000"
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 143


 4690      74536574 
 4690      50656E64 
 4690      696E6700 
 4691              	.LASF35:
 4692 038d 43795379 		.ascii	"CySysGetResetReason\000"
 4692      73476574 
 4692      52657365 
 4692      74526561 
 4692      736F6E00 
 4693              	.LASF3:
 4694 03a1 73686F72 		.ascii	"short unsigned int\000"
 4694      7420756E 
 4694      7369676E 
 4694      65642069 
 4694      6E7400
 4695              	.LASF54:
 4696 03b4 4379496E 		.ascii	"CyIntSetVector\000"
 4696      74536574 
 4696      56656374 
 4696      6F7200
 4697              	.LASF43:
 4698 03c3 6E756D62 		.ascii	"number\000"
 4698      657200
 4699              	.LASF57:
 4700 03ca 7072696F 		.ascii	"priority\000"
 4700      72697479 
 4700      00
 4701              	.LASF66:
 4702 03d3 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4702      73436C6B 
 4702      57726974 
 4702      65496D6F 
 4702      46726571 
 4703              	.LASF49:
 4704 03e8 4379496E 		.ascii	"CyIntSetSysVector\000"
 4704      74536574 
 4704      53797356 
 4704      6563746F 
 4704      7200
 4705              	.LASF26:
 4706 03fa 43795379 		.ascii	"CySysEnablePumpClock\000"
 4706      73456E61 
 4706      626C6550 
 4706      756D7043 
 4706      6C6F636B 
 4707              	.LASF16:
 4708 040f 72656733 		.ascii	"reg32\000"
 4708      3200
 4709              	.LASF86:
 4710 0415 43795379 		.ascii	"CySysTickStart\000"
 4710      73546963 
 4710      6B537461 
 4710      727400
 4711              	.LASF37:
 4712 0424 72657475 		.ascii	"returnStatus\000"
 4712      726E5374 
 4712      61747573 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 144


 4712      00
 4713              	.LASF19:
 4714 0431 73697A65 		.ascii	"sizetype\000"
 4714      74797065 
 4714      00
 4715              	.LASF47:
 4716 043a 4379496E 		.ascii	"CyIntClearPending\000"
 4716      74436C65 
 4716      61725065 
 4716      6E64696E 
 4716      6700
 4717              	.LASF18:
 4718 044c 6C6F6E67 		.ascii	"long double\000"
 4718      20646F75 
 4718      626C6500 
 4719              	.LASF50:
 4720 0458 61646472 		.ascii	"address\000"
 4720      65737300 
 4721              	.LASF69:
 4722 0460 62675472 		.ascii	"bgTrim5\000"
 4722      696D3500 
 4723              	.LASF29:
 4724 0468 73797363 		.ascii	"sysclkSource\000"
 4724      6C6B536F 
 4724      75726365 
 4724      00
 4725              	.LASF88:
 4726 0475 66756E63 		.ascii	"function\000"
 4726      74696F6E 
 4726      00
 4727              	.LASF99:
 4728 047e 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4728      6F467265 
 4728      714D687A 
 4728      32526567 
 4728      00
 4729              	.LASF82:
 4730 048f 43795379 		.ascii	"CySysTickGetValue\000"
 4730      73546963 
 4730      6B476574 
 4730      56616C75 
 4730      6500
 4731              	.LASF94:
 4732 04a1 63796465 		.ascii	"cydelayFreqHz\000"
 4732      6C617946 
 4732      72657148 
 4732      7A00
 4733              	.LASF56:
 4734 04af 4379496E 		.ascii	"CyIntSetPriority\000"
 4734      74536574 
 4734      5072696F 
 4734      72697479 
 4734      00
 4735              	.LASF12:
 4736 04c0 666C6F61 		.ascii	"float\000"
 4736      7400
 4737              	.LASF102:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 145


 4738 04c6 43794578 		.ascii	"CyExitCriticalSection\000"
 4738      69744372 
 4738      69746963 
 4738      616C5365 
 4738      6374696F 
 4739              	.LASF72:
 4740 04dc 43795379 		.ascii	"CySysLvdEnable\000"
 4740      734C7664 
 4740      456E6162 
 4740      6C6500
 4741              	.LASF20:
 4742 04eb 63795379 		.ascii	"cySysTickCallback\000"
 4742      73546963 
 4742      6B43616C 
 4742      6C626163 
 4742      6B00
 4743              	.LASF55:
 4744 04fd 4379496E 		.ascii	"CyIntGetVector\000"
 4744      74476574 
 4744      56656374 
 4744      6F7200
 4745              	.LASF63:
 4746 050c 6D696C6C 		.ascii	"milliseconds\000"
 4746      69736563 
 4746      6F6E6473 
 4746      00
 4747              	.LASF103:
 4748 0519 43794465 		.ascii	"CyDelayCycles\000"
 4748      6C617943 
 4748      79636C65 
 4748      7300
 4749              	.LASF15:
 4750 0527 72656738 		.ascii	"reg8\000"
 4750      00
 4751              	.LASF73:
 4752 052c 74687265 		.ascii	"threshold\000"
 4752      73686F6C 
 4752      6400
 4753              	.LASF48:
 4754 0536 43794861 		.ascii	"CyHalt\000"
 4754      6C7400
 4755              	.LASF1:
 4756 053d 756E7369 		.ascii	"unsigned char\000"
 4756      676E6564 
 4756      20636861 
 4756      7200
 4757              	.LASF2:
 4758 054b 73686F72 		.ascii	"short int\000"
 4758      7420696E 
 4758      7400
 4759              	.LASF42:
 4760 0555 4379496E 		.ascii	"CyIntEnable\000"
 4760      74456E61 
 4760      626C6500 
 4761              	.LASF53:
 4762 0561 4379496E 		.ascii	"CyIntGetSysVector\000"
 4762      74476574 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 146


 4762      53797356 
 4762      6563746F 
 4762      7200
 4763              	.LASF27:
 4764 0573 636C6B53 		.ascii	"clkSelect\000"
 4764      656C6563 
 4764      7400
 4765              	.LASF64:
 4766 057d 43794465 		.ascii	"CyDelayUs\000"
 4766      6C617955 
 4766      7300
 4767              	.LASF36:
 4768 0587 72656173 		.ascii	"reason\000"
 4768      6F6E00
 4769              	.LASF14:
 4770 058e 63686172 		.ascii	"char\000"
 4770      00
 4771              	.LASF17:
 4772 0593 63796973 		.ascii	"cyisraddress\000"
 4772      72616464 
 4772      72657373 
 4772      00
 4773              	.LASF77:
 4774 05a0 43795379 		.ascii	"CySysTickEnable\000"
 4774      73546963 
 4774      6B456E61 
 4774      626C6500 
 4775              	.LASF30:
 4776 05b0 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4776      73436C6B 
 4776      57726974 
 4776      65537973 
 4776      636C6B44 
 4777              	.LASF87:
 4778 05c7 43795379 		.ascii	"CySysTickSetCallback\000"
 4778      73546963 
 4778      6B536574 
 4778      43616C6C 
 4778      6261636B 
 4779              	.LASF93:
 4780 05dc 43795379 		.ascii	"CySysTickCallbacks\000"
 4780      73546963 
 4780      6B43616C 
 4780      6C626163 
 4780      6B7300
 4781              	.LASF92:
 4782 05ef 756E6971 		.ascii	"uniqueId\000"
 4782      75654964 
 4782      00
 4783              	.LASF62:
 4784 05f8 43794465 		.ascii	"CyDelay\000"
 4784      6C617900 
 4785              	.LASF78:
 4786 0600 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4786      73546963 
 4786      6B446973 
 4786      61626C65 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 147


 4786      496E7465 
 4787              	.LASF32:
 4788 061a 43795379 		.ascii	"CySysLvdDisable\000"
 4788      734C7664 
 4788      44697361 
 4788      626C6500 
 4789              	.LASF96:
 4790 062a 63796465 		.ascii	"cydelayFreqMhz\000"
 4790      6C617946 
 4790      7265714D 
 4790      687A00
 4791              	.LASF75:
 4792 0639 43795379 		.ascii	"CySysTickStop\000"
 4792      73546963 
 4792      6B53746F 
 4792      7000
 4793              	.LASF31:
 4794 0647 64697669 		.ascii	"divider\000"
 4794      64657200 
 4795              	.LASF21:
 4796 064f 43795379 		.ascii	"CySysClkImoStart\000"
 4796      73436C6B 
 4796      496D6F53 
 4796      74617274 
 4796      00
 4797              	.LASF70:
 4798 0660 6E657749 		.ascii	"newImoTrim2Value\000"
 4798      6D6F5472 
 4798      696D3256 
 4798      616C7565 
 4798      00
 4799              	.LASF105:
 4800 0671 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4800      72617465 
 4800      645F536F 
 4800      75726365 
 4800      5C50536F 
 4801              	.LASF65:
 4802 0690 6D696372 		.ascii	"microseconds\000"
 4802      6F736563 
 4802      6F6E6473 
 4802      00
 4803              	.LASF24:
 4804 069d 746D7052 		.ascii	"tmpReg\000"
 4804      656700
 4805              	.LASF79:
 4806 06a4 43795379 		.ascii	"CySysTickSetReload\000"
 4806      73546963 
 4806      6B536574 
 4806      52656C6F 
 4806      616400
 4807              	.LASF107:
 4808 06b7 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4808      73546963 
 4808      6B536572 
 4808      76696365 
 4808      43616C6C 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\ccCUNJm1.s 			page 148


 4809              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
