ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.main,"ax",%progbits
  20              		.align	2
  21              		.global	main
  22              		.code	16
  23              		.thumb_func
  24              		.type	main, %function
  25              	main:
  26              	.LFB36:
  27              		.file 1 "main.c"
   1:main.c        **** /***************************************************************************
   2:main.c        **** *                                 MICA  Â© 2018
   3:main.c        **** *                           MIT BioInstrumentation Lab
   4:main.c        **** *
   5:main.c        **** * File: main.c
   6:main.c        **** * Workspace: DriveBot_v5
   7:main.c        **** * Project: DriveBot_v5.1
   8:main.c        **** * Version: v5.1.0
   9:main.c        **** * Authors: Craig Cheney, Scott McCuen
  10:main.c        **** * 
  11:main.c        **** * PCB: DriveBot MCU v5.1.0
  12:main.c        **** * PSoC: CY8C4245LQI-483
  13:main.c        **** *
  14:main.c        **** * Brief:
  15:main.c        **** *   This is the top-level application file for the DriveBot microcontoller. It
  16:main.c        **** *   is responsible for receiving commands from the IMU Cube over the UART, and 
  17:main.c        **** *   controlling the Drivebot based on these commands. It outputs the velocity
  18:main.c        **** *   data to IMU, which streams it to the host device. 
  19:main.c        **** * 
  20:main.c        **** * 2018.07.25 CC - Abstract out "boardTesting.c"
  21:main.c        **** * 2018.04.10 CC - Upgrade to v5. Switch to MICA Creator components from libMica
  22:main.c        **** * 2017.08.25 CC - Add libMica
  23:main.c        **** * 2017.08.13 SM - Add motor debugging
  24:main.c        **** * 2017.08.11 CC - Document Created
  25:main.c        **** ********************************************************************************/
  26:main.c        **** #include "project.h"
  27:main.c        **** #include <stdbool.h>
  28:main.c        **** #include <stdio.h>
  29:main.c        **** #include "packet_testing.h"
  30:main.c        **** #include "testRunner.h"
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 2


  31:main.c        **** #include "supportCubeParser.h"
  32:main.c        **** 
  33:main.c        **** /*  -------------- DEBUGGING --------------
  34:main.c        **** * Uncomment MICA_DEBUG to enable general debugging.
  35:main.c        **** * Uncomment MICA_DEBUG_<case> below to
  36:main.c        **** * enable ONE of the debug levels.
  37:main.c        **** */
  38:main.c        **** //#define MICA_DEBUG
  39:main.c        **** 
  40:main.c        **** /* -------------- DEBUG CASE --------------
  41:main.c        **** * Uncomment ONE of the following
  42:main.c        **** * Debugging will only occur when MICA_DEBUG is defined
  43:main.c        **** */
  44:main.c        **** #ifdef MICA_DEBUG
  45:main.c        **** //    #define MICA_DEBUG_LEDS         /* Test the onboard LEDs */
  46:main.c        ****     #define MICA_DEBUG_SELF_UART    /* Checks to see if the mica UART RX & TX lines are shorted tog
  47:main.c        **** #endif
  48:main.c        **** 
  49:main.c        **** /* -------------- END DEBUG CASE --------------  */
  50:main.c        **** 
  51:main.c        **** /*  -------------- Testing --------------
  52:main.c        **** * Uncomment MICA_TEST to enable specific tests.
  53:main.c        **** * Uncomment MICA_TEST_<case> below to
  54:main.c        **** * enable ONE of the test levels. */
  55:main.c        **** 
  56:main.c        **** #define MICA_TEST
  57:main.c        **** 
  58:main.c        **** /* -------------- TEST LEVEL --------------
  59:main.c        **** * Uncomment ONE of the following
  60:main.c        **** * Testing will only occur when MICA_TEST is defined
  61:main.c        **** */
  62:main.c        **** #ifdef MICA_TEST
  63:main.c        **** //    #define MICA_TEST_PACKETS_ERRORS       /* Test various error on packts */
  64:main.c        **** //    #define MICA_TEST_PACKETS           /* Test Packet communication */
  65:main.c        **** //    #define MICA_TEST_PACKETS_ISR        /* Receive packets from IMU via interrupt and print resu
  66:main.c        **** //    #define MICA_TEST_PERIPHERAL_ID         /* Request the ID from the peripheral and display the
  67:main.c        ****     #define MICA_TEST_SELF_PACKETS         /* REQ: Hard-wired RX & TX lines - Send packets to self 
  68:main.c        ****     
  69:main.c        **** #endif
  70:main.c        **** /* -------------- END TEST LEVEL --------------  */
  71:main.c        **** 
  72:main.c        **** /* --------- Local Variables --------- */
  73:main.c        **** 
  74:main.c        **** void ISR_imuUart(void);
  75:main.c        **** void ISR_usbUart(void);
  76:main.c        **** void ISR_Timer(void);
  77:main.c        **** /* State variables */
  78:main.c        **** volatile bool flag_pendingRxByte = false;
  79:main.c        **** volatile bool flag_pendingUsbByte = false;
  80:main.c        **** volatile bool timerExpired = false;
  81:main.c        **** volatile uint32_t isrErr = ZERO;
  82:main.c        **** /*******************************************************************************
  83:main.c        **** * Function Name: main()
  84:main.c        **** ********************************************************************************
  85:main.c        **** * Summary:
  86:main.c        **** *   The top-level application function for the project.
  87:main.c        **** *
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 3


  88:main.c        **** * Parameters:
  89:main.c        **** *   None
  90:main.c        **** *
  91:main.c        **** * Return:
  92:main.c        **** *   None
  93:main.c        **** *
  94:main.c        **** *******************************************************************************/
  95:main.c        **** int main(void) {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 272
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 C4B0     		sub	sp, sp, #272
  39              		.cfi_def_cfa_offset 288
  96:main.c        **** 
  97:main.c        **** 
  98:main.c        ****     /* Enable global interrupts */
  99:main.c        ****     CyGlobalIntEnable;
  40              		.loc 1 99 0
  41              		.syntax divided
  42              	@ 99 "main.c" 1
  43 0004 62B6     		CPSIE   i
  44              	@ 0 "" 2
 100:main.c        ****     
 101:main.c        **** /* %%%%%%%%%%%%%%%%%% Begin Debugging %%%%%%%%%%%%%%%%%% */
 102:main.c        **** #ifdef MICA_DEBUG
 103:main.c        ****     #warning "MICA_DEBUG is enabled"
 104:main.c        ****     /* Enable global interrupts. */
 105:main.c        ****     CyGlobalIntEnable; 
 106:main.c        ****     #ifdef MICA_DEBUG_LEDS
 107:main.c        ****         /* Test the onboard LEDs
 108:main.c        ****         Expeted outcome: 
 109:main.c        ****         0. All LEDs off
 110:main.c        ****         1. Red LED on
 111:main.c        ****         2. Green LED on
 112:main.c        ****         3. Blue LED on
 113:main.c        ****         4. Yellow (RB)
 114:main.c        ****         5. Cyan (BG)
 115:main.c        ****         6. Magenta (RG)
 116:main.c        ****         7. White (RGB) LEDs on
 117:main.c        ****         */
 118:main.c        ****         /* Infinite loop */
 119:main.c        ****         LEDS_Test(MICA_TEST_INFINITE);
 120:main.c        ****     /* End MICA_DEBUG_LEDS */
 121:main.c        ****     #elif defined MICA_DEBUG_SELF_UART
 122:main.c        ****          /* Checks to see if the mica UART RX & TX lines are shorted together */
 123:main.c        ****         /* Expected outcome:
 124:main.c        ****         0. Green LED on
 125:main.c        ****         1. UART writes a byte out the TX line
 126:main.c        ****         2. UART reads in byte from RX line
 127:main.c        ****         3a. If data is available and matches sent B led toggle
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 4


 128:main.c        ****         3b. If data does not match toggle R led  
 129:main.c        ****         */
 130:main.c        ****         UART_IMU_Start();
 131:main.c        ****         LEDS_Write(LEDS_ON_GREEN);
 132:main.c        ****         MICA_delayMs(MICA_DELAY_MS_SEC_ONE);
 133:main.c        ****         LEDS_Write(LEDS_ON_NONE);
 134:main.c        ****         uint8_t i = ZERO;
 135:main.c        ****         /* Infinite loop */
 136:main.c        ****         for(;;){
 137:main.c        ****             /* Write a byte out over the UART */
 138:main.c        ****             imuUart_putChar(i);
 139:main.c        ****             MICA_delayMs(ONE);
 140:main.c        ****             /* Variables for debugger */
 141:main.c        ****             volatile uint8 bytesPending = UART_IMU_SpiUartGetRxBufferSize();
 142:main.c        ****             volatile uint8_t byte = imuUart_getChar();
 143:main.c        ****             /* Expect one byte in the RX buffer */
 144:main.c        ****             if(bytesPending == ONE && byte == i++){
 145:main.c        ****                 LEDS_B_Toggle();
 146:main.c        ****             } else {
 147:main.c        ****                 LEDS_R_Toggle();   
 148:main.c        ****             }
 149:main.c        ****             MICA_delayMs(MICA_DELAY_MS_SEC_ONE);
 150:main.c        ****         }
 151:main.c        ****     /* End MICA_DEBUG_SELF_UART */
 152:main.c        ****     #else
 153:main.c        ****         #error "At least ONE MICA_DEBUG_<case> must be defined if MICA_DEBUG is defined"
 154:main.c        ****     #endif /* End MICA_DEBUG_<case> */
 155:main.c        ****     /* Infinite loop */
 156:main.c        ****     for(;;){}
 157:main.c        **** #endif /* MICA_DEBUG */
 158:main.c        **** #ifdef MICA_TEST
 159:main.c        ****         testRunner_setPrintFunction(usbUart_print);
  45              		.loc 1 159 0
  46              		.thumb
  47              		.syntax unified
  48 0006 4448     		ldr	r0, .L6
  49 0008 FFF7FEFF 		bl	testRunner_setPrintFunction
  50              	.LVL0:
 160:main.c        ****     /* end MICA_TEST_PACKET_SPAWN */
 161:main.c        ****         #if defined MICA_TEST_PACKETS_ERRORS
 162:main.c        ****         /* Unit tests for MICA Errors */
 163:main.c        ****         LEDS_Write(LEDS_ON_GREEN);
 164:main.c        ****         UART_USB_Start();
 165:main.c        ****         usbUart_clearScreen();
 166:main.c        **** 
 167:main.c        ****         /* Print Program Header */
 168:main.c        ****         usbUart_printHeader(__TIME__, __DATE__, "      PACKET TESTING UNIT TESTS ");
 169:main.c        ****         /* Set the Print function */
 170:main.c        ****         
 171:main.c        ****         /* ### Ensure the packet version ### */
 172:main.c        ****         {
 173:main.c        ****             usbUart_print("\r\n*** Packet Version ***\r\n");
 174:main.c        ****             testRunner_run(testRunner_printResults( "Packet Version 1.4",  packets_VERSION  , 0x104
 175:main.c        ****         }
 176:main.c        ****         
 177:main.c        ****         /* ### Helpers test suite ### */
 178:main.c        ****         { 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 5


 179:main.c        ****             usbUart_print("\r\n*** Command to Module ***\r\n");
 180:main.c        ****             testRunner_run(test_commandToModule("Control Command to Module",  0x00, packets_ID_MODU
 181:main.c        ****             testRunner_run(test_commandToModule("Control Command to Module",  0x01, packets_ID_MODU
 182:main.c        ****             testRunner_run(test_commandToModule("Control Command to Module",  0x1F, packets_ID_MODU
 183:main.c        ****             testRunner_run(test_commandToModule("Control Response to Module", 0x80, packets_ID_MODU
 184:main.c        ****             testRunner_run(test_commandToModule("Control Response to Module", 0x81, packets_ID_MODU
 185:main.c        ****             testRunner_run(test_commandToModule("Control Response to Module", 0x9F, packets_ID_MODU
 186:main.c        ****             
 187:main.c        ****             testRunner_run(test_commandToModule("Actuation Command to Module",  0x20, packets_ID_MO
 188:main.c        ****             testRunner_run(test_commandToModule("Actuation Command to Module",  0x25, packets_ID_MO
 189:main.c        ****             testRunner_run(test_commandToModule("Actuation Command to Module",  0x3F, packets_ID_MO
 190:main.c        ****             testRunner_run(test_commandToModule("Actuation Response to Module", 0xA0, packets_ID_MO
 191:main.c        ****             testRunner_run(test_commandToModule("Actuation Response to Module", 0xB3, packets_ID_MO
 192:main.c        ****             testRunner_run(test_commandToModule("Actuation Response to Module", 0xBF, packets_ID_MO
 193:main.c        ****             
 194:main.c        ****             testRunner_run(test_commandToModule("Sensing Command to Module",   0x40, packets_ID_MOD
 195:main.c        ****             testRunner_run(test_commandToModule("Sensing Command to Module",   0x44, packets_ID_MOD
 196:main.c        ****             testRunner_run(test_commandToModule("Sensing Command to Module",   0x5F, packets_ID_MOD
 197:main.c        ****             testRunner_run(test_commandToModule("Sensing Response to Module",  0xC0, packets_ID_MOD
 198:main.c        ****             testRunner_run(test_commandToModule("Sensing Response to Module",  0xCA, packets_ID_MOD
 199:main.c        ****             testRunner_run(test_commandToModule("Sensing Response to Module",  0xDF, packets_ID_MOD
 200:main.c        ****             
 201:main.c        ****             testRunner_run(test_commandToModule("Energy Command to Module",   0x60, packets_ID_MODU
 202:main.c        ****             testRunner_run(test_commandToModule("Energy Command to Module",   0x7A, packets_ID_MODU
 203:main.c        ****             testRunner_run(test_commandToModule("Energy Command to Module",   0x7F, packets_ID_MODU
 204:main.c        ****             testRunner_run(test_commandToModule("Energy Response to Module",  0xE0, packets_ID_MODU
 205:main.c        ****             testRunner_run(test_commandToModule("Energy Response to Module",  0xEB, packets_ID_MODU
 206:main.c        ****             testRunner_run(test_commandToModule("Energy Response to Module",  0xFF, packets_ID_MODU
 207:main.c        ****         }
 208:main.c        ****         
 209:main.c        ****         /* ### Buffer Generate Test Suite ### */
 210:main.c        ****         {
 211:main.c        ****             /* Create a packet object and initialize */
 212:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 213:main.c        ****             packets_initialize(&packetBuffer);
 214:main.c        ****             usbUart_print("\r\n*** Buffer generation ***\r\n");
 215:main.c        ****             /* Nominal Case */
 216:main.c        ****             testRunner_run(test_generateBuffers(&packetBuffer, "Normal", packets_LEN_BLOCK_PACKET, 
 217:main.c        ****             /* Long test */
 218:main.c        ****             testRunner_run(test_generateBuffers(&packetBuffer, "Long", 1000, packets_ERR_MEMORY));
 219:main.c        ****             /* Multiple create */
 220:main.c        ****             packets_generateBuffers(&packetBuffer, 10);
 221:main.c        ****             testRunner_run(test_generateBuffers(&packetBuffer, "Multiple Create", 10, packets_ERR_S
 222:main.c        ****             
 223:main.c        ****             /* Clean Up */
 224:main.c        ****             packets_destoryBuffers(&packetBuffer);
 225:main.c        ****         }
 226:main.c        ****         
 227:main.c        ****         /* ### Buffer Destroy Test Suite ### */
 228:main.c        ****         {
 229:main.c        ****             /* Create a packet object and initialize */
 230:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 231:main.c        ****             packets_initialize(&packetBuffer);
 232:main.c        ****             usbUart_print("\r\n*** Buffer Destruction ***\r\n");
 233:main.c        ****             /* Buffer not generated */
 234:main.c        ****             testRunner_run( test_destroyBuffers(&packetBuffer, "Non-generated", packets_ERR_MEMORY)
 235:main.c        ****             /* Normal packet */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 6


 236:main.c        ****             packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 237:main.c        ****             testRunner_run(test_destroyBuffers(&packetBuffer, "Normal", packets_ERR_SUCCESS));
 238:main.c        ****             /* Too long buffer */
 239:main.c        ****             packets_generateBuffers(&packetBuffer, 2000);
 240:main.c        ****             testRunner_run(test_destroyBuffers(&packetBuffer, "Failed Gen", packets_ERR_MEMORY));
 241:main.c        ****             /* Multiple destroy */
 242:main.c        ****             packets_generateBuffers(&packetBuffer, 10);
 243:main.c        ****             packets_destoryBuffers(&packetBuffer);
 244:main.c        ****             testRunner_run(test_destroyBuffers(&packetBuffer, "Multiple destroy", packets_ERR_MEMOR
 245:main.c        ****             
 246:main.c        ****             /* Clean Up (Uncessary, here for consistency */
 247:main.c        ****             packets_destoryBuffers(&packetBuffer);
 248:main.c        ****         }
 249:main.c        ****         
 250:main.c        ****         /* ### Memory leak testing ### */
 251:main.c        ****         {
 252:main.c        ****             usbUart_print("\r\n*** Memory Leak Generation ***\r\n");
 253:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 254:main.c        ****             packets_initialize(&packetBuffer);
 255:main.c        ****             testRunner_run(test_generateBuffers_iteration(&packetBuffer,"Repeat Generations", 1000)
 256:main.c        ****         }
 257:main.c        ****         
 258:main.c        ****         
 259:main.c        ****         /* ### Packet Creation Test Suite - State Errors ### */
 260:main.c        ****         {
 261:main.c        ****             usbUart_print("\r\n*** Construct Packet Test Suite - State Errors ***\r\n");
 262:main.c        ****             /* Create a packet object and initialize */
 263:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 264:main.c        ****             packets_initialize(&packetBuffer);
 265:main.c        ****             packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 266:main.c        ****             /* Local reference to sending buffer */
 267:main.c        ****             packets_PACKET_S* sendPacket = &(packetBuffer.send.packet); 
 268:main.c        ****             /* Define dummy data */
 269:main.c        ****             #define DATA_LEN 0x03
 270:main.c        ****             uint8 dummyData[DATA_LEN] = {0x01, 0x03, 0x05};
 271:main.c        ****             sendPacket->moduleId = packets_ID_MODULE_SENSING;
 272:main.c        ****             sendPacket->cmd = 0xCC;
 273:main.c        ****             sendPacket->payloadLen = DATA_LEN;
 274:main.c        ****             memcpy(sendPacket->payload, dummyData, sendPacket->payloadLen);
 275:main.c        ****             /* Simple working packet */
 276:main.c        ****             testRunner_run(test_packetCreation_stateErrors(&packetBuffer, "Basic Packet", packets_E
 277:main.c        ****             /* No Payload */
 278:main.c        ****             sendPacket->moduleId = 1;
 279:main.c        ****             sendPacket->payloadLen = ZERO;
 280:main.c        ****             testRunner_run(test_packetCreation_stateErrors(&packetBuffer, "No Payload", packets_ERR
 281:main.c        ****             /* Long Packet - no memory */
 282:main.c        ****             sendPacket->payloadLen = packets_LEN_BLOCK_PACKET + 1;
 283:main.c        ****             testRunner_run(test_packetCreation_stateErrors(&packetBuffer, "Long Payload - no memory
 284:main.c        ****             /* Long Packet - max payload, and memory */
 285:main.c        ****             sendPacket->payloadLen = 1024;
 286:main.c        ****             testRunner_run(test_packetCreation_stateErrors(&packetBuffer, "Long Payload - max paylo
 287:main.c        ****             
 288:main.c        ****             /* Clean Up */
 289:main.c        ****             packets_destoryBuffers(&packetBuffer);
 290:main.c        ****         }
 291:main.c        ****         
 292:main.c        ****         /* ### Packet Creation Test Suite - Packet Values ### */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 7


 293:main.c        ****         {
 294:main.c        ****             usbUart_print("\r\n*** Construct Packet Test Suite - Packet Values ***\r\n");
 295:main.c        ****             /* Create a packet object and initialize */
 296:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 297:main.c        ****             packets_initialize(&packetBuffer);
 298:main.c        ****             packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 299:main.c        ****             /* Local reference to sending buffer */
 300:main.c        ****             packets_PACKET_S* sendPacket = &(packetBuffer.send.packet); 
 301:main.c        ****             /* Define valid dummy data */
 302:main.c        ****             #define DATA_LEN 0x03
 303:main.c        ****             uint8 dummyData[DATA_LEN] = {0x01, 0x03, 0x05};
 304:main.c        ****             sendPacket->moduleId = packets_ID_MODULE_CONTROL;
 305:main.c        ****             sendPacket->cmd = packets_CMD_CONTROL_MIN;
 306:main.c        ****             sendPacket->payloadLen = DATA_LEN;
 307:main.c        ****             memcpy(sendPacket->payload, dummyData, sendPacket->payloadLen);
 308:main.c        ****             /* Simple working packet */
 309:main.c        ****             uint8 validPacket[15] = {0x01, 0x00, 0x00, 0x03, 0x01, 0x03, 0x05, 0x00, 0x00, 0xFF, 0x
 310:main.c        ****             testRunner_run(test_packetCreation_packetVals(&packetBuffer, "Simple Packet", validPack
 311:main.c        ****             /* No payload */
 312:main.c        ****             sendPacket->payloadLen = ZERO;
 313:main.c        ****             uint8 noPayloadPacket[15] = {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xAA};
 314:main.c        ****             testRunner_run(test_packetCreation_packetVals(&packetBuffer, "No payload", noPayloadPac
 315:main.c        ****             /* No Acknowledge  Flags */
 316:main.c        ****             sendPacket->flags = packets_FLAG_NO_ACK;
 317:main.c        ****             uint8 respFlagPacket[15] = {0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFD, 0xAA};
 318:main.c        ****             testRunner_run(test_packetCreation_packetVals(&packetBuffer, "No acknowledge flag", res
 319:main.c        ****             /* Response and payload */
 320:main.c        ****             sendPacket->payloadLen = 1;
 321:main.c        ****             dummyData[0] = 0xFF;
 322:main.c        ****             memcpy(sendPacket->payload, dummyData, sendPacket->payloadLen);
 323:main.c        ****             sendPacket->flags = packets_FLAG_NO_ACK;
 324:main.c        ****             uint8 respFlagPacket2[15] = {0x01, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x02, 0xFE, 0xFD, 0xAA
 325:main.c        ****             testRunner_run(test_packetCreation_packetVals(&packetBuffer, "No acknowledge flag 2", r
 326:main.c        ****             
 327:main.c        ****             /* Clean Up */
 328:main.c        ****             packets_destoryBuffers(&packetBuffer);
 329:main.c        ****         }
 330:main.c        ****         
 331:main.c        ****         /* ### Send Packet Test Suite ### */
 332:main.c        ****         {
 333:main.c        ****             usbUart_print("\r\n*** Send Packet ***\r\n");
 334:main.c        ****             /* Setup - Create a packet object and initialize */
 335:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 336:main.c        ****             packets_initialize(&packetBuffer);
 337:main.c        ****             packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 338:main.c        ****             /* Basic Packet */
 339:main.c        ****             testRunner_run(test_sendPacket(&packetBuffer, "Send Basic Packet", packets_ERR_SUCCESS)
 340:main.c        ****             testRunner_run(test_sendPacket(&packetBuffer, "Send Basic Packet 2", packets_ERR_SUCCES
 341:main.c        ****             
 342:main.c        ****         
 343:main.c        ****             /* Clean Up */
 344:main.c        ****             packets_destoryBuffers(&packetBuffer);
 345:main.c        ****         }
 346:main.c        ****         
 347:main.c        ****         /* ### Process RX Byte Test Suite ### */
 348:main.c        ****         {
 349:main.c        ****             usbUart_print("\r\n*** Process RX Byte - State Errors ***\r\n");
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 8


 350:main.c        ****             /* Create a packet object and initialize */
 351:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 352:main.c        ****             packets_initialize(&packetBuffer);
 353:main.c        ****             /* No buffers generated */
 354:main.c        ****             uint8 bytes[1] = {packets_SYM_START};
 355:main.c        ****             testRunner_run(test_processRxByte_stateError(&packetBuffer, bytes, 1, "No Buffers", pac
 356:main.c        ****             /* Generate buffer */
 357:main.c        ****             packets_generateBuffers(&packetBuffer, 100);
 358:main.c        ****             /* Buffer overflow */
 359:main.c        ****             packetBuffer.receive.processBuffer.bufferIndex = 100;
 360:main.c        ****             bytes[0] = packets_SYM_START;
 361:main.c        ****             testRunner_run(test_processRxByte_stateError(&packetBuffer, bytes, 1, "Buffer overflow"
 362:main.c        ****             /* Valid Start Byte */
 363:main.c        ****             bytes[0] = packets_SYM_START;
 364:main.c        ****             testRunner_run(test_processRxByte_stateError(&packetBuffer, bytes, 1, "Valid Start", pa
 365:main.c        ****             /* Invalid Start Byte */
 366:main.c        ****             bytes[0] = packets_SYM_START + 1;
 367:main.c        ****             testRunner_run(test_processRxByte_stateError(&packetBuffer, bytes, 1, "invalid Start", 
 368:main.c        ****             
 369:main.c        ****             /* Clean up */
 370:main.c        ****             packets_destoryBuffers(&packetBuffer);
 371:main.c        ****         }
 372:main.c        ****         
 373:main.c        ****         
 374:main.c        ****         /* ### Packet parsing Test Suite - State Errors ### */
 375:main.c        ****         {
 376:main.c        ****             usbUart_print("\r\n*** Packet parsing - State Errors ***\r\n");
 377:main.c        ****             /* Setup - Create a packet object and initialize */
 378:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 379:main.c        ****             packets_initialize(&packetBuffer);
 380:main.c        ****             packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 381:main.c        ****             /* Local references */
 382:main.c        ****             packets_BUFFER_PROCESS_S* txBuffer = &(packetBuffer.send.processBuffer);
 383:main.c        ****             /* No Payload, success */
 384:main.c        ****             uint8 noPayloadPacket[15] = {0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0xAA};
 385:main.c        ****             txBuffer->bufferIndex = 9;
 386:main.c        ****             memcpy(txBuffer->buffer, noPayloadPacket, txBuffer->bufferIndex);
 387:main.c        ****             testRunner_run(test_packetParsing_stateErrors(&packetBuffer, "Valid packet - no payload
 388:main.c        ****             /* Success, payload */
 389:main.c        ****             uint8 basePacket[15] = {0x01, 0x05, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0xFA, 0xA
 390:main.c        ****             txBuffer->bufferIndex = 11;
 391:main.c        ****             memcpy(txBuffer->buffer, basePacket, txBuffer->bufferIndex);
 392:main.c        ****             testRunner_run(test_packetParsing_stateErrors(&packetBuffer, "Valid packet ", packets_E
 393:main.c        ****             /* Incomplete packet */
 394:main.c        ****             txBuffer->bufferIndex = 8;
 395:main.c        ****             memcpy(txBuffer->buffer, noPayloadPacket,txBuffer->bufferIndex);
 396:main.c        ****             testRunner_run(test_packetParsing_stateErrors(&packetBuffer, "Short packet", packets_ER
 397:main.c        ****             /* Invalid start symbol */
 398:main.c        ****             uint8 badStartPacket[15] = {0x02, 0x05, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0xF9,
 399:main.c        ****             txBuffer->bufferIndex = 11;
 400:main.c        ****             memcpy(txBuffer->buffer, badStartPacket, txBuffer->bufferIndex);
 401:main.c        ****             testRunner_run(test_packetParsing_stateErrors(&packetBuffer, "Invalid start sym", packe
 402:main.c        ****             /* Invalid Checksum */
 403:main.c        ****             uint8 badChecksumPacket[15] = {0x01, 0x05, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0x
 404:main.c        ****             txBuffer->bufferIndex = 11;
 405:main.c        ****             memcpy(txBuffer->buffer, badChecksumPacket, txBuffer->bufferIndex);
 406:main.c        ****             testRunner_run(test_packetParsing_stateErrors(&packetBuffer, "Bad Checksum", packets_ER
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 9


 407:main.c        ****             /* Invalid End symbol */
 408:main.c        ****             uint8 badEndPacket[15] = {0x01, 0x05, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0xFA, 0
 409:main.c        ****             txBuffer->bufferIndex = 11;
 410:main.c        ****             memcpy(txBuffer->buffer, badEndPacket, txBuffer->bufferIndex);
 411:main.c        ****             testRunner_run(test_packetParsing_stateErrors(&packetBuffer, "Invalid End Symbol", pack
 412:main.c        ****         
 413:main.c        ****             /* Clean up */
 414:main.c        ****             packets_destoryBuffers(&packetBuffer);
 415:main.c        ****         }
 416:main.c        ****         
 417:main.c        ****         
 418:main.c        ****         /* ### Packet parsing Test Suite - Packet vals ### */
 419:main.c        ****         {
 420:main.c        ****             usbUart_print("\r\n*** Packet parsing - Packet Values ***\r\n");
 421:main.c        ****             /* Setup - Create a packet object and initialize */
 422:main.c        ****             packets_BUFFER_FULL_S packetBuffer1;
 423:main.c        ****             packets_initialize(&packetBuffer1);
 424:main.c        ****             packets_generateBuffers(&packetBuffer1, packets_LEN_BLOCK_PACKET);
 425:main.c        ****             /* Local references */
 426:main.c        ****             packets_BUFFER_PROCESS_S* txBuffer = &(packetBuffer1.send.processBuffer);
 427:main.c        ****             /* No Payload, success */
 428:main.c        ****             uint8 noPayloadPacket[15] = {0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xEF, 0xAA};
 429:main.c        ****             txBuffer->bufferIndex = 9;
 430:main.c        ****             memcpy(txBuffer->buffer, noPayloadPacket, txBuffer->bufferIndex);
 431:main.c        ****             uint8 payload[15];
 432:main.c        ****             packets_PACKET_S expectedPacket = {
 433:main.c        ****                 .moduleId = packets_ID_MODULE_CONTROL,
 434:main.c        ****                 .cmd = 0x10,
 435:main.c        ****                 .payload = payload,
 436:main.c        ****                 .payloadLen = 0,
 437:main.c        ****                 .payloadMax = packets_LEN_BLOCK_PACKET,
 438:main.c        ****                 .flags = ZERO,
 439:main.c        ****                 .error = ZERO
 440:main.c        ****             };
 441:main.c        ****             testRunner_run(test_packetParsing_packetVals(&packetBuffer1, "No payload ", &expectedPa
 442:main.c        ****             
 443:main.c        ****             /* No Payload, success */
 444:main.c        ****             uint8 basePacket[15] = {0x01, 0x10, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0xEF, 0xA
 445:main.c        ****             uint8 payload2[15] = {0xFF, 0xFF};
 446:main.c        **** //            usbUart_print("checksum: %x\r\n", packets_computeChecksum16(basePacket, 8));
 447:main.c        ****             txBuffer->bufferIndex = 11;
 448:main.c        ****             memcpy(txBuffer->buffer, basePacket, txBuffer->bufferIndex);
 449:main.c        ****             packets_PACKET_S expectedPacket2 = {
 450:main.c        ****                 .moduleId = packets_ID_MODULE_CONTROL,
 451:main.c        ****                 .cmd = 0x10,
 452:main.c        ****                 .payload = payload2,
 453:main.c        ****                 .payloadLen = 2,
 454:main.c        ****                 .payloadMax = packets_LEN_BLOCK_PACKET,
 455:main.c        ****                 .flags = ZERO,
 456:main.c        ****                 .error = ZERO
 457:main.c        ****             };
 458:main.c        ****             testRunner_run(test_packetParsing_packetVals(&packetBuffer1, "Payload exists ", &expect
 459:main.c        ****             /* Actuation */
 460:main.c        ****             uint8 actuationPacket[15] = {0x01, 0x22, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0xDD
 461:main.c        ****             uint8 payloadAct[15] = {0xFF, 0xFF};
 462:main.c        ****             txBuffer->bufferIndex = 11;
 463:main.c        ****             memcpy(txBuffer->buffer, actuationPacket, txBuffer->bufferIndex);
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 10


 464:main.c        ****             packets_PACKET_S expectedPacketAct = {
 465:main.c        ****                 .moduleId = packets_ID_MODULE_ACTUATION,
 466:main.c        ****                 .cmd = 0x22,
 467:main.c        ****                 .payload = payloadAct,
 468:main.c        ****                 .payloadLen = 2,
 469:main.c        ****                 .payloadMax = packets_LEN_BLOCK_PACKET,
 470:main.c        ****                 .flags = ZERO,
 471:main.c        ****                 .error = ZERO
 472:main.c        ****             };
 473:main.c        ****             testRunner_run(test_packetParsing_packetVals(&packetBuffer1, "Actuation Module", &expec
 474:main.c        ****             /* Sensing Test */
 475:main.c        ****             uint8 sensingPacket[15] = {0x01, 0x40, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0xBF, 
 476:main.c        ****             uint8 payload3[15] = {0xFF, 0xFF};
 477:main.c        **** //            usbUart_print("checksum: %x\r\n", packets_computeChecksum16(sensingPacket, 8));
 478:main.c        ****             txBuffer->bufferIndex = 11;
 479:main.c        ****             memcpy(txBuffer->buffer, sensingPacket, txBuffer->bufferIndex);
 480:main.c        ****             packets_PACKET_S expectedPacket3 = {
 481:main.c        ****                 .moduleId = packets_ID_MODULE_SENSING,
 482:main.c        ****                 .cmd = 0x40,
 483:main.c        ****                 .payload = payload3,
 484:main.c        ****                 .payloadLen = 2,
 485:main.c        ****                 .payloadMax = packets_LEN_BLOCK_PACKET,
 486:main.c        ****                 .flags = ZERO,
 487:main.c        ****                 .error = ZERO
 488:main.c        ****             };
 489:main.c        ****             testRunner_run(test_packetParsing_packetVals(&packetBuffer1, "Sensing Module", &expecte
 490:main.c        ****             /* Energy Module */
 491:main.c        ****             uint8 energyPacket[15] = {0x01, 0x70, 0x00, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xFD, 0x8F, 0
 492:main.c        ****             uint8 payloadEnergy[15] = {0xFF, 0xFF};
 493:main.c        ****             txBuffer->bufferIndex = 11;
 494:main.c        ****             memcpy(txBuffer->buffer, energyPacket, txBuffer->bufferIndex);
 495:main.c        ****             packets_PACKET_S expectedPacketEnergy = {
 496:main.c        ****                 .moduleId = packets_ID_MODULE_ENERGY,
 497:main.c        ****                 .cmd = 0x70,
 498:main.c        ****                 .payload = payloadEnergy,
 499:main.c        ****                 .payloadLen = 2,
 500:main.c        ****                 .payloadMax = packets_LEN_BLOCK_PACKET,
 501:main.c        ****                 .flags = ZERO,
 502:main.c        ****                 .error = ZERO
 503:main.c        ****             };
 504:main.c        ****             testRunner_run(test_packetParsing_packetVals(&packetBuffer1, "Energy Module", &expected
 505:main.c        **** //            usbUart_print("%x\r\n", packetBuffer1.receive.packet.moduleId);
 506:main.c        ****             /* Clean up */
 507:main.c        ****             packets_destoryBuffers(&packetBuffer1);
 508:main.c        ****         }
 509:main.c        ****         
 510:main.c        ****         /* ### Print testing packet ### */
 511:main.c        ****         {
 512:main.c        ****             usbUart_print("\r\n*** Validate Packets ***\r\n");
 513:main.c        ****             /* Setup - Create a packet object and initialize */
 514:main.c        ****             packets_BUFFER_FULL_S packetBuffer1;
 515:main.c        ****             packets_initialize(&packetBuffer1);
 516:main.c        ****             packets_generateBuffers(&packetBuffer1, packets_LEN_BLOCK_PACKET);
 517:main.c        **** 
 518:main.c        ****             uint8 payload[15] = {0xFF, 0x0F};
 519:main.c        ****             packets_PACKET_S testPacket = {
 520:main.c        ****                 .moduleId = packets_ID_MODULE_ENERGY,
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 11


 521:main.c        ****                 .cmd = 0x70,
 522:main.c        ****                 .payload = payload,
 523:main.c        ****                 .payloadLen = 2,
 524:main.c        ****                 .payloadMax = packets_LEN_BLOCK_PACKET,
 525:main.c        ****                 .flags = ZERO,
 526:main.c        ****                 .error = ZERO
 527:main.c        ****             };
 528:main.c        ****                         
 529:main.c        ****             packets_printPacket(&testPacket, usbUart_print);
 530:main.c        ****             
 531:main.c        ****             packets_destoryBuffers(&packetBuffer1);
 532:main.c        ****             
 533:main.c        ****         }
 534:main.c        ****         
 535:main.c        ****         /* Display test suite results */
 536:main.c        ****         testRunner_printCount();
 537:main.c        **** 
 538:main.c        ****         /* Enable the button */
 539:main.c        ****         usbUart_print("Press any key to re-run tests\r\n");
 540:main.c        ****         /* Infinite loop */
 541:main.c        ****         for(;;) {
 542:main.c        ****             /* Reset on buton press */
 543:main.c        ****             if(usbUart_getChar()){
 544:main.c        ****                 /*Reset the device*/
 545:main.c        ****                 CySoftwareReset();   
 546:main.c        ****             }
 547:main.c        ****         }
 548:main.c        ****         
 549:main.c        ****     /* End MICA_TEST_PACKETS_ERRORS */
 550:main.c        ****     #elif defined MICA_TEST_PACKETS
 551:main.c        ****         /* Receive a packet from the IMU and print the result via the USB uart */
 552:main.c        ****         /* Start the Components */
 553:main.c        ****         UART_USB_Start();
 554:main.c        ****         UART_IMU_Start();
 555:main.c        ****         LEDS_Write(LEDS_ON_GREEN);
 556:main.c        ****         /* Initialize variables */
 557:main.c        ****         packets_BUFFER_FULL_S packetBuffer;
 558:main.c        ****         packets_initialize(&packetBuffer);
 559:main.c        ****         uint32 error = packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 560:main.c        ****         /* Ensure packet buffers were created properly */
 561:main.c        ****         if(error){
 562:main.c        ****             LEDS_Write(LEDS_ON_RED);
 563:main.c        ****             for(;;){}
 564:main.c        ****         }
 565:main.c        ****         /* Infinite loop */
 566:main.c        ****         for(;;){
 567:main.c        ****             uint32 data = UART_IMU_UartGetByte();
 568:main.c        ****             /* See if data is available */
 569:main.c        ****             if( !(data & UART_IMU_UART_RX_UNDERFLOW) ){
 570:main.c        ****                 /* Process packet byte, check if packet complete */
 571:main.c        ****                 uint32 err = packets_processRxByte(&packetBuffer, (uint8) data); 
 572:main.c        ****                 /* Inidicate errors */
 573:main.c        ****                 if(err){
 574:main.c        ****                     LEDS_G_Toggle();   
 575:main.c        ****                     /* Reset the receive packet */
 576:main.c        ****                     packets_flushRxBuffers(&packetBuffer);
 577:main.c        ****                 }
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 12


 578:main.c        ****                 /* Check if complete */
 579:main.c        ****                 if(packetBuffer.receive.bufferState == packets_BUFFER_RECEIVE_COMPLETE) {
 580:main.c        ****                     LEDS_B_Toggle();
 581:main.c        ****                     /* Parse the packet */
 582:main.c        ****                     packets_parsePacket(&packetBuffer);
 583:main.c        ****                     packets_PACKET_S* rxPacket = &(packetBuffer.receive.packet);
 584:main.c        ****                     /* Clear the screen and print out the data */
 585:main.c        ****                     usbUart_print("\n\r\nModule: %x \r\nCommand: %x\r\nPayload Len: %x\r\n", rxPack
 586:main.c        ****                     usbUart_print("Payload:");
 587:main.c        ****                     uint8 i;
 588:main.c        ****                     for(i=ZERO; i< rxPacket->payloadLen; i++){
 589:main.c        ****                         usbUart_print(" %x", rxPacket->payload[i]);
 590:main.c        ****                     }
 591:main.c        ****                 }
 592:main.c        ****             }
 593:main.c        ****         }
 594:main.c        ****     /* End MICA_TEST_PACKETS */
 595:main.c        ****     #elif defined MICA_TEST_PACKETS_ISR
 596:main.c        ****         /* Receive a packet from the IMU Uart via an interrupt and print the result via the USB uar
 597:main.c        ****         /* Start the Components */
 598:main.c        ****         UART_USB_Start();
 599:main.c        ****         UART_IMU_Start();
 600:main.c        ****         LEDS_Write(LEDS_ON_GREEN);
 601:main.c        ****         /* Initialize variables */
 602:main.c        ****         packets_BUFFER_FULL_S packetBuffer;
 603:main.c        ****         packets_initialize(&packetBuffer);
 604:main.c        ****         uint32 error = packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 605:main.c        ****         /* Ensure packet buffers were created properly */
 606:main.c        ****         if(error){
 607:main.c        ****             LEDS_Write(LEDS_ON_RED);
 608:main.c        ****             for(;;){}
 609:main.c        ****         }
 610:main.c        ****         /* Enable the uart interrupts */
 611:main.c        ****         UART_IMU_EnableInt();
 612:main.c        ****         UART_IMU_SetCustomInterruptHandler(ISR_imuUart);
 613:main.c        **** 
 614:main.c        ****         /* Infinite loop */
 615:main.c        ****         for(;;){
 616:main.c        ****             /* See if there are any pending bytes */
 617:main.c        ****             if(flag_pendingRxByte){
 618:main.c        ****                 /* Reset the flag */
 619:main.c        ****                 flag_pendingRxByte = false;
 620:main.c        ****                 /* Read in the byte */
 621:main.c        ****                 uint8 newData = imuUart_getChar();
 622:main.c        ****                 uint32 err = packets_processRxByte(&packetBuffer, newData);
 623:main.c        ****                 /* Inidicate errors */
 624:main.c        ****                 if(err){ 
 625:main.c        ****                     /* Reset the receive packet */
 626:main.c        ****                     packets_flushRxBuffers(&packetBuffer);
 627:main.c        ****                 }
 628:main.c        ****                 /* Check if complete */
 629:main.c        ****                 if(packetBuffer.receive.bufferState == packets_BUFFER_RECEIVE_COMPLETE) {
 630:main.c        ****                     LEDS_B_Toggle();
 631:main.c        ****                     /* Parse the packet */
 632:main.c        ****                     packets_parsePacket(&packetBuffer);
 633:main.c        ****                     packets_PACKET_S* rxPacket = &(packetBuffer.receive.packet);
 634:main.c        ****                     /* Clear the screen and print out the data */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 13


 635:main.c        ****                     usbUart_print("\n\r\nModule: %x \r\nCommand: %x\r\nPayload Len: %x\r\n", rxPack
 636:main.c        ****                     usbUart_print("Payload:");
 637:main.c        ****                     uint8 i;
 638:main.c        ****                     for(i=ZERO; i< rxPacket->payloadLen; i++){
 639:main.c        ****                         usbUart_print(" %x", rxPacket->payload[i]);
 640:main.c        ****                     }
 641:main.c        ****                 }
 642:main.c        ****             }
 643:main.c        ****         }
 644:main.c        ****     /* End MICA_TEST_PACKETS_ISR */
 645:main.c        ****     #elif defined MICA_TEST_PERIPHERAL_ID
 646:main.c        ****         /* Request the ID from the peripheral and display the results over USB */
 647:main.c        ****           /* Start the Components */
 648:main.c        ****         UART_USB_Start();
 649:main.c        ****         UART_IMU_Start();
 650:main.c        ****         LEDS_Write(LEDS_ON_GREEN);
 651:main.c        ****         /* Initialize variables */
 652:main.c        ****         packets_BUFFER_FULL_S packetBuffer;
 653:main.c        ****         packets_initialize(&packetBuffer);
 654:main.c        ****         uint32 error = packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 655:main.c        ****         /* Ensure packet buffers were created properly */
 656:main.c        ****         if(error){
 657:main.c        ****             LEDS_Write(LEDS_ON_RED);
 658:main.c        ****             for(;;){}
 659:main.c        ****         }
 660:main.c        ****         /* Enable the uart interrupts */
 661:main.c        ****         UART_IMU_EnableInt();
 662:main.c        ****         UART_IMU_SetCustomInterruptHandler(ISR_imuUart);
 663:main.c        ****         UART_USB_EnableInt();
 664:main.c        ****         UART_USB_SetCustomInterruptHandler(ISR_usbUart);
 665:main.c        ****         
 666:main.c        ****         /* Print Program Header */
 667:main.c        ****         usbUart_clearScreen();
 668:main.c        ****         usbUart_printHeader(__TIME__, __DATE__, "      Peripheral Packet Test ");
 669:main.c        ****         usbUart_print("\r\nPress 'enter' to request the ID from the peripheral\r\n");
 670:main.c        ****         usbUart_print("Press 'c' to reset the LED to green\r\n");
 671:main.c        ****         usbUart_print("Press 'space' to reset the device\r\n\r\n");
 672:main.c        ****         
 673:main.c        ****         
 674:main.c        ****         /* Infinite loop */
 675:main.c        ****         for(;;){
 676:main.c        ****             /* See if there are any pending bytes */
 677:main.c        ****             if(flag_pendingRxByte){
 678:main.c        ****                 /* Reset the flag */
 679:main.c        ****                 flag_pendingRxByte = false;
 680:main.c        ****                 uint32_t bytesPending = UART_IMU_SpiUartGetRxBufferSize();
 681:main.c        ****                 usbUart_print("Bytes Received: %d\r\n" , bytesPending);
 682:main.c        ****                 /* Read in the data */
 683:main.c        ****                 uint32_t i;
 684:main.c        ****                 for(i = ZERO; i < bytesPending; i++){
 685:main.c        ****                     uint8 newData = imuUart_getChar();
 686:main.c        ****                     usbUart_print("rx:0x%x\r\n", newData);
 687:main.c        ****                     uint32 err = packets_processRxByte(&packetBuffer, newData);
 688:main.c        ****                     /* Inidicate errors */
 689:main.c        ****                     if(err){ 
 690:main.c        ****                         usbUart_print("err: 0x%x\r\n", err);
 691:main.c        ****                         /* Reset the receive packet */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 14


 692:main.c        ****                         packets_flushRxBuffers(&packetBuffer);
 693:main.c        ****                     }
 694:main.c        ****                     /* Check if packet is complete */
 695:main.c        ****                     if(packetBuffer.receive.bufferState == packets_BUFFER_RECEIVE_COMPLETE) {
 696:main.c        ****                         LEDS_Write(LEDS_ON_MAGENTA);
 697:main.c        ****                         /* Parse the packet */
 698:main.c        ****                         packets_parsePacket(&packetBuffer);
 699:main.c        ****                         /* Clear the screen and print out the data */
 700:main.c        ****                         packets_printPacket(&(packetBuffer.receive.packet), usbUart_print);
 701:main.c        ****                     }
 702:main.c        ****                 }
 703:main.c        ****             }
 704:main.c        ****             /* Wait for a usb key to be hit */
 705:main.c        ****             if(flag_pendingUsbByte){
 706:main.c        ****                 /* Reset flag */
 707:main.c        ****                 flag_pendingUsbByte = false;
 708:main.c        ****                 /* Read in the byte */
 709:main.c        ****                 uint8 usbData = usbUart_getChar();
 710:main.c        ****                 if(usbData == '\r'){
 711:main.c        ****                     usbUart_print("Requesting device ID..\r\n");   
 712:main.c        ****                     /* Initiate the request */
 713:main.c        ****                     packetBuffer.send.packet.cmd = packets_CMD_ID;
 714:main.c        ****                     uint32_t err = packets_sendPacket(&packetBuffer);
 715:main.c        ****                     if(!err){
 716:main.c        ****                         usbUart_print("Packet successfully sent, awaiting response\r\n");
 717:main.c        ****                     } else {
 718:main.c        ****                         usbUart_print("Packet failed to send with error 0x%x", err);   
 719:main.c        ****                     }
 720:main.c        ****                 } else if(usbData == 'c'){
 721:main.c        ****                     usbUart_print("Reset LEDs to green\r\n");
 722:main.c        ****                     LEDS_Write(LEDS_ON_GREEN);   
 723:main.c        ****                 } else if(usbData == ' '){
 724:main.c        ****                     /* Reset the device */
 725:main.c        ****                     CySoftwareReset();
 726:main.c        ****                 }
 727:main.c        ****             }
 728:main.c        ****         }
 729:main.c        ****     /* End MICA_TEST_PERIPHERAL_ID */
 730:main.c        ****     #elif defined MICA_TEST_SELF_PACKETS
 731:main.c        ****         /* REQ: Hard-wired RX & TX lines - Send packets to self for testing. Display the results ov
 732:main.c        ****         /* See hardware test MICA_DEBUG_SELF_UART */
 733:main.c        ****                   /* Start the Components */
 734:main.c        ****         UART_USB_Start();
  51              		.loc 1 734 0
  52 000c FFF7FEFF 		bl	UART_USB_Start
  53              	.LVL1:
 735:main.c        ****         UART_IMU_Start();
  54              		.loc 1 735 0
  55 0010 FFF7FEFF 		bl	UART_IMU_Start
  56              	.LVL2:
 736:main.c        ****         LEDS_Write(LEDS_ON_GREEN);
  57              		.loc 1 736 0
  58 0014 0220     		movs	r0, #2
  59 0016 FFF7FEFF 		bl	LEDS_Write
  60              	.LVL3:
 737:main.c        **** 
 738:main.c        ****         /* Print Program Header */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 15


 739:main.c        ****         usbUart_clearScreen();
  61              		.loc 1 739 0
  62 001a 4048     		ldr	r0, .L6+4
  63 001c FFF7FEFF 		bl	usbUart_print
  64              	.LVL4:
 740:main.c        ****         usbUart_printHeader(__TIME__, __DATE__, "      Self Packet Test ");
  65              		.loc 1 740 0
  66 0020 3F4A     		ldr	r2, .L6+8
  67 0022 4049     		ldr	r1, .L6+12
  68 0024 4048     		ldr	r0, .L6+16
  69 0026 FFF7FEFF 		bl	usbUart_printHeader
  70              	.LVL5:
 741:main.c        ****         usbUart_print("\r\nDevice imuUart RX & TX must be wired together\r\n");
  71              		.loc 1 741 0
  72 002a 4048     		ldr	r0, .L6+20
  73 002c FFF7FEFF 		bl	usbUart_print
  74              	.LVL6:
 742:main.c        ****         usbUart_print("Press 'space' to reset the device\r\n\r\n");
  75              		.loc 1 742 0
  76 0030 3F48     		ldr	r0, .L6+24
  77 0032 FFF7FEFF 		bl	usbUart_print
  78              	.LVL7:
  79              	.LBB2:
 743:main.c        ****         
 744:main.c        ****         
 745:main.c        ****         /* ### Self UART Test ### */
 746:main.c        ****         {
 747:main.c        ****             usbUart_print("\r\n*** Self UART Test ***\r\n");
  80              		.loc 1 747 0
  81 0036 3F48     		ldr	r0, .L6+28
  82 0038 FFF7FEFF 		bl	usbUart_print
  83              	.LVL8:
 748:main.c        ****             uint8_t data[255];
 749:main.c        ****             uint8_t i;
 750:main.c        ****             for(i = ZERO; i<255; i++){
  84              		.loc 1 750 0
  85 003c 0023     		movs	r3, #0
  86 003e 03E0     		b	.L2
  87              	.LVL9:
  88              	.L3:
 751:main.c        ****                 data[i] = i;   
  89              		.loc 1 751 0 discriminator 3
  90 0040 04AA     		add	r2, sp, #16
  91 0042 D354     		strb	r3, [r2, r3]
 750:main.c        ****                 data[i] = i;   
  92              		.loc 1 750 0 discriminator 3
  93 0044 0133     		adds	r3, r3, #1
  94              	.LVL10:
  95 0046 DBB2     		uxtb	r3, r3
  96              	.LVL11:
  97              	.L2:
 750:main.c        ****                 data[i] = i;   
  98              		.loc 1 750 0 is_stmt 0 discriminator 1
  99 0048 FF2B     		cmp	r3, #255
 100 004a F9D1     		bne	.L3
 752:main.c        ****             }
 753:main.c        ****             /* Run a single byte; */
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 16


 754:main.c        ****             testRunner_run(test_uartSelf("1 Byte", data, 1));
 101              		.loc 1 754 0 is_stmt 1
 102 004c 0122     		movs	r2, #1
 103 004e 04A9     		add	r1, sp, #16
 104 0050 3948     		ldr	r0, .L6+32
 105 0052 FFF7FEFF 		bl	test_uartSelf
 106              	.LVL12:
 107 0056 FFF7FEFF 		bl	testRunner_run
 108              	.LVL13:
 755:main.c        ****             testRunner_run(test_uartSelf("8 Bytes", data, 8));
 109              		.loc 1 755 0
 110 005a 0822     		movs	r2, #8
 111 005c 04A9     		add	r1, sp, #16
 112 005e 3748     		ldr	r0, .L6+36
 113 0060 FFF7FEFF 		bl	test_uartSelf
 114              	.LVL14:
 115 0064 FFF7FEFF 		bl	testRunner_run
 116              	.LVL15:
 756:main.c        ****             testRunner_run(test_uartSelf("64 Bytes", data, 64));
 117              		.loc 1 756 0
 118 0068 4022     		movs	r2, #64
 119 006a 04A9     		add	r1, sp, #16
 120 006c 3448     		ldr	r0, .L6+40
 121 006e FFF7FEFF 		bl	test_uartSelf
 122              	.LVL16:
 123 0072 FFF7FEFF 		bl	testRunner_run
 124              	.LVL17:
 757:main.c        ****             testRunner_run(test_uartSelf("packets_LEN_BLOCK_PACKET", data, packets_LEN_BLOCK_PACKET
 125              		.loc 1 757 0
 126 0076 8922     		movs	r2, #137
 127 0078 04A9     		add	r1, sp, #16
 128 007a 3248     		ldr	r0, .L6+44
 129 007c FFF7FEFF 		bl	test_uartSelf
 130              	.LVL18:
 131 0080 FFF7FEFF 		bl	testRunner_run
 132              	.LVL19:
 133              	.LBE2:
 134              	.LBB3:
 758:main.c        ****             
 759:main.c        ****         }
 760:main.c        ****         
 761:main.c        ****         /* ### Send Packet Test ### */
 762:main.c        ****         {
 763:main.c        ****             usbUart_print("\r\n*** Send Packet Test ***\r\n");
 135              		.loc 1 763 0
 136 0084 3048     		ldr	r0, .L6+48
 137 0086 FFF7FEFF 		bl	usbUart_print
 138              	.LVL20:
 764:main.c        ****             /* Setup - Create a packet object and initialize */
 765:main.c        ****             packets_BUFFER_FULL_S packetBuffer;
 766:main.c        ****             packets_initialize(&packetBuffer);
 139              		.loc 1 766 0
 140 008a 04A8     		add	r0, sp, #16
 141 008c FFF7FEFF 		bl	packets_initialize
 142              	.LVL21:
 767:main.c        ****             packets_generateBuffers(&packetBuffer, packets_LEN_BLOCK_PACKET);
 143              		.loc 1 767 0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 17


 144 0090 8921     		movs	r1, #137
 145 0092 04A8     		add	r0, sp, #16
 146 0094 FFF7FEFF 		bl	packets_generateBuffers
 147              	.LVL22:
 768:main.c        ****             /* Local Variables */
 769:main.c        ****             packets_PACKET_S* txPacket = &(packetBuffer.send.packet);
 770:main.c        ****             
 771:main.c        ****             /* Blank packet */
 772:main.c        ****             testRunner_run(test_selfPacketParsing(&packetBuffer, "UnInitialized Packet"));
 148              		.loc 1 772 0
 149 0098 2C49     		ldr	r1, .L6+52
 150 009a 04A8     		add	r0, sp, #16
 151              	.LVL23:
 152 009c FFF7FEFF 		bl	test_selfPacketParsing
 153              	.LVL24:
 154 00a0 FFF7FEFF 		bl	testRunner_run
 155              	.LVL25:
 773:main.c        ****             /* None zero packet */
 774:main.c        ****             txPacket->cmd = 0x01;
 156              		.loc 1 774 0
 157 00a4 04AD     		add	r5, sp, #16
 158              	.LVL26:
 159 00a6 0126     		movs	r6, #1
 160 00a8 6E70     		strb	r6, [r5, #1]
 775:main.c        ****             testRunner_run(test_selfPacketParsing(&packetBuffer, "New command"));
 161              		.loc 1 775 0
 162 00aa 2949     		ldr	r1, .L6+56
 163 00ac 2800     		movs	r0, r5
 164 00ae FFF7FEFF 		bl	test_selfPacketParsing
 165              	.LVL27:
 166 00b2 FFF7FEFF 		bl	testRunner_run
 167              	.LVL28:
 776:main.c        ****             /* With Payload */
 777:main.c        ****             txPacket->cmd = 0x01;
 168              		.loc 1 777 0
 169 00b6 6E70     		strb	r6, [r5, #1]
 778:main.c        ****             uint8_t data[10] = {0x01, 0xff, 0xCC, 0xDD, 0x3E};
 170              		.loc 1 778 0
 171 00b8 01AC     		add	r4, sp, #4
 172 00ba 0A22     		movs	r2, #10
 173 00bc 0021     		movs	r1, #0
 174 00be 2000     		movs	r0, r4
 175 00c0 FFF7FEFF 		bl	memset
 176              	.LVL29:
 177 00c4 2670     		strb	r6, [r4]
 178 00c6 FF23     		movs	r3, #255
 179 00c8 6370     		strb	r3, [r4, #1]
 180 00ca 333B     		subs	r3, r3, #51
 181 00cc A370     		strb	r3, [r4, #2]
 182 00ce 1133     		adds	r3, r3, #17
 183 00d0 E370     		strb	r3, [r4, #3]
 184 00d2 9F3B     		subs	r3, r3, #159
 185 00d4 2371     		strb	r3, [r4, #4]
 779:main.c        ****             txPacket->payloadLen = 5;
 186              		.loc 1 779 0
 187 00d6 393B     		subs	r3, r3, #57
 188 00d8 6B81     		strh	r3, [r5, #10]
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 18


 780:main.c        ****             memcpy(txPacket->payload, data, txPacket->payloadLen);
 189              		.loc 1 780 0
 190 00da 6868     		ldr	r0, [r5, #4]
 191 00dc 0522     		movs	r2, #5
 192 00de 01A9     		add	r1, sp, #4
 193 00e0 FFF7FEFF 		bl	memcpy
 194              	.LVL30:
 781:main.c        ****             testRunner_run(test_selfPacketParsing(&packetBuffer, "Payload"));
 195              		.loc 1 781 0
 196 00e4 1B49     		ldr	r1, .L6+60
 197 00e6 04A8     		add	r0, sp, #16
 198 00e8 FFF7FEFF 		bl	test_selfPacketParsing
 199              	.LVL31:
 200 00ec FFF7FEFF 		bl	testRunner_run
 201              	.LVL32:
 782:main.c        ****             
 783:main.c        ****             packets_destoryBuffers(&packetBuffer);
 202              		.loc 1 783 0
 203 00f0 04A8     		add	r0, sp, #16
 204 00f2 FFF7FEFF 		bl	packets_destoryBuffers
 205              	.LVL33:
 206              	.LBE3:
 784:main.c        ****             
 785:main.c        ****         }
 786:main.c        ****         
 787:main.c        ****         /* ### Respond Packet Test ### */
 788:main.c        ****         {
 789:main.c        ****             usbUart_print("\r\n***  Respond Packet Test ***\r\n");
 207              		.loc 1 789 0
 208 00f6 1848     		ldr	r0, .L6+64
 209 00f8 FFF7FEFF 		bl	usbUart_print
 210              	.LVL34:
 790:main.c        ****             testRunner_printResults("Self Respond", true, true, "@TODO Implement");
 211              		.loc 1 790 0
 212 00fc 174B     		ldr	r3, .L6+68
 213 00fe 0122     		movs	r2, #1
 214 0100 0121     		movs	r1, #1
 215 0102 1748     		ldr	r0, .L6+72
 216 0104 FFF7FEFF 		bl	testRunner_printResults
 217              	.LVL35:
 218              	.L4:
 219              	.LBB4:
 791:main.c        ****             
 792:main.c        ****         }
 793:main.c        ****         
 794:main.c        **** 
 795:main.c        ****         /* Infinite loop */
 796:main.c        ****         for(;;){
 797:main.c        **** 
 798:main.c        ****             /* Read in the byte */
 799:main.c        ****             uint8 usbData = usbUart_getChar();  
 220              		.loc 1 799 0
 221 0108 FFF7FEFF 		bl	UART_USB_UartGetChar
 222              	.LVL36:
 223 010c C0B2     		uxtb	r0, r0
 224              	.LVL37:
 800:main.c        ****             if(usbData == ' '){
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 19


 225              		.loc 1 800 0
 226 010e 2028     		cmp	r0, #32
 227 0110 FAD1     		bne	.L4
 801:main.c        ****                 /* Reset the device */
 802:main.c        ****                 CySoftwareReset();
 228              		.loc 1 802 0
 229 0112 FFF7FEFF 		bl	CySoftwareReset
 230              	.LVL38:
 231 0116 F7E7     		b	.L4
 232              	.L7:
 233              		.align	2
 234              	.L6:
 235 0118 00000000 		.word	usbUart_print
 236 011c 00000000 		.word	.LC1
 237 0120 0C000000 		.word	.LC3
 238 0124 24000000 		.word	.LC5
 239 0128 30000000 		.word	.LC7
 240 012c 3C000000 		.word	.LC9
 241 0130 70000000 		.word	.LC11
 242 0134 98000000 		.word	.LC13
 243 0138 B4000000 		.word	.LC15
 244 013c BC000000 		.word	.LC17
 245 0140 C4000000 		.word	.LC19
 246 0144 D0000000 		.word	.LC21
 247 0148 EC000000 		.word	.LC23
 248 014c 0C010000 		.word	.LC25
 249 0150 24010000 		.word	.LC27
 250 0154 30010000 		.word	.LC29
 251 0158 38010000 		.word	.LC31
 252 015c 5C010000 		.word	.LC33
 253 0160 6C010000 		.word	.LC35
 254              	.LBE4:
 255              		.cfi_endproc
 256              	.LFE36:
 257              		.size	main, .-main
 258              		.section	.text.ISR_imuUart,"ax",%progbits
 259              		.align	2
 260              		.global	ISR_imuUart
 261              		.code	16
 262              		.thumb_func
 263              		.type	ISR_imuUart, %function
 264              	ISR_imuUart:
 265              	.LFB37:
 803:main.c        ****             }
 804:main.c        ****         }
 805:main.c        ****     /* End MICA_TEST_SELF_PACKETS */
 806:main.c        ****     #else 
 807:main.c        ****         #error "At least ONE MICA_TEST_<case> must be defined if MICA_TEST is defined"
 808:main.c        ****     #endif
 809:main.c        ****     #if defined(MICA_DEBUG) && defined(MICA_TEST)
 810:main.c        ****         #error "MICA_DEBUG and MICA_TEST may not be defined at the same time"
 811:main.c        ****     #endif
 812:main.c        **** #endif /* MICA_TEST */
 813:main.c        **** /* %%%%%%%%%%%%%%%%%%  End Debugging & Testing  %%%%%%%%%%%%%%%%%% */
 814:main.c        ****     
 815:main.c        ****     /* Fall through Infinite Loop */
 816:main.c        ****     for(;;){ }
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 20


 817:main.c        **** } /* End main */
 818:main.c        **** 
 819:main.c        **** /*******************************************************************************
 820:main.c        **** * ISR Name: ISR_imuUart()
 821:main.c        **** ********************************************************************************
 822:main.c        **** * Summary:
 823:main.c        **** *   ISR when data is received over the imu UART. Clearing this interrupt is 
 824:main.c        **** *   not required, as it is a level sensitive interrupt.
 825:main.c        **** * Interrupt: 
 826:main.c        **** *       Internal to UART_IMU
 827:main.c        **** *
 828:main.c        **** *******************************************************************************/
 829:main.c        **** void ISR_imuUart(void){
 266              		.loc 1 829 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 830:main.c        ****     /* Check if new data is available */
 831:main.c        ****     if( UART_IMU_GetRxInterruptSourceMasked() & UART_IMU_INTR_RX_NOT_EMPTY){
 271              		.loc 1 831 0
 272 0000 034B     		ldr	r3, .L10
 273 0002 1B68     		ldr	r3, [r3]
 274 0004 5B07     		lsls	r3, r3, #29
 275 0006 02D5     		bpl	.L8
 832:main.c        ****         flag_pendingRxByte = true;
 276              		.loc 1 832 0
 277 0008 0122     		movs	r2, #1
 278 000a 024B     		ldr	r3, .L10+4
 279 000c 1A70     		strb	r2, [r3]
 280              	.L8:
 833:main.c        ****     }
 834:main.c        **** }
 281              		.loc 1 834 0
 282              		@ sp needed
 283 000e 7047     		bx	lr
 284              	.L11:
 285              		.align	2
 286              	.L10:
 287 0010 CC0F2440 		.word	1076105164
 288 0014 00000000 		.word	.LANCHOR0
 289              		.cfi_endproc
 290              	.LFE37:
 291              		.size	ISR_imuUart, .-ISR_imuUart
 292              		.section	.text.ISR_usbUart,"ax",%progbits
 293              		.align	2
 294              		.global	ISR_usbUart
 295              		.code	16
 296              		.thumb_func
 297              		.type	ISR_usbUart, %function
 298              	ISR_usbUart:
 299              	.LFB38:
 835:main.c        **** 
 836:main.c        **** /*******************************************************************************
 837:main.c        **** * ISR Name: ISR_usbUart()
 838:main.c        **** ********************************************************************************
 839:main.c        **** * Summary:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 21


 840:main.c        **** *   ISR when data is received over the usb UARTClearing this interrupt is 
 841:main.c        **** *   not required, as it is a level sensitive interrupt.
 842:main.c        **** * Interrupt: 
 843:main.c        **** *       Internal to UART_USB
 844:main.c        **** *
 845:main.c        **** *******************************************************************************/
 846:main.c        **** void ISR_usbUart(void){
 300              		.loc 1 846 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 847:main.c        ****     /* Check if new data is available */
 848:main.c        ****     if( UART_USB_GetRxInterruptSourceMasked() & UART_USB_INTR_RX_NOT_EMPTY){
 305              		.loc 1 848 0
 306 0000 034B     		ldr	r3, .L14
 307 0002 1B68     		ldr	r3, [r3]
 308 0004 5B07     		lsls	r3, r3, #29
 309 0006 02D5     		bpl	.L12
 849:main.c        ****         flag_pendingUsbByte = true;
 310              		.loc 1 849 0
 311 0008 0122     		movs	r2, #1
 312 000a 024B     		ldr	r3, .L14+4
 313 000c 5A70     		strb	r2, [r3, #1]
 314              	.L12:
 850:main.c        ****     }
 851:main.c        **** }
 315              		.loc 1 851 0
 316              		@ sp needed
 317 000e 7047     		bx	lr
 318              	.L15:
 319              		.align	2
 320              	.L14:
 321 0010 CC0F2540 		.word	1076170700
 322 0014 00000000 		.word	.LANCHOR0
 323              		.cfi_endproc
 324              	.LFE38:
 325              		.size	ISR_usbUart, .-ISR_usbUart
 326              		.global	isrErr
 327              		.global	timerExpired
 328              		.global	flag_pendingUsbByte
 329              		.global	flag_pendingRxByte
 330              		.section	.rodata.str1.4,"aMS",%progbits,1
 331              		.align	2
 332              	.LC1:
 333 0000 1B5B324A 		.ascii	"\033[2J\033[1;1H\000"
 333      1B5B313B 
 333      314800
 334 000b 00       		.space	1
 335              	.LC3:
 336 000c 20202020 		.ascii	"      Self Packet Test \000"
 336      20205365 
 336      6C662050 
 336      61636B65 
 336      74205465 
 337              	.LC5:
 338 0024 4F637420 		.ascii	"Oct  3 2018\000"
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 22


 338      20332032 
 338      30313800 
 339              	.LC7:
 340 0030 30313A32 		.ascii	"01:20:35\000"
 340      303A3335 
 340      00
 341 0039 000000   		.space	3
 342              	.LC9:
 343 003c 0D0A4465 		.ascii	"\015\012Device imuUart RX & TX must be wired togeth"
 343      76696365 
 343      20696D75 
 343      55617274 
 343      20525820 
 344 0069 65720D0A 		.ascii	"er\015\012\000"
 344      00
 345 006e 0000     		.space	2
 346              	.LC11:
 347 0070 50726573 		.ascii	"Press 'space' to reset the device\015\012\015\012\000"
 347      73202773 
 347      70616365 
 347      2720746F 
 347      20726573 
 348 0096 0000     		.space	2
 349              	.LC13:
 350 0098 0D0A2A2A 		.ascii	"\015\012*** Self UART Test ***\015\012\000"
 350      2A205365 
 350      6C662055 
 350      41525420 
 350      54657374 
 351 00b3 00       		.space	1
 352              	.LC15:
 353 00b4 31204279 		.ascii	"1 Byte\000"
 353      746500
 354 00bb 00       		.space	1
 355              	.LC17:
 356 00bc 38204279 		.ascii	"8 Bytes\000"
 356      74657300 
 357              	.LC19:
 358 00c4 36342042 		.ascii	"64 Bytes\000"
 358      79746573 
 358      00
 359 00cd 000000   		.space	3
 360              	.LC21:
 361 00d0 7061636B 		.ascii	"packets_LEN_BLOCK_PACKET\000"
 361      6574735F 
 361      4C454E5F 
 361      424C4F43 
 361      4B5F5041 
 362 00e9 000000   		.space	3
 363              	.LC23:
 364 00ec 0D0A2A2A 		.ascii	"\015\012*** Send Packet Test ***\015\012\000"
 364      2A205365 
 364      6E642050 
 364      61636B65 
 364      74205465 
 365 0109 000000   		.space	3
 366              	.LC25:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 23


 367 010c 556E496E 		.ascii	"UnInitialized Packet\000"
 367      69746961 
 367      6C697A65 
 367      64205061 
 367      636B6574 
 368 0121 000000   		.space	3
 369              	.LC27:
 370 0124 4E657720 		.ascii	"New command\000"
 370      636F6D6D 
 370      616E6400 
 371              	.LC29:
 372 0130 5061796C 		.ascii	"Payload\000"
 372      6F616400 
 373              	.LC31:
 374 0138 0D0A2A2A 		.ascii	"\015\012***  Respond Packet Test ***\015\012\000"
 374      2A202052 
 374      6573706F 
 374      6E642050 
 374      61636B65 
 375 0159 000000   		.space	3
 376              	.LC33:
 377 015c 40544F44 		.ascii	"@TODO Implement\000"
 377      4F20496D 
 377      706C656D 
 377      656E7400 
 378              	.LC35:
 379 016c 53656C66 		.ascii	"Self Respond\000"
 379      20526573 
 379      706F6E64 
 379      00
 380              		.bss
 381              		.align	2
 382              		.set	.LANCHOR0,. + 0
 383              		.type	flag_pendingRxByte, %object
 384              		.size	flag_pendingRxByte, 1
 385              	flag_pendingRxByte:
 386 0000 00       		.space	1
 387              		.type	flag_pendingUsbByte, %object
 388              		.size	flag_pendingUsbByte, 1
 389              	flag_pendingUsbByte:
 390 0001 00       		.space	1
 391 0002 0000     		.space	2
 392              		.type	isrErr, %object
 393              		.size	isrErr, 4
 394              	isrErr:
 395 0004 00000000 		.space	4
 396              		.type	timerExpired, %object
 397              		.size	timerExpired, 1
 398              	timerExpired:
 399 0008 00       		.space	1
 400              		.text
 401              	.Letext0:
 402              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 403              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 404              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 405              		.file 5 "Generated_Source\\PSoC4/packets.h"
 406              		.file 6 "Generated_Source\\PSoC4/usbUart.h"
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 24


 407              		.file 7 "packet_testing.h"
 408              		.file 8 "Generated_Source\\PSoC4/testRunner.h"
 409              		.file 9 "Generated_Source\\PSoC4/UART_USB_SPI_UART.h"
 410              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 411              		.file 11 "Generated_Source\\PSoC4/UART_USB.h"
 412              		.file 12 "Generated_Source\\PSoC4/UART_IMU.h"
 413              		.file 13 "Generated_Source\\PSoC4/LEDS.h"
 414              		.section	.debug_info,"",%progbits
 415              	.Ldebug_info0:
 416 0000 5A070000 		.4byte	0x75a
 417 0004 0400     		.2byte	0x4
 418 0006 00000000 		.4byte	.Ldebug_abbrev0
 419 000a 04       		.byte	0x4
 420 000b 01       		.uleb128 0x1
 421 000c 09010000 		.4byte	.LASF82
 422 0010 0C       		.byte	0xc
 423 0011 C8040000 		.4byte	.LASF83
 424 0015 68020000 		.4byte	.LASF84
 425 0019 00000000 		.4byte	.Ldebug_ranges0+0
 426 001d 00000000 		.4byte	0
 427 0021 00000000 		.4byte	.Ldebug_line0
 428 0025 02       		.uleb128 0x2
 429 0026 01       		.byte	0x1
 430 0027 06       		.byte	0x6
 431 0028 6A030000 		.4byte	.LASF0
 432 002c 03       		.uleb128 0x3
 433 002d DC020000 		.4byte	.LASF3
 434 0031 02       		.byte	0x2
 435 0032 1D       		.byte	0x1d
 436 0033 37000000 		.4byte	0x37
 437 0037 02       		.uleb128 0x2
 438 0038 01       		.byte	0x1
 439 0039 08       		.byte	0x8
 440 003a 24030000 		.4byte	.LASF1
 441 003e 02       		.uleb128 0x2
 442 003f 02       		.byte	0x2
 443 0040 05       		.byte	0x5
 444 0041 3B000000 		.4byte	.LASF2
 445 0045 03       		.uleb128 0x3
 446 0046 B5000000 		.4byte	.LASF4
 447 004a 02       		.byte	0x2
 448 004b 2B       		.byte	0x2b
 449 004c 50000000 		.4byte	0x50
 450 0050 02       		.uleb128 0x2
 451 0051 02       		.byte	0x2
 452 0052 07       		.byte	0x7
 453 0053 36040000 		.4byte	.LASF5
 454 0057 02       		.uleb128 0x2
 455 0058 04       		.byte	0x4
 456 0059 05       		.byte	0x5
 457 005a 50020000 		.4byte	.LASF6
 458 005e 03       		.uleb128 0x3
 459 005f F4040000 		.4byte	.LASF7
 460 0063 02       		.byte	0x2
 461 0064 41       		.byte	0x41
 462 0065 69000000 		.4byte	0x69
 463 0069 02       		.uleb128 0x2
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 25


 464 006a 04       		.byte	0x4
 465 006b 07       		.byte	0x7
 466 006c CF040000 		.4byte	.LASF8
 467 0070 02       		.uleb128 0x2
 468 0071 08       		.byte	0x8
 469 0072 05       		.byte	0x5
 470 0073 2A020000 		.4byte	.LASF9
 471 0077 02       		.uleb128 0x2
 472 0078 08       		.byte	0x8
 473 0079 07       		.byte	0x7
 474 007a 7C030000 		.4byte	.LASF10
 475 007e 04       		.uleb128 0x4
 476 007f 04       		.byte	0x4
 477 0080 05       		.byte	0x5
 478 0081 696E7400 		.ascii	"int\000"
 479 0085 02       		.uleb128 0x2
 480 0086 04       		.byte	0x4
 481 0087 07       		.byte	0x7
 482 0088 9C030000 		.4byte	.LASF11
 483 008c 03       		.uleb128 0x3
 484 008d 97010000 		.4byte	.LASF12
 485 0091 03       		.byte	0x3
 486 0092 18       		.byte	0x18
 487 0093 2C000000 		.4byte	0x2c
 488 0097 03       		.uleb128 0x3
 489 0098 B3030000 		.4byte	.LASF13
 490 009c 03       		.byte	0x3
 491 009d 24       		.byte	0x24
 492 009e 45000000 		.4byte	0x45
 493 00a2 03       		.uleb128 0x3
 494 00a3 93030000 		.4byte	.LASF14
 495 00a7 03       		.byte	0x3
 496 00a8 30       		.byte	0x30
 497 00a9 5E000000 		.4byte	0x5e
 498 00ad 05       		.uleb128 0x5
 499 00ae 9F010000 		.4byte	.LASF15
 500 00b2 04       		.byte	0x4
 501 00b3 E401     		.2byte	0x1e4
 502 00b5 37000000 		.4byte	0x37
 503 00b9 05       		.uleb128 0x5
 504 00ba C1040000 		.4byte	.LASF16
 505 00be 04       		.byte	0x4
 506 00bf E601     		.2byte	0x1e6
 507 00c1 69000000 		.4byte	0x69
 508 00c5 02       		.uleb128 0x2
 509 00c6 04       		.byte	0x4
 510 00c7 04       		.byte	0x4
 511 00c8 07020000 		.4byte	.LASF17
 512 00cc 02       		.uleb128 0x2
 513 00cd 08       		.byte	0x8
 514 00ce 04       		.byte	0x4
 515 00cf 9E050000 		.4byte	.LASF18
 516 00d3 02       		.uleb128 0x2
 517 00d4 01       		.byte	0x1
 518 00d5 08       		.byte	0x8
 519 00d6 F5030000 		.4byte	.LASF19
 520 00da 05       		.uleb128 0x5
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 26


 521 00db BC030000 		.4byte	.LASF20
 522 00df 04       		.byte	0x4
 523 00e0 9002     		.2byte	0x290
 524 00e2 E6000000 		.4byte	0xe6
 525 00e6 06       		.uleb128 0x6
 526 00e7 B9000000 		.4byte	0xb9
 527 00eb 02       		.uleb128 0x2
 528 00ec 08       		.byte	0x8
 529 00ed 04       		.byte	0x4
 530 00ee 0C030000 		.4byte	.LASF21
 531 00f2 02       		.uleb128 0x2
 532 00f3 04       		.byte	0x4
 533 00f4 07       		.byte	0x7
 534 00f5 6B000000 		.4byte	.LASF22
 535 00f9 02       		.uleb128 0x2
 536 00fa 01       		.byte	0x1
 537 00fb 02       		.byte	0x2
 538 00fc 49040000 		.4byte	.LASF23
 539 0100 07       		.uleb128 0x7
 540 0101 01       		.byte	0x1
 541 0102 37000000 		.4byte	0x37
 542 0106 05       		.byte	0x5
 543 0107 8A       		.byte	0x8a
 544 0108 2B010000 		.4byte	0x12b
 545 010c 08       		.uleb128 0x8
 546 010d 45000000 		.4byte	.LASF24
 547 0111 00       		.byte	0
 548 0112 08       		.uleb128 0x8
 549 0113 6B040000 		.4byte	.LASF25
 550 0117 01       		.byte	0x1
 551 0118 08       		.uleb128 0x8
 552 0119 DE000000 		.4byte	.LASF26
 553 011d 02       		.byte	0x2
 554 011e 08       		.uleb128 0x8
 555 011f 4C030000 		.4byte	.LASF27
 556 0123 03       		.byte	0x3
 557 0124 08       		.uleb128 0x8
 558 0125 E7010000 		.4byte	.LASF28
 559 0129 04       		.byte	0x4
 560 012a 00       		.byte	0
 561 012b 03       		.uleb128 0x3
 562 012c FA030000 		.4byte	.LASF29
 563 0130 05       		.byte	0x5
 564 0131 90       		.byte	0x90
 565 0132 00010000 		.4byte	0x100
 566 0136 07       		.uleb128 0x7
 567 0137 01       		.byte	0x1
 568 0138 37000000 		.4byte	0x37
 569 013c 05       		.byte	0x5
 570 013d 93       		.byte	0x93
 571 013e 5B010000 		.4byte	0x15b
 572 0142 08       		.uleb128 0x8
 573 0143 FF040000 		.4byte	.LASF30
 574 0147 00       		.byte	0
 575 0148 08       		.uleb128 0x8
 576 0149 32030000 		.4byte	.LASF31
 577 014d 01       		.byte	0x1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 27


 578 014e 08       		.uleb128 0x8
 579 014f 0D020000 		.4byte	.LASF32
 580 0153 02       		.byte	0x2
 581 0154 08       		.uleb128 0x8
 582 0155 27050000 		.4byte	.LASF33
 583 0159 03       		.byte	0x3
 584 015a 00       		.byte	0
 585 015b 03       		.uleb128 0x3
 586 015c 55050000 		.4byte	.LASF34
 587 0160 05       		.byte	0x5
 588 0161 98       		.byte	0x98
 589 0162 36010000 		.4byte	0x136
 590 0166 09       		.uleb128 0x9
 591 0167 0C       		.byte	0xc
 592 0168 05       		.byte	0x5
 593 0169 A3       		.byte	0xa3
 594 016a 9F010000 		.4byte	0x19f
 595 016e 0A       		.uleb128 0xa
 596 016f 9C040000 		.4byte	.LASF35
 597 0173 05       		.byte	0x5
 598 0174 A4       		.byte	0xa4
 599 0175 9F010000 		.4byte	0x19f
 600 0179 00       		.byte	0
 601 017a 0A       		.uleb128 0xa
 602 017b A9030000 		.4byte	.LASF36
 603 017f 05       		.byte	0x5
 604 0180 A5       		.byte	0xa5
 605 0181 97000000 		.4byte	0x97
 606 0185 04       		.byte	0x4
 607 0186 0A       		.uleb128 0xa
 608 0187 8C050000 		.4byte	.LASF37
 609 018b 05       		.byte	0x5
 610 018c A6       		.byte	0xa6
 611 018d 97000000 		.4byte	0x97
 612 0191 06       		.byte	0x6
 613 0192 0A       		.uleb128 0xa
 614 0193 02030000 		.4byte	.LASF38
 615 0197 05       		.byte	0x5
 616 0198 A7       		.byte	0xa7
 617 0199 A2000000 		.4byte	0xa2
 618 019d 08       		.byte	0x8
 619 019e 00       		.byte	0
 620 019f 0B       		.uleb128 0xb
 621 01a0 04       		.byte	0x4
 622 01a1 8C000000 		.4byte	0x8c
 623 01a5 03       		.uleb128 0x3
 624 01a6 C2010000 		.4byte	.LASF39
 625 01aa 05       		.byte	0x5
 626 01ab A8       		.byte	0xa8
 627 01ac 66010000 		.4byte	0x166
 628 01b0 09       		.uleb128 0x9
 629 01b1 14       		.byte	0x14
 630 01b2 05       		.byte	0x5
 631 01b3 AC       		.byte	0xac
 632 01b4 0D020000 		.4byte	0x20d
 633 01b8 0A       		.uleb128 0xa
 634 01b9 19040000 		.4byte	.LASF40
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 28


 635 01bd 05       		.byte	0x5
 636 01be AD       		.byte	0xad
 637 01bf 8C000000 		.4byte	0x8c
 638 01c3 00       		.byte	0
 639 01c4 0C       		.uleb128 0xc
 640 01c5 636D6400 		.ascii	"cmd\000"
 641 01c9 05       		.byte	0x5
 642 01ca AE       		.byte	0xae
 643 01cb 8C000000 		.4byte	0x8c
 644 01cf 01       		.byte	0x1
 645 01d0 0A       		.uleb128 0xa
 646 01d1 C5050000 		.4byte	.LASF41
 647 01d5 05       		.byte	0x5
 648 01d6 AF       		.byte	0xaf
 649 01d7 9F010000 		.4byte	0x19f
 650 01db 04       		.byte	0x4
 651 01dc 0A       		.uleb128 0xa
 652 01dd 00000000 		.4byte	.LASF42
 653 01e1 05       		.byte	0x5
 654 01e2 B0       		.byte	0xb0
 655 01e3 97000000 		.4byte	0x97
 656 01e7 08       		.byte	0x8
 657 01e8 0A       		.uleb128 0xa
 658 01e9 92000000 		.4byte	.LASF43
 659 01ed 05       		.byte	0x5
 660 01ee B1       		.byte	0xb1
 661 01ef 97000000 		.4byte	0x97
 662 01f3 0A       		.byte	0xa
 663 01f4 0A       		.uleb128 0xa
 664 01f5 76030000 		.4byte	.LASF44
 665 01f9 05       		.byte	0x5
 666 01fa B2       		.byte	0xb2
 667 01fb 97000000 		.4byte	0x97
 668 01ff 0C       		.byte	0xc
 669 0200 0A       		.uleb128 0xa
 670 0201 98050000 		.4byte	.LASF45
 671 0205 05       		.byte	0x5
 672 0206 B3       		.byte	0xb3
 673 0207 A2000000 		.4byte	0xa2
 674 020b 10       		.byte	0x10
 675 020c 00       		.byte	0
 676 020d 03       		.uleb128 0x3
 677 020e 3F020000 		.4byte	.LASF46
 678 0212 05       		.byte	0x5
 679 0213 B4       		.byte	0xb4
 680 0214 B0010000 		.4byte	0x1b0
 681 0218 09       		.uleb128 0x9
 682 0219 24       		.byte	0x24
 683 021a 05       		.byte	0x5
 684 021b B7       		.byte	0xb7
 685 021c 45020000 		.4byte	0x245
 686 0220 0A       		.uleb128 0xa
 687 0221 BB010000 		.4byte	.LASF47
 688 0225 05       		.byte	0x5
 689 0226 B8       		.byte	0xb8
 690 0227 0D020000 		.4byte	0x20d
 691 022b 00       		.byte	0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 29


 692 022c 0A       		.uleb128 0xa
 693 022d E7030000 		.4byte	.LASF48
 694 0231 05       		.byte	0x5
 695 0232 B9       		.byte	0xb9
 696 0233 A5010000 		.4byte	0x1a5
 697 0237 14       		.byte	0x14
 698 0238 0A       		.uleb128 0xa
 699 0239 FD000000 		.4byte	.LASF49
 700 023d 05       		.byte	0x5
 701 023e BA       		.byte	0xba
 702 023f 5B010000 		.4byte	0x15b
 703 0243 20       		.byte	0x20
 704 0244 00       		.byte	0
 705 0245 03       		.uleb128 0x3
 706 0246 A5010000 		.4byte	.LASF50
 707 024a 05       		.byte	0x5
 708 024b BB       		.byte	0xbb
 709 024c 18020000 		.4byte	0x218
 710 0250 09       		.uleb128 0x9
 711 0251 24       		.byte	0x24
 712 0252 05       		.byte	0x5
 713 0253 BE       		.byte	0xbe
 714 0254 7D020000 		.4byte	0x27d
 715 0258 0A       		.uleb128 0xa
 716 0259 BB010000 		.4byte	.LASF47
 717 025d 05       		.byte	0x5
 718 025e BF       		.byte	0xbf
 719 025f 0D020000 		.4byte	0x20d
 720 0263 00       		.byte	0
 721 0264 0A       		.uleb128 0xa
 722 0265 E7030000 		.4byte	.LASF48
 723 0269 05       		.byte	0x5
 724 026a C0       		.byte	0xc0
 725 026b A5010000 		.4byte	0x1a5
 726 026f 14       		.byte	0x14
 727 0270 0A       		.uleb128 0xa
 728 0271 FD000000 		.4byte	.LASF49
 729 0275 05       		.byte	0x5
 730 0276 C1       		.byte	0xc1
 731 0277 2B010000 		.4byte	0x12b
 732 027b 20       		.byte	0x20
 733 027c 00       		.byte	0
 734 027d 03       		.uleb128 0x3
 735 027e 74000000 		.4byte	.LASF51
 736 0282 05       		.byte	0x5
 737 0283 C2       		.byte	0xc2
 738 0284 50020000 		.4byte	0x250
 739 0288 09       		.uleb128 0x9
 740 0289 48       		.byte	0x48
 741 028a 05       		.byte	0x5
 742 028b C5       		.byte	0xc5
 743 028c A9020000 		.4byte	0x2a9
 744 0290 0A       		.uleb128 0xa
 745 0291 36000000 		.4byte	.LASF52
 746 0295 05       		.byte	0x5
 747 0296 C6       		.byte	0xc6
 748 0297 45020000 		.4byte	0x245
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 30


 749 029b 00       		.byte	0
 750 029c 0A       		.uleb128 0xa
 751 029d EC040000 		.4byte	.LASF53
 752 02a1 05       		.byte	0x5
 753 02a2 C7       		.byte	0xc7
 754 02a3 7D020000 		.4byte	0x27d
 755 02a7 24       		.byte	0x24
 756 02a8 00       		.byte	0
 757 02a9 03       		.uleb128 0x3
 758 02aa 0B000000 		.4byte	.LASF54
 759 02ae 05       		.byte	0x5
 760 02af C8       		.byte	0xc8
 761 02b0 88020000 		.4byte	0x288
 762 02b4 06       		.uleb128 0x6
 763 02b5 A2000000 		.4byte	0xa2
 764 02b9 0D       		.uleb128 0xd
 765 02ba 8D000000 		.4byte	.LASF85
 766 02be 01       		.byte	0x1
 767 02bf 5F       		.byte	0x5f
 768 02c0 7E000000 		.4byte	0x7e
 769 02c4 00000000 		.4byte	.LFB36
 770 02c8 64010000 		.4byte	.LFE36-.LFB36
 771 02cc 01       		.uleb128 0x1
 772 02cd 9C       		.byte	0x9c
 773 02ce 12060000 		.4byte	0x612
 774 02d2 0E       		.uleb128 0xe
 775 02d3 36000000 		.4byte	.LBB2
 776 02d7 4E000000 		.4byte	.LBE2-.LBB2
 777 02db C7030000 		.4byte	0x3c7
 778 02df 0F       		.uleb128 0xf
 779 02e0 66040000 		.4byte	.LASF55
 780 02e4 01       		.byte	0x1
 781 02e5 EC02     		.2byte	0x2ec
 782 02e7 12060000 		.4byte	0x612
 783 02eb 03       		.uleb128 0x3
 784 02ec 91       		.byte	0x91
 785 02ed F07D     		.sleb128 -272
 786 02ef 10       		.uleb128 0x10
 787 02f0 6900     		.ascii	"i\000"
 788 02f2 01       		.byte	0x1
 789 02f3 ED02     		.2byte	0x2ed
 790 02f5 8C000000 		.4byte	0x8c
 791 02f9 00000000 		.4byte	.LLST0
 792 02fd 11       		.uleb128 0x11
 793 02fe 3C000000 		.4byte	.LVL8
 794 0302 A5060000 		.4byte	0x6a5
 795 0306 14030000 		.4byte	0x314
 796 030a 12       		.uleb128 0x12
 797 030b 01       		.uleb128 0x1
 798 030c 50       		.byte	0x50
 799 030d 05       		.uleb128 0x5
 800 030e 03       		.byte	0x3
 801 030f 98000000 		.4byte	.LC13
 802 0313 00       		.byte	0
 803 0314 11       		.uleb128 0x11
 804 0315 56000000 		.4byte	.LVL12
 805 0319 B0060000 		.4byte	0x6b0
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 31


 806 031d 37030000 		.4byte	0x337
 807 0321 12       		.uleb128 0x12
 808 0322 01       		.uleb128 0x1
 809 0323 50       		.byte	0x50
 810 0324 05       		.uleb128 0x5
 811 0325 03       		.byte	0x3
 812 0326 B4000000 		.4byte	.LC15
 813 032a 12       		.uleb128 0x12
 814 032b 01       		.uleb128 0x1
 815 032c 51       		.byte	0x51
 816 032d 03       		.uleb128 0x3
 817 032e 91       		.byte	0x91
 818 032f F07D     		.sleb128 -272
 819 0331 12       		.uleb128 0x12
 820 0332 01       		.uleb128 0x1
 821 0333 52       		.byte	0x52
 822 0334 01       		.uleb128 0x1
 823 0335 31       		.byte	0x31
 824 0336 00       		.byte	0
 825 0337 13       		.uleb128 0x13
 826 0338 5A000000 		.4byte	.LVL13
 827 033c BB060000 		.4byte	0x6bb
 828 0340 11       		.uleb128 0x11
 829 0341 64000000 		.4byte	.LVL14
 830 0345 B0060000 		.4byte	0x6b0
 831 0349 63030000 		.4byte	0x363
 832 034d 12       		.uleb128 0x12
 833 034e 01       		.uleb128 0x1
 834 034f 50       		.byte	0x50
 835 0350 05       		.uleb128 0x5
 836 0351 03       		.byte	0x3
 837 0352 BC000000 		.4byte	.LC17
 838 0356 12       		.uleb128 0x12
 839 0357 01       		.uleb128 0x1
 840 0358 51       		.byte	0x51
 841 0359 03       		.uleb128 0x3
 842 035a 91       		.byte	0x91
 843 035b F07D     		.sleb128 -272
 844 035d 12       		.uleb128 0x12
 845 035e 01       		.uleb128 0x1
 846 035f 52       		.byte	0x52
 847 0360 01       		.uleb128 0x1
 848 0361 38       		.byte	0x38
 849 0362 00       		.byte	0
 850 0363 13       		.uleb128 0x13
 851 0364 68000000 		.4byte	.LVL15
 852 0368 BB060000 		.4byte	0x6bb
 853 036c 11       		.uleb128 0x11
 854 036d 72000000 		.4byte	.LVL16
 855 0371 B0060000 		.4byte	0x6b0
 856 0375 90030000 		.4byte	0x390
 857 0379 12       		.uleb128 0x12
 858 037a 01       		.uleb128 0x1
 859 037b 50       		.byte	0x50
 860 037c 05       		.uleb128 0x5
 861 037d 03       		.byte	0x3
 862 037e C4000000 		.4byte	.LC19
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 32


 863 0382 12       		.uleb128 0x12
 864 0383 01       		.uleb128 0x1
 865 0384 51       		.byte	0x51
 866 0385 03       		.uleb128 0x3
 867 0386 91       		.byte	0x91
 868 0387 F07D     		.sleb128 -272
 869 0389 12       		.uleb128 0x12
 870 038a 01       		.uleb128 0x1
 871 038b 52       		.byte	0x52
 872 038c 02       		.uleb128 0x2
 873 038d 08       		.byte	0x8
 874 038e 40       		.byte	0x40
 875 038f 00       		.byte	0
 876 0390 13       		.uleb128 0x13
 877 0391 76000000 		.4byte	.LVL17
 878 0395 BB060000 		.4byte	0x6bb
 879 0399 11       		.uleb128 0x11
 880 039a 80000000 		.4byte	.LVL18
 881 039e B0060000 		.4byte	0x6b0
 882 03a2 BD030000 		.4byte	0x3bd
 883 03a6 12       		.uleb128 0x12
 884 03a7 01       		.uleb128 0x1
 885 03a8 50       		.byte	0x50
 886 03a9 05       		.uleb128 0x5
 887 03aa 03       		.byte	0x3
 888 03ab D0000000 		.4byte	.LC21
 889 03af 12       		.uleb128 0x12
 890 03b0 01       		.uleb128 0x1
 891 03b1 51       		.byte	0x51
 892 03b2 03       		.uleb128 0x3
 893 03b3 91       		.byte	0x91
 894 03b4 F07D     		.sleb128 -272
 895 03b6 12       		.uleb128 0x12
 896 03b7 01       		.uleb128 0x1
 897 03b8 52       		.byte	0x52
 898 03b9 02       		.uleb128 0x2
 899 03ba 08       		.byte	0x8
 900 03bb 89       		.byte	0x89
 901 03bc 00       		.byte	0
 902 03bd 13       		.uleb128 0x13
 903 03be 84000000 		.4byte	.LVL19
 904 03c2 BB060000 		.4byte	0x6bb
 905 03c6 00       		.byte	0
 906 03c7 0E       		.uleb128 0xe
 907 03c8 84000000 		.4byte	.LBB3
 908 03cc 72000000 		.4byte	.LBE3-.LBB3
 909 03d0 06050000 		.4byte	0x506
 910 03d4 0F       		.uleb128 0xf
 911 03d5 DA030000 		.4byte	.LASF56
 912 03d9 01       		.byte	0x1
 913 03da FD02     		.2byte	0x2fd
 914 03dc A9020000 		.4byte	0x2a9
 915 03e0 03       		.uleb128 0x3
 916 03e1 91       		.byte	0x91
 917 03e2 F07D     		.sleb128 -272
 918 03e4 14       		.uleb128 0x14
 919 03e5 44050000 		.4byte	.LASF57
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 33


 920 03e9 01       		.byte	0x1
 921 03ea 0103     		.2byte	0x301
 922 03ec 22060000 		.4byte	0x622
 923 03f0 3B000000 		.4byte	.LLST1
 924 03f4 0F       		.uleb128 0xf
 925 03f5 66040000 		.4byte	.LASF55
 926 03f9 01       		.byte	0x1
 927 03fa 0A03     		.2byte	0x30a
 928 03fc 28060000 		.4byte	0x628
 929 0400 03       		.uleb128 0x3
 930 0401 91       		.byte	0x91
 931 0402 E47D     		.sleb128 -284
 932 0404 11       		.uleb128 0x11
 933 0405 8A000000 		.4byte	.LVL20
 934 0409 A5060000 		.4byte	0x6a5
 935 040d 1B040000 		.4byte	0x41b
 936 0411 12       		.uleb128 0x12
 937 0412 01       		.uleb128 0x1
 938 0413 50       		.byte	0x50
 939 0414 05       		.uleb128 0x5
 940 0415 03       		.byte	0x3
 941 0416 EC000000 		.4byte	.LC23
 942 041a 00       		.byte	0
 943 041b 11       		.uleb128 0x11
 944 041c 90000000 		.4byte	.LVL21
 945 0420 C6060000 		.4byte	0x6c6
 946 0424 30040000 		.4byte	0x430
 947 0428 12       		.uleb128 0x12
 948 0429 01       		.uleb128 0x1
 949 042a 50       		.byte	0x50
 950 042b 03       		.uleb128 0x3
 951 042c 91       		.byte	0x91
 952 042d F07D     		.sleb128 -272
 953 042f 00       		.byte	0
 954 0430 11       		.uleb128 0x11
 955 0431 98000000 		.4byte	.LVL22
 956 0435 D1060000 		.4byte	0x6d1
 957 0439 4B040000 		.4byte	0x44b
 958 043d 12       		.uleb128 0x12
 959 043e 01       		.uleb128 0x1
 960 043f 50       		.byte	0x50
 961 0440 03       		.uleb128 0x3
 962 0441 91       		.byte	0x91
 963 0442 F07D     		.sleb128 -272
 964 0444 12       		.uleb128 0x12
 965 0445 01       		.uleb128 0x1
 966 0446 51       		.byte	0x51
 967 0447 02       		.uleb128 0x2
 968 0448 08       		.byte	0x8
 969 0449 89       		.byte	0x89
 970 044a 00       		.byte	0
 971 044b 11       		.uleb128 0x11
 972 044c A0000000 		.4byte	.LVL24
 973 0450 DC060000 		.4byte	0x6dc
 974 0454 69040000 		.4byte	0x469
 975 0458 12       		.uleb128 0x12
 976 0459 01       		.uleb128 0x1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 34


 977 045a 50       		.byte	0x50
 978 045b 03       		.uleb128 0x3
 979 045c 91       		.byte	0x91
 980 045d F07D     		.sleb128 -272
 981 045f 12       		.uleb128 0x12
 982 0460 01       		.uleb128 0x1
 983 0461 51       		.byte	0x51
 984 0462 05       		.uleb128 0x5
 985 0463 03       		.byte	0x3
 986 0464 0C010000 		.4byte	.LC25
 987 0468 00       		.byte	0
 988 0469 13       		.uleb128 0x13
 989 046a A4000000 		.4byte	.LVL25
 990 046e BB060000 		.4byte	0x6bb
 991 0472 11       		.uleb128 0x11
 992 0473 B2000000 		.4byte	.LVL27
 993 0477 DC060000 		.4byte	0x6dc
 994 047b 8F040000 		.4byte	0x48f
 995 047f 12       		.uleb128 0x12
 996 0480 01       		.uleb128 0x1
 997 0481 50       		.byte	0x50
 998 0482 02       		.uleb128 0x2
 999 0483 75       		.byte	0x75
 1000 0484 00       		.sleb128 0
 1001 0485 12       		.uleb128 0x12
 1002 0486 01       		.uleb128 0x1
 1003 0487 51       		.byte	0x51
 1004 0488 05       		.uleb128 0x5
 1005 0489 03       		.byte	0x3
 1006 048a 24010000 		.4byte	.LC27
 1007 048e 00       		.byte	0
 1008 048f 13       		.uleb128 0x13
 1009 0490 B6000000 		.4byte	.LVL28
 1010 0494 BB060000 		.4byte	0x6bb
 1011 0498 11       		.uleb128 0x11
 1012 0499 C4000000 		.4byte	.LVL29
 1013 049d E7060000 		.4byte	0x6e7
 1014 04a1 B6040000 		.4byte	0x4b6
 1015 04a5 12       		.uleb128 0x12
 1016 04a6 01       		.uleb128 0x1
 1017 04a7 50       		.byte	0x50
 1018 04a8 02       		.uleb128 0x2
 1019 04a9 74       		.byte	0x74
 1020 04aa 00       		.sleb128 0
 1021 04ab 12       		.uleb128 0x12
 1022 04ac 01       		.uleb128 0x1
 1023 04ad 51       		.byte	0x51
 1024 04ae 01       		.uleb128 0x1
 1025 04af 30       		.byte	0x30
 1026 04b0 12       		.uleb128 0x12
 1027 04b1 01       		.uleb128 0x1
 1028 04b2 52       		.byte	0x52
 1029 04b3 01       		.uleb128 0x1
 1030 04b4 3A       		.byte	0x3a
 1031 04b5 00       		.byte	0
 1032 04b6 11       		.uleb128 0x11
 1033 04b7 E4000000 		.4byte	.LVL30
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 35


 1034 04bb F0060000 		.4byte	0x6f0
 1035 04bf CF040000 		.4byte	0x4cf
 1036 04c3 12       		.uleb128 0x12
 1037 04c4 01       		.uleb128 0x1
 1038 04c5 51       		.byte	0x51
 1039 04c6 02       		.uleb128 0x2
 1040 04c7 74       		.byte	0x74
 1041 04c8 00       		.sleb128 0
 1042 04c9 12       		.uleb128 0x12
 1043 04ca 01       		.uleb128 0x1
 1044 04cb 52       		.byte	0x52
 1045 04cc 01       		.uleb128 0x1
 1046 04cd 35       		.byte	0x35
 1047 04ce 00       		.byte	0
 1048 04cf 11       		.uleb128 0x11
 1049 04d0 EC000000 		.4byte	.LVL31
 1050 04d4 DC060000 		.4byte	0x6dc
 1051 04d8 EC040000 		.4byte	0x4ec
 1052 04dc 12       		.uleb128 0x12
 1053 04dd 01       		.uleb128 0x1
 1054 04de 50       		.byte	0x50
 1055 04df 02       		.uleb128 0x2
 1056 04e0 75       		.byte	0x75
 1057 04e1 00       		.sleb128 0
 1058 04e2 12       		.uleb128 0x12
 1059 04e3 01       		.uleb128 0x1
 1060 04e4 51       		.byte	0x51
 1061 04e5 05       		.uleb128 0x5
 1062 04e6 03       		.byte	0x3
 1063 04e7 30010000 		.4byte	.LC29
 1064 04eb 00       		.byte	0
 1065 04ec 13       		.uleb128 0x13
 1066 04ed F0000000 		.4byte	.LVL32
 1067 04f1 BB060000 		.4byte	0x6bb
 1068 04f5 15       		.uleb128 0x15
 1069 04f6 F6000000 		.4byte	.LVL33
 1070 04fa F9060000 		.4byte	0x6f9
 1071 04fe 12       		.uleb128 0x12
 1072 04ff 01       		.uleb128 0x1
 1073 0500 50       		.byte	0x50
 1074 0501 02       		.uleb128 0x2
 1075 0502 75       		.byte	0x75
 1076 0503 00       		.sleb128 0
 1077 0504 00       		.byte	0
 1078 0505 00       		.byte	0
 1079 0506 0E       		.uleb128 0xe
 1080 0507 08010000 		.4byte	.LBB4
 1081 050b 5C000000 		.4byte	.LBE4-.LBB4
 1082 050f 36050000 		.4byte	0x536
 1083 0513 14       		.uleb128 0x14
 1084 0514 4D050000 		.4byte	.LASF58
 1085 0518 01       		.byte	0x1
 1086 0519 1F03     		.2byte	0x31f
 1087 051b AD000000 		.4byte	0xad
 1088 051f 75000000 		.4byte	.LLST2
 1089 0523 13       		.uleb128 0x13
 1090 0524 0C010000 		.4byte	.LVL36
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 36


 1091 0528 04070000 		.4byte	0x704
 1092 052c 13       		.uleb128 0x13
 1093 052d 16010000 		.4byte	.LVL38
 1094 0531 10070000 		.4byte	0x710
 1095 0535 00       		.byte	0
 1096 0536 13       		.uleb128 0x13
 1097 0537 0C000000 		.4byte	.LVL0
 1098 053b 1B070000 		.4byte	0x71b
 1099 053f 13       		.uleb128 0x13
 1100 0540 10000000 		.4byte	.LVL1
 1101 0544 26070000 		.4byte	0x726
 1102 0548 13       		.uleb128 0x13
 1103 0549 14000000 		.4byte	.LVL2
 1104 054d 31070000 		.4byte	0x731
 1105 0551 11       		.uleb128 0x11
 1106 0552 1A000000 		.4byte	.LVL3
 1107 0556 3C070000 		.4byte	0x73c
 1108 055a 64050000 		.4byte	0x564
 1109 055e 12       		.uleb128 0x12
 1110 055f 01       		.uleb128 0x1
 1111 0560 50       		.byte	0x50
 1112 0561 01       		.uleb128 0x1
 1113 0562 32       		.byte	0x32
 1114 0563 00       		.byte	0
 1115 0564 11       		.uleb128 0x11
 1116 0565 20000000 		.4byte	.LVL4
 1117 0569 A5060000 		.4byte	0x6a5
 1118 056d 7B050000 		.4byte	0x57b
 1119 0571 12       		.uleb128 0x12
 1120 0572 01       		.uleb128 0x1
 1121 0573 50       		.byte	0x50
 1122 0574 05       		.uleb128 0x5
 1123 0575 03       		.byte	0x3
 1124 0576 00000000 		.4byte	.LC1
 1125 057a 00       		.byte	0
 1126 057b 11       		.uleb128 0x11
 1127 057c 2A000000 		.4byte	.LVL5
 1128 0580 47070000 		.4byte	0x747
 1129 0584 A4050000 		.4byte	0x5a4
 1130 0588 12       		.uleb128 0x12
 1131 0589 01       		.uleb128 0x1
 1132 058a 50       		.byte	0x50
 1133 058b 05       		.uleb128 0x5
 1134 058c 03       		.byte	0x3
 1135 058d 30000000 		.4byte	.LC7
 1136 0591 12       		.uleb128 0x12
 1137 0592 01       		.uleb128 0x1
 1138 0593 51       		.byte	0x51
 1139 0594 05       		.uleb128 0x5
 1140 0595 03       		.byte	0x3
 1141 0596 24000000 		.4byte	.LC5
 1142 059a 12       		.uleb128 0x12
 1143 059b 01       		.uleb128 0x1
 1144 059c 52       		.byte	0x52
 1145 059d 05       		.uleb128 0x5
 1146 059e 03       		.byte	0x3
 1147 059f 0C000000 		.4byte	.LC3
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 37


 1148 05a3 00       		.byte	0
 1149 05a4 11       		.uleb128 0x11
 1150 05a5 30000000 		.4byte	.LVL6
 1151 05a9 A5060000 		.4byte	0x6a5
 1152 05ad BB050000 		.4byte	0x5bb
 1153 05b1 12       		.uleb128 0x12
 1154 05b2 01       		.uleb128 0x1
 1155 05b3 50       		.byte	0x50
 1156 05b4 05       		.uleb128 0x5
 1157 05b5 03       		.byte	0x3
 1158 05b6 3C000000 		.4byte	.LC9
 1159 05ba 00       		.byte	0
 1160 05bb 11       		.uleb128 0x11
 1161 05bc 36000000 		.4byte	.LVL7
 1162 05c0 A5060000 		.4byte	0x6a5
 1163 05c4 D2050000 		.4byte	0x5d2
 1164 05c8 12       		.uleb128 0x12
 1165 05c9 01       		.uleb128 0x1
 1166 05ca 50       		.byte	0x50
 1167 05cb 05       		.uleb128 0x5
 1168 05cc 03       		.byte	0x3
 1169 05cd 70000000 		.4byte	.LC11
 1170 05d1 00       		.byte	0
 1171 05d2 11       		.uleb128 0x11
 1172 05d3 FC000000 		.4byte	.LVL34
 1173 05d7 A5060000 		.4byte	0x6a5
 1174 05db E9050000 		.4byte	0x5e9
 1175 05df 12       		.uleb128 0x12
 1176 05e0 01       		.uleb128 0x1
 1177 05e1 50       		.byte	0x50
 1178 05e2 05       		.uleb128 0x5
 1179 05e3 03       		.byte	0x3
 1180 05e4 38010000 		.4byte	.LC31
 1181 05e8 00       		.byte	0
 1182 05e9 15       		.uleb128 0x15
 1183 05ea 08010000 		.4byte	.LVL35
 1184 05ee 52070000 		.4byte	0x752
 1185 05f2 12       		.uleb128 0x12
 1186 05f3 01       		.uleb128 0x1
 1187 05f4 50       		.byte	0x50
 1188 05f5 05       		.uleb128 0x5
 1189 05f6 03       		.byte	0x3
 1190 05f7 6C010000 		.4byte	.LC35
 1191 05fb 12       		.uleb128 0x12
 1192 05fc 01       		.uleb128 0x1
 1193 05fd 51       		.byte	0x51
 1194 05fe 02       		.uleb128 0x2
 1195 05ff 76       		.byte	0x76
 1196 0600 00       		.sleb128 0
 1197 0601 12       		.uleb128 0x12
 1198 0602 01       		.uleb128 0x1
 1199 0603 52       		.byte	0x52
 1200 0604 02       		.uleb128 0x2
 1201 0605 76       		.byte	0x76
 1202 0606 00       		.sleb128 0
 1203 0607 12       		.uleb128 0x12
 1204 0608 01       		.uleb128 0x1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 38


 1205 0609 53       		.byte	0x53
 1206 060a 05       		.uleb128 0x5
 1207 060b 03       		.byte	0x3
 1208 060c 5C010000 		.4byte	.LC33
 1209 0610 00       		.byte	0
 1210 0611 00       		.byte	0
 1211 0612 16       		.uleb128 0x16
 1212 0613 8C000000 		.4byte	0x8c
 1213 0617 22060000 		.4byte	0x622
 1214 061b 17       		.uleb128 0x17
 1215 061c F2000000 		.4byte	0xf2
 1216 0620 FE       		.byte	0xfe
 1217 0621 00       		.byte	0
 1218 0622 0B       		.uleb128 0xb
 1219 0623 04       		.byte	0x4
 1220 0624 0D020000 		.4byte	0x20d
 1221 0628 16       		.uleb128 0x16
 1222 0629 8C000000 		.4byte	0x8c
 1223 062d 38060000 		.4byte	0x638
 1224 0631 17       		.uleb128 0x17
 1225 0632 F2000000 		.4byte	0xf2
 1226 0636 09       		.byte	0x9
 1227 0637 00       		.byte	0
 1228 0638 18       		.uleb128 0x18
 1229 0639 18030000 		.4byte	.LASF59
 1230 063d 01       		.byte	0x1
 1231 063e 3D03     		.2byte	0x33d
 1232 0640 00000000 		.4byte	.LFB37
 1233 0644 18000000 		.4byte	.LFE37-.LFB37
 1234 0648 01       		.uleb128 0x1
 1235 0649 9C       		.byte	0x9c
 1236 064a 18       		.uleb128 0x18
 1237 064b DB010000 		.4byte	.LASF60
 1238 064f 01       		.byte	0x1
 1239 0650 4E03     		.2byte	0x34e
 1240 0652 00000000 		.4byte	.LFB38
 1241 0656 18000000 		.4byte	.LFE38-.LFB38
 1242 065a 01       		.uleb128 0x1
 1243 065b 9C       		.byte	0x9c
 1244 065c 19       		.uleb128 0x19
 1245 065d A5050000 		.4byte	.LASF61
 1246 0661 01       		.byte	0x1
 1247 0662 4E       		.byte	0x4e
 1248 0663 6D060000 		.4byte	0x66d
 1249 0667 05       		.uleb128 0x5
 1250 0668 03       		.byte	0x3
 1251 0669 00000000 		.4byte	flag_pendingRxByte
 1252 066d 06       		.uleb128 0x6
 1253 066e F9000000 		.4byte	0xf9
 1254 0672 19       		.uleb128 0x19
 1255 0673 78050000 		.4byte	.LASF62
 1256 0677 01       		.byte	0x1
 1257 0678 4F       		.byte	0x4f
 1258 0679 6D060000 		.4byte	0x66d
 1259 067d 05       		.uleb128 0x5
 1260 067e 03       		.byte	0x3
 1261 067f 00000000 		.4byte	flag_pendingUsbByte
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 39


 1262 0683 19       		.uleb128 0x19
 1263 0684 B8050000 		.4byte	.LASF63
 1264 0688 01       		.byte	0x1
 1265 0689 50       		.byte	0x50
 1266 068a 6D060000 		.4byte	0x66d
 1267 068e 05       		.uleb128 0x5
 1268 068f 03       		.byte	0x3
 1269 0690 00000000 		.4byte	timerExpired
 1270 0694 19       		.uleb128 0x19
 1271 0695 71050000 		.4byte	.LASF64
 1272 0699 01       		.byte	0x1
 1273 069a 51       		.byte	0x51
 1274 069b B4020000 		.4byte	0x2b4
 1275 069f 05       		.uleb128 0x5
 1276 06a0 03       		.byte	0x3
 1277 06a1 00000000 		.4byte	isrErr
 1278 06a5 1A       		.uleb128 0x1a
 1279 06a6 CE020000 		.4byte	.LASF65
 1280 06aa CE020000 		.4byte	.LASF65
 1281 06ae 06       		.byte	0x6
 1282 06af 19       		.byte	0x19
 1283 06b0 1A       		.uleb128 0x1a
 1284 06b1 A3040000 		.4byte	.LASF66
 1285 06b5 A3040000 		.4byte	.LASF66
 1286 06b9 07       		.byte	0x7
 1287 06ba 26       		.byte	0x26
 1288 06bb 1A       		.uleb128 0x1a
 1289 06bc 59020000 		.4byte	.LASF67
 1290 06c0 59020000 		.4byte	.LASF67
 1291 06c4 08       		.byte	0x8
 1292 06c5 21       		.byte	0x21
 1293 06c6 1A       		.uleb128 0x1a
 1294 06c7 89040000 		.4byte	.LASF68
 1295 06cb 89040000 		.4byte	.LASF68
 1296 06cf 05       		.byte	0x5
 1297 06d0 CF       		.byte	0xcf
 1298 06d1 1A       		.uleb128 0x1a
 1299 06d2 C2030000 		.4byte	.LASF69
 1300 06d6 C2030000 		.4byte	.LASF69
 1301 06da 05       		.byte	0x5
 1302 06db D0       		.byte	0xd0
 1303 06dc 1A       		.uleb128 0x1a
 1304 06dd 4F040000 		.4byte	.LASF70
 1305 06e1 4F040000 		.4byte	.LASF70
 1306 06e5 07       		.byte	0x7
 1307 06e6 27       		.byte	0x27
 1308 06e7 1B       		.uleb128 0x1b
 1309 06e8 38020000 		.4byte	.LASF71
 1310 06ec 38020000 		.4byte	.LASF71
 1311 06f0 1B       		.uleb128 0x1b
 1312 06f1 D7000000 		.4byte	.LASF72
 1313 06f5 D7000000 		.4byte	.LASF72
 1314 06f9 1A       		.uleb128 0x1a
 1315 06fa C0000000 		.4byte	.LASF73
 1316 06fe C0000000 		.4byte	.LASF73
 1317 0702 05       		.byte	0x5
 1318 0703 D1       		.byte	0xd1
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 40


 1319 0704 1C       		.uleb128 0x1c
 1320 0705 21000000 		.4byte	.LASF74
 1321 0709 21000000 		.4byte	.LASF74
 1322 070d 09       		.byte	0x9
 1323 070e 0F03     		.2byte	0x30f
 1324 0710 1A       		.uleb128 0x1a
 1325 0711 B1040000 		.4byte	.LASF75
 1326 0715 B1040000 		.4byte	.LASF75
 1327 0719 0A       		.byte	0xa
 1328 071a E4       		.byte	0xe4
 1329 071b 1A       		.uleb128 0x1a
 1330 071c E6020000 		.4byte	.LASF76
 1331 0720 E6020000 		.4byte	.LASF76
 1332 0724 08       		.byte	0x8
 1333 0725 25       		.byte	0x25
 1334 0726 1A       		.uleb128 0x1a
 1335 0727 CD050000 		.4byte	.LASF77
 1336 072b CD050000 		.4byte	.LASF77
 1337 072f 0B       		.byte	0xb
 1338 0730 72       		.byte	0x72
 1339 0731 1A       		.uleb128 0x1a
 1340 0732 18050000 		.4byte	.LASF78
 1341 0736 18050000 		.4byte	.LASF78
 1342 073a 0C       		.byte	0xc
 1343 073b 72       		.byte	0x72
 1344 073c 1A       		.uleb128 0x1a
 1345 073d E1040000 		.4byte	.LASF79
 1346 0741 E1040000 		.4byte	.LASF79
 1347 0745 0D       		.byte	0xd
 1348 0746 1D       		.byte	0x1d
 1349 0747 1A       		.uleb128 0x1a
 1350 0748 22040000 		.4byte	.LASF80
 1351 074c 22040000 		.4byte	.LASF80
 1352 0750 06       		.byte	0x6
 1353 0751 1D       		.byte	0x1d
 1354 0752 1A       		.uleb128 0x1a
 1355 0753 9D000000 		.4byte	.LASF81
 1356 0757 9D000000 		.4byte	.LASF81
 1357 075b 08       		.byte	0x8
 1358 075c 24       		.byte	0x24
 1359 075d 00       		.byte	0
 1360              		.section	.debug_abbrev,"",%progbits
 1361              	.Ldebug_abbrev0:
 1362 0000 01       		.uleb128 0x1
 1363 0001 11       		.uleb128 0x11
 1364 0002 01       		.byte	0x1
 1365 0003 25       		.uleb128 0x25
 1366 0004 0E       		.uleb128 0xe
 1367 0005 13       		.uleb128 0x13
 1368 0006 0B       		.uleb128 0xb
 1369 0007 03       		.uleb128 0x3
 1370 0008 0E       		.uleb128 0xe
 1371 0009 1B       		.uleb128 0x1b
 1372 000a 0E       		.uleb128 0xe
 1373 000b 55       		.uleb128 0x55
 1374 000c 17       		.uleb128 0x17
 1375 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 41


 1376 000e 01       		.uleb128 0x1
 1377 000f 10       		.uleb128 0x10
 1378 0010 17       		.uleb128 0x17
 1379 0011 00       		.byte	0
 1380 0012 00       		.byte	0
 1381 0013 02       		.uleb128 0x2
 1382 0014 24       		.uleb128 0x24
 1383 0015 00       		.byte	0
 1384 0016 0B       		.uleb128 0xb
 1385 0017 0B       		.uleb128 0xb
 1386 0018 3E       		.uleb128 0x3e
 1387 0019 0B       		.uleb128 0xb
 1388 001a 03       		.uleb128 0x3
 1389 001b 0E       		.uleb128 0xe
 1390 001c 00       		.byte	0
 1391 001d 00       		.byte	0
 1392 001e 03       		.uleb128 0x3
 1393 001f 16       		.uleb128 0x16
 1394 0020 00       		.byte	0
 1395 0021 03       		.uleb128 0x3
 1396 0022 0E       		.uleb128 0xe
 1397 0023 3A       		.uleb128 0x3a
 1398 0024 0B       		.uleb128 0xb
 1399 0025 3B       		.uleb128 0x3b
 1400 0026 0B       		.uleb128 0xb
 1401 0027 49       		.uleb128 0x49
 1402 0028 13       		.uleb128 0x13
 1403 0029 00       		.byte	0
 1404 002a 00       		.byte	0
 1405 002b 04       		.uleb128 0x4
 1406 002c 24       		.uleb128 0x24
 1407 002d 00       		.byte	0
 1408 002e 0B       		.uleb128 0xb
 1409 002f 0B       		.uleb128 0xb
 1410 0030 3E       		.uleb128 0x3e
 1411 0031 0B       		.uleb128 0xb
 1412 0032 03       		.uleb128 0x3
 1413 0033 08       		.uleb128 0x8
 1414 0034 00       		.byte	0
 1415 0035 00       		.byte	0
 1416 0036 05       		.uleb128 0x5
 1417 0037 16       		.uleb128 0x16
 1418 0038 00       		.byte	0
 1419 0039 03       		.uleb128 0x3
 1420 003a 0E       		.uleb128 0xe
 1421 003b 3A       		.uleb128 0x3a
 1422 003c 0B       		.uleb128 0xb
 1423 003d 3B       		.uleb128 0x3b
 1424 003e 05       		.uleb128 0x5
 1425 003f 49       		.uleb128 0x49
 1426 0040 13       		.uleb128 0x13
 1427 0041 00       		.byte	0
 1428 0042 00       		.byte	0
 1429 0043 06       		.uleb128 0x6
 1430 0044 35       		.uleb128 0x35
 1431 0045 00       		.byte	0
 1432 0046 49       		.uleb128 0x49
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 42


 1433 0047 13       		.uleb128 0x13
 1434 0048 00       		.byte	0
 1435 0049 00       		.byte	0
 1436 004a 07       		.uleb128 0x7
 1437 004b 04       		.uleb128 0x4
 1438 004c 01       		.byte	0x1
 1439 004d 0B       		.uleb128 0xb
 1440 004e 0B       		.uleb128 0xb
 1441 004f 49       		.uleb128 0x49
 1442 0050 13       		.uleb128 0x13
 1443 0051 3A       		.uleb128 0x3a
 1444 0052 0B       		.uleb128 0xb
 1445 0053 3B       		.uleb128 0x3b
 1446 0054 0B       		.uleb128 0xb
 1447 0055 01       		.uleb128 0x1
 1448 0056 13       		.uleb128 0x13
 1449 0057 00       		.byte	0
 1450 0058 00       		.byte	0
 1451 0059 08       		.uleb128 0x8
 1452 005a 28       		.uleb128 0x28
 1453 005b 00       		.byte	0
 1454 005c 03       		.uleb128 0x3
 1455 005d 0E       		.uleb128 0xe
 1456 005e 1C       		.uleb128 0x1c
 1457 005f 0B       		.uleb128 0xb
 1458 0060 00       		.byte	0
 1459 0061 00       		.byte	0
 1460 0062 09       		.uleb128 0x9
 1461 0063 13       		.uleb128 0x13
 1462 0064 01       		.byte	0x1
 1463 0065 0B       		.uleb128 0xb
 1464 0066 0B       		.uleb128 0xb
 1465 0067 3A       		.uleb128 0x3a
 1466 0068 0B       		.uleb128 0xb
 1467 0069 3B       		.uleb128 0x3b
 1468 006a 0B       		.uleb128 0xb
 1469 006b 01       		.uleb128 0x1
 1470 006c 13       		.uleb128 0x13
 1471 006d 00       		.byte	0
 1472 006e 00       		.byte	0
 1473 006f 0A       		.uleb128 0xa
 1474 0070 0D       		.uleb128 0xd
 1475 0071 00       		.byte	0
 1476 0072 03       		.uleb128 0x3
 1477 0073 0E       		.uleb128 0xe
 1478 0074 3A       		.uleb128 0x3a
 1479 0075 0B       		.uleb128 0xb
 1480 0076 3B       		.uleb128 0x3b
 1481 0077 0B       		.uleb128 0xb
 1482 0078 49       		.uleb128 0x49
 1483 0079 13       		.uleb128 0x13
 1484 007a 38       		.uleb128 0x38
 1485 007b 0B       		.uleb128 0xb
 1486 007c 00       		.byte	0
 1487 007d 00       		.byte	0
 1488 007e 0B       		.uleb128 0xb
 1489 007f 0F       		.uleb128 0xf
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 43


 1490 0080 00       		.byte	0
 1491 0081 0B       		.uleb128 0xb
 1492 0082 0B       		.uleb128 0xb
 1493 0083 49       		.uleb128 0x49
 1494 0084 13       		.uleb128 0x13
 1495 0085 00       		.byte	0
 1496 0086 00       		.byte	0
 1497 0087 0C       		.uleb128 0xc
 1498 0088 0D       		.uleb128 0xd
 1499 0089 00       		.byte	0
 1500 008a 03       		.uleb128 0x3
 1501 008b 08       		.uleb128 0x8
 1502 008c 3A       		.uleb128 0x3a
 1503 008d 0B       		.uleb128 0xb
 1504 008e 3B       		.uleb128 0x3b
 1505 008f 0B       		.uleb128 0xb
 1506 0090 49       		.uleb128 0x49
 1507 0091 13       		.uleb128 0x13
 1508 0092 38       		.uleb128 0x38
 1509 0093 0B       		.uleb128 0xb
 1510 0094 00       		.byte	0
 1511 0095 00       		.byte	0
 1512 0096 0D       		.uleb128 0xd
 1513 0097 2E       		.uleb128 0x2e
 1514 0098 01       		.byte	0x1
 1515 0099 3F       		.uleb128 0x3f
 1516 009a 19       		.uleb128 0x19
 1517 009b 03       		.uleb128 0x3
 1518 009c 0E       		.uleb128 0xe
 1519 009d 3A       		.uleb128 0x3a
 1520 009e 0B       		.uleb128 0xb
 1521 009f 3B       		.uleb128 0x3b
 1522 00a0 0B       		.uleb128 0xb
 1523 00a1 27       		.uleb128 0x27
 1524 00a2 19       		.uleb128 0x19
 1525 00a3 49       		.uleb128 0x49
 1526 00a4 13       		.uleb128 0x13
 1527 00a5 8701     		.uleb128 0x87
 1528 00a7 19       		.uleb128 0x19
 1529 00a8 11       		.uleb128 0x11
 1530 00a9 01       		.uleb128 0x1
 1531 00aa 12       		.uleb128 0x12
 1532 00ab 06       		.uleb128 0x6
 1533 00ac 40       		.uleb128 0x40
 1534 00ad 18       		.uleb128 0x18
 1535 00ae 9742     		.uleb128 0x2117
 1536 00b0 19       		.uleb128 0x19
 1537 00b1 01       		.uleb128 0x1
 1538 00b2 13       		.uleb128 0x13
 1539 00b3 00       		.byte	0
 1540 00b4 00       		.byte	0
 1541 00b5 0E       		.uleb128 0xe
 1542 00b6 0B       		.uleb128 0xb
 1543 00b7 01       		.byte	0x1
 1544 00b8 11       		.uleb128 0x11
 1545 00b9 01       		.uleb128 0x1
 1546 00ba 12       		.uleb128 0x12
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 44


 1547 00bb 06       		.uleb128 0x6
 1548 00bc 01       		.uleb128 0x1
 1549 00bd 13       		.uleb128 0x13
 1550 00be 00       		.byte	0
 1551 00bf 00       		.byte	0
 1552 00c0 0F       		.uleb128 0xf
 1553 00c1 34       		.uleb128 0x34
 1554 00c2 00       		.byte	0
 1555 00c3 03       		.uleb128 0x3
 1556 00c4 0E       		.uleb128 0xe
 1557 00c5 3A       		.uleb128 0x3a
 1558 00c6 0B       		.uleb128 0xb
 1559 00c7 3B       		.uleb128 0x3b
 1560 00c8 05       		.uleb128 0x5
 1561 00c9 49       		.uleb128 0x49
 1562 00ca 13       		.uleb128 0x13
 1563 00cb 02       		.uleb128 0x2
 1564 00cc 18       		.uleb128 0x18
 1565 00cd 00       		.byte	0
 1566 00ce 00       		.byte	0
 1567 00cf 10       		.uleb128 0x10
 1568 00d0 34       		.uleb128 0x34
 1569 00d1 00       		.byte	0
 1570 00d2 03       		.uleb128 0x3
 1571 00d3 08       		.uleb128 0x8
 1572 00d4 3A       		.uleb128 0x3a
 1573 00d5 0B       		.uleb128 0xb
 1574 00d6 3B       		.uleb128 0x3b
 1575 00d7 05       		.uleb128 0x5
 1576 00d8 49       		.uleb128 0x49
 1577 00d9 13       		.uleb128 0x13
 1578 00da 02       		.uleb128 0x2
 1579 00db 17       		.uleb128 0x17
 1580 00dc 00       		.byte	0
 1581 00dd 00       		.byte	0
 1582 00de 11       		.uleb128 0x11
 1583 00df 898201   		.uleb128 0x4109
 1584 00e2 01       		.byte	0x1
 1585 00e3 11       		.uleb128 0x11
 1586 00e4 01       		.uleb128 0x1
 1587 00e5 31       		.uleb128 0x31
 1588 00e6 13       		.uleb128 0x13
 1589 00e7 01       		.uleb128 0x1
 1590 00e8 13       		.uleb128 0x13
 1591 00e9 00       		.byte	0
 1592 00ea 00       		.byte	0
 1593 00eb 12       		.uleb128 0x12
 1594 00ec 8A8201   		.uleb128 0x410a
 1595 00ef 00       		.byte	0
 1596 00f0 02       		.uleb128 0x2
 1597 00f1 18       		.uleb128 0x18
 1598 00f2 9142     		.uleb128 0x2111
 1599 00f4 18       		.uleb128 0x18
 1600 00f5 00       		.byte	0
 1601 00f6 00       		.byte	0
 1602 00f7 13       		.uleb128 0x13
 1603 00f8 898201   		.uleb128 0x4109
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 45


 1604 00fb 00       		.byte	0
 1605 00fc 11       		.uleb128 0x11
 1606 00fd 01       		.uleb128 0x1
 1607 00fe 31       		.uleb128 0x31
 1608 00ff 13       		.uleb128 0x13
 1609 0100 00       		.byte	0
 1610 0101 00       		.byte	0
 1611 0102 14       		.uleb128 0x14
 1612 0103 34       		.uleb128 0x34
 1613 0104 00       		.byte	0
 1614 0105 03       		.uleb128 0x3
 1615 0106 0E       		.uleb128 0xe
 1616 0107 3A       		.uleb128 0x3a
 1617 0108 0B       		.uleb128 0xb
 1618 0109 3B       		.uleb128 0x3b
 1619 010a 05       		.uleb128 0x5
 1620 010b 49       		.uleb128 0x49
 1621 010c 13       		.uleb128 0x13
 1622 010d 02       		.uleb128 0x2
 1623 010e 17       		.uleb128 0x17
 1624 010f 00       		.byte	0
 1625 0110 00       		.byte	0
 1626 0111 15       		.uleb128 0x15
 1627 0112 898201   		.uleb128 0x4109
 1628 0115 01       		.byte	0x1
 1629 0116 11       		.uleb128 0x11
 1630 0117 01       		.uleb128 0x1
 1631 0118 31       		.uleb128 0x31
 1632 0119 13       		.uleb128 0x13
 1633 011a 00       		.byte	0
 1634 011b 00       		.byte	0
 1635 011c 16       		.uleb128 0x16
 1636 011d 01       		.uleb128 0x1
 1637 011e 01       		.byte	0x1
 1638 011f 49       		.uleb128 0x49
 1639 0120 13       		.uleb128 0x13
 1640 0121 01       		.uleb128 0x1
 1641 0122 13       		.uleb128 0x13
 1642 0123 00       		.byte	0
 1643 0124 00       		.byte	0
 1644 0125 17       		.uleb128 0x17
 1645 0126 21       		.uleb128 0x21
 1646 0127 00       		.byte	0
 1647 0128 49       		.uleb128 0x49
 1648 0129 13       		.uleb128 0x13
 1649 012a 2F       		.uleb128 0x2f
 1650 012b 0B       		.uleb128 0xb
 1651 012c 00       		.byte	0
 1652 012d 00       		.byte	0
 1653 012e 18       		.uleb128 0x18
 1654 012f 2E       		.uleb128 0x2e
 1655 0130 00       		.byte	0
 1656 0131 3F       		.uleb128 0x3f
 1657 0132 19       		.uleb128 0x19
 1658 0133 03       		.uleb128 0x3
 1659 0134 0E       		.uleb128 0xe
 1660 0135 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 46


 1661 0136 0B       		.uleb128 0xb
 1662 0137 3B       		.uleb128 0x3b
 1663 0138 05       		.uleb128 0x5
 1664 0139 27       		.uleb128 0x27
 1665 013a 19       		.uleb128 0x19
 1666 013b 11       		.uleb128 0x11
 1667 013c 01       		.uleb128 0x1
 1668 013d 12       		.uleb128 0x12
 1669 013e 06       		.uleb128 0x6
 1670 013f 40       		.uleb128 0x40
 1671 0140 18       		.uleb128 0x18
 1672 0141 9742     		.uleb128 0x2117
 1673 0143 19       		.uleb128 0x19
 1674 0144 00       		.byte	0
 1675 0145 00       		.byte	0
 1676 0146 19       		.uleb128 0x19
 1677 0147 34       		.uleb128 0x34
 1678 0148 00       		.byte	0
 1679 0149 03       		.uleb128 0x3
 1680 014a 0E       		.uleb128 0xe
 1681 014b 3A       		.uleb128 0x3a
 1682 014c 0B       		.uleb128 0xb
 1683 014d 3B       		.uleb128 0x3b
 1684 014e 0B       		.uleb128 0xb
 1685 014f 49       		.uleb128 0x49
 1686 0150 13       		.uleb128 0x13
 1687 0151 3F       		.uleb128 0x3f
 1688 0152 19       		.uleb128 0x19
 1689 0153 02       		.uleb128 0x2
 1690 0154 18       		.uleb128 0x18
 1691 0155 00       		.byte	0
 1692 0156 00       		.byte	0
 1693 0157 1A       		.uleb128 0x1a
 1694 0158 2E       		.uleb128 0x2e
 1695 0159 00       		.byte	0
 1696 015a 3F       		.uleb128 0x3f
 1697 015b 19       		.uleb128 0x19
 1698 015c 3C       		.uleb128 0x3c
 1699 015d 19       		.uleb128 0x19
 1700 015e 6E       		.uleb128 0x6e
 1701 015f 0E       		.uleb128 0xe
 1702 0160 03       		.uleb128 0x3
 1703 0161 0E       		.uleb128 0xe
 1704 0162 3A       		.uleb128 0x3a
 1705 0163 0B       		.uleb128 0xb
 1706 0164 3B       		.uleb128 0x3b
 1707 0165 0B       		.uleb128 0xb
 1708 0166 00       		.byte	0
 1709 0167 00       		.byte	0
 1710 0168 1B       		.uleb128 0x1b
 1711 0169 2E       		.uleb128 0x2e
 1712 016a 00       		.byte	0
 1713 016b 3F       		.uleb128 0x3f
 1714 016c 19       		.uleb128 0x19
 1715 016d 3C       		.uleb128 0x3c
 1716 016e 19       		.uleb128 0x19
 1717 016f 6E       		.uleb128 0x6e
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 47


 1718 0170 0E       		.uleb128 0xe
 1719 0171 03       		.uleb128 0x3
 1720 0172 0E       		.uleb128 0xe
 1721 0173 00       		.byte	0
 1722 0174 00       		.byte	0
 1723 0175 1C       		.uleb128 0x1c
 1724 0176 2E       		.uleb128 0x2e
 1725 0177 00       		.byte	0
 1726 0178 3F       		.uleb128 0x3f
 1727 0179 19       		.uleb128 0x19
 1728 017a 3C       		.uleb128 0x3c
 1729 017b 19       		.uleb128 0x19
 1730 017c 6E       		.uleb128 0x6e
 1731 017d 0E       		.uleb128 0xe
 1732 017e 03       		.uleb128 0x3
 1733 017f 0E       		.uleb128 0xe
 1734 0180 3A       		.uleb128 0x3a
 1735 0181 0B       		.uleb128 0xb
 1736 0182 3B       		.uleb128 0x3b
 1737 0183 05       		.uleb128 0x5
 1738 0184 00       		.byte	0
 1739 0185 00       		.byte	0
 1740 0186 00       		.byte	0
 1741              		.section	.debug_loc,"",%progbits
 1742              	.Ldebug_loc0:
 1743              	.LLST0:
 1744 0000 3C000000 		.4byte	.LVL8
 1745 0004 40000000 		.4byte	.LVL9
 1746 0008 0200     		.2byte	0x2
 1747 000a 30       		.byte	0x30
 1748 000b 9F       		.byte	0x9f
 1749 000c 40000000 		.4byte	.LVL9
 1750 0010 46000000 		.4byte	.LVL10
 1751 0014 0100     		.2byte	0x1
 1752 0016 53       		.byte	0x53
 1753 0017 46000000 		.4byte	.LVL10
 1754 001b 48000000 		.4byte	.LVL11
 1755 001f 0700     		.2byte	0x7
 1756 0021 72       		.byte	0x72
 1757 0022 00       		.sleb128 0
 1758 0023 73       		.byte	0x73
 1759 0024 00       		.sleb128 0
 1760 0025 22       		.byte	0x22
 1761 0026 31       		.byte	0x31
 1762 0027 1C       		.byte	0x1c
 1763 0028 48000000 		.4byte	.LVL11
 1764 002c 55000000 		.4byte	.LVL12-1
 1765 0030 0100     		.2byte	0x1
 1766 0032 53       		.byte	0x53
 1767 0033 00000000 		.4byte	0
 1768 0037 00000000 		.4byte	0
 1769              	.LLST1:
 1770 003b 98000000 		.4byte	.LVL22
 1771 003f 9C000000 		.4byte	.LVL23
 1772 0043 0400     		.2byte	0x4
 1773 0045 91       		.byte	0x91
 1774 0046 F07D     		.sleb128 -272
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 48


 1775 0048 9F       		.byte	0x9f
 1776 0049 9C000000 		.4byte	.LVL23
 1777 004d 9F000000 		.4byte	.LVL24-1
 1778 0051 0100     		.2byte	0x1
 1779 0053 50       		.byte	0x50
 1780 0054 9F000000 		.4byte	.LVL24-1
 1781 0058 A6000000 		.4byte	.LVL26
 1782 005c 0400     		.2byte	0x4
 1783 005e 91       		.byte	0x91
 1784 005f F07D     		.sleb128 -272
 1785 0061 9F       		.byte	0x9f
 1786 0062 A6000000 		.4byte	.LVL26
 1787 0066 64010000 		.4byte	.LFE36
 1788 006a 0100     		.2byte	0x1
 1789 006c 55       		.byte	0x55
 1790 006d 00000000 		.4byte	0
 1791 0071 00000000 		.4byte	0
 1792              	.LLST2:
 1793 0075 0E010000 		.4byte	.LVL37
 1794 0079 15010000 		.4byte	.LVL38-1
 1795 007d 0100     		.2byte	0x1
 1796 007f 50       		.byte	0x50
 1797 0080 00000000 		.4byte	0
 1798 0084 00000000 		.4byte	0
 1799              		.section	.debug_aranges,"",%progbits
 1800 0000 2C000000 		.4byte	0x2c
 1801 0004 0200     		.2byte	0x2
 1802 0006 00000000 		.4byte	.Ldebug_info0
 1803 000a 04       		.byte	0x4
 1804 000b 00       		.byte	0
 1805 000c 0000     		.2byte	0
 1806 000e 0000     		.2byte	0
 1807 0010 00000000 		.4byte	.LFB36
 1808 0014 64010000 		.4byte	.LFE36-.LFB36
 1809 0018 00000000 		.4byte	.LFB37
 1810 001c 18000000 		.4byte	.LFE37-.LFB37
 1811 0020 00000000 		.4byte	.LFB38
 1812 0024 18000000 		.4byte	.LFE38-.LFB38
 1813 0028 00000000 		.4byte	0
 1814 002c 00000000 		.4byte	0
 1815              		.section	.debug_ranges,"",%progbits
 1816              	.Ldebug_ranges0:
 1817 0000 00000000 		.4byte	.LFB36
 1818 0004 64010000 		.4byte	.LFE36
 1819 0008 00000000 		.4byte	.LFB37
 1820 000c 18000000 		.4byte	.LFE37
 1821 0010 00000000 		.4byte	.LFB38
 1822 0014 18000000 		.4byte	.LFE38
 1823 0018 00000000 		.4byte	0
 1824 001c 00000000 		.4byte	0
 1825              		.section	.debug_line,"",%progbits
 1826              	.Ldebug_line0:
 1827 0000 38020000 		.section	.debug_str,"MS",%progbits,1
 1827      0200C401 
 1827      00000201 
 1827      FB0E0D00 
 1827      01010101 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 49


 1828              	.LASF42:
 1829 0000 7061796C 		.ascii	"payloadMax\000"
 1829      6F61644D 
 1829      617800
 1830              	.LASF54:
 1831 000b 7061636B 		.ascii	"packets_BUFFER_FULL_S\000"
 1831      6574735F 
 1831      42554646 
 1831      45525F46 
 1831      554C4C5F 
 1832              	.LASF74:
 1833 0021 55415254 		.ascii	"UART_USB_UartGetChar\000"
 1833      5F555342 
 1833      5F556172 
 1833      74476574 
 1833      43686172 
 1834              	.LASF52:
 1835 0036 73656E64 		.ascii	"send\000"
 1835      00
 1836              	.LASF2:
 1837 003b 73686F72 		.ascii	"short int\000"
 1837      7420696E 
 1837      7400
 1838              	.LASF24:
 1839 0045 7061636B 		.ascii	"packets_BUFFER_RECEIVE_WAIT_FOR_START\000"
 1839      6574735F 
 1839      42554646 
 1839      45525F52 
 1839      45434549 
 1840              	.LASF22:
 1841 006b 73697A65 		.ascii	"sizetype\000"
 1841      74797065 
 1841      00
 1842              	.LASF51:
 1843 0074 7061636B 		.ascii	"packets_BUFFER_RECEIVE_S\000"
 1843      6574735F 
 1843      42554646 
 1843      45525F52 
 1843      45434549 
 1844              	.LASF85:
 1845 008d 6D61696E 		.ascii	"main\000"
 1845      00
 1846              	.LASF43:
 1847 0092 7061796C 		.ascii	"payloadLen\000"
 1847      6F61644C 
 1847      656E00
 1848              	.LASF81:
 1849 009d 74657374 		.ascii	"testRunner_printResults\000"
 1849      52756E6E 
 1849      65725F70 
 1849      72696E74 
 1849      52657375 
 1850              	.LASF4:
 1851 00b5 5F5F7569 		.ascii	"__uint16_t\000"
 1851      6E743136 
 1851      5F7400
 1852              	.LASF73:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 50


 1853 00c0 7061636B 		.ascii	"packets_destoryBuffers\000"
 1853      6574735F 
 1853      64657374 
 1853      6F727942 
 1853      75666665 
 1854              	.LASF72:
 1855 00d7 6D656D63 		.ascii	"memcpy\000"
 1855      707900
 1856              	.LASF26:
 1857 00de 7061636B 		.ascii	"packets_BUFFER_RECEIVE_PAYLOAD\000"
 1857      6574735F 
 1857      42554646 
 1857      45525F52 
 1857      45434549 
 1858              	.LASF49:
 1859 00fd 62756666 		.ascii	"bufferState\000"
 1859      65725374 
 1859      61746500 
 1860              	.LASF82:
 1861 0109 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1861      43313120 
 1861      352E342E 
 1861      31203230 
 1861      31363036 
 1862 013c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1862      20726576 
 1862      6973696F 
 1862      6E203233 
 1862      37373135 
 1863 016f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1863      66756E63 
 1863      74696F6E 
 1863      2D736563 
 1863      74696F6E 
 1864              	.LASF12:
 1865 0197 75696E74 		.ascii	"uint8_t\000"
 1865      385F7400 
 1866              	.LASF15:
 1867 019f 75696E74 		.ascii	"uint8\000"
 1867      3800
 1868              	.LASF50:
 1869 01a5 7061636B 		.ascii	"packets_BUFFER_SEND_S\000"
 1869      6574735F 
 1869      42554646 
 1869      45525F53 
 1869      454E445F 
 1870              	.LASF47:
 1871 01bb 7061636B 		.ascii	"packet\000"
 1871      657400
 1872              	.LASF39:
 1873 01c2 7061636B 		.ascii	"packets_BUFFER_PROCESS_S\000"
 1873      6574735F 
 1873      42554646 
 1873      45525F50 
 1873      524F4345 
 1874              	.LASF60:
 1875 01db 4953525F 		.ascii	"ISR_usbUart\000"
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 51


 1875      75736255 
 1875      61727400 
 1876              	.LASF28:
 1877 01e7 7061636B 		.ascii	"packets_BUFFER_RECEIVE_COMPLETE\000"
 1877      6574735F 
 1877      42554646 
 1877      45525F52 
 1877      45434549 
 1878              	.LASF17:
 1879 0207 666C6F61 		.ascii	"float\000"
 1879      7400
 1880              	.LASF32:
 1881 020d 7061636B 		.ascii	"packets_BUFFER_SEND_QUEUEING\000"
 1881      6574735F 
 1881      42554646 
 1881      45525F53 
 1881      454E445F 
 1882              	.LASF9:
 1883 022a 6C6F6E67 		.ascii	"long long int\000"
 1883      206C6F6E 
 1883      6720696E 
 1883      7400
 1884              	.LASF71:
 1885 0238 6D656D73 		.ascii	"memset\000"
 1885      657400
 1886              	.LASF46:
 1887 023f 7061636B 		.ascii	"packets_PACKET_S\000"
 1887      6574735F 
 1887      5041434B 
 1887      45545F53 
 1887      00
 1888              	.LASF6:
 1889 0250 6C6F6E67 		.ascii	"long int\000"
 1889      20696E74 
 1889      00
 1890              	.LASF67:
 1891 0259 74657374 		.ascii	"testRunner_run\000"
 1891      52756E6E 
 1891      65725F72 
 1891      756E00
 1892              	.LASF84:
 1893 0268 433A5C55 		.ascii	"C:\\Users\\ccheney\\Dropbox (MIT)\\MICA\\Creator\\l"
 1893      73657273 
 1893      5C636368 
 1893      656E6579 
 1893      5C44726F 
 1894 0295 69627261 		.ascii	"ibraries\\micaComponents_testing\\packetTesting_v1_"
 1894      72696573 
 1894      5C6D6963 
 1894      61436F6D 
 1894      706F6E65 
 1895 02c6 342E6379 		.ascii	"4.cydsn\000"
 1895      64736E00 
 1896              	.LASF65:
 1897 02ce 75736255 		.ascii	"usbUart_print\000"
 1897      6172745F 
 1897      7072696E 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 52


 1897      7400
 1898              	.LASF3:
 1899 02dc 5F5F7569 		.ascii	"__uint8_t\000"
 1899      6E74385F 
 1899      7400
 1900              	.LASF76:
 1901 02e6 74657374 		.ascii	"testRunner_setPrintFunction\000"
 1901      52756E6E 
 1901      65725F73 
 1901      65745072 
 1901      696E7446 
 1902              	.LASF38:
 1903 0302 74696D65 		.ascii	"timeCount\000"
 1903      436F756E 
 1903      7400
 1904              	.LASF21:
 1905 030c 6C6F6E67 		.ascii	"long double\000"
 1905      20646F75 
 1905      626C6500 
 1906              	.LASF59:
 1907 0318 4953525F 		.ascii	"ISR_imuUart\000"
 1907      696D7555 
 1907      61727400 
 1908              	.LASF1:
 1909 0324 756E7369 		.ascii	"unsigned char\000"
 1909      676E6564 
 1909      20636861 
 1909      7200
 1910              	.LASF31:
 1911 0332 7061636B 		.ascii	"packets_BUFFER_SEND_READY\000"
 1911      6574735F 
 1911      42554646 
 1911      45525F53 
 1911      454E445F 
 1912              	.LASF27:
 1913 034c 7061636B 		.ascii	"packets_BUFFER_RECEIVE_FOOTER\000"
 1913      6574735F 
 1913      42554646 
 1913      45525F52 
 1913      45434549 
 1914              	.LASF0:
 1915 036a 7369676E 		.ascii	"signed char\000"
 1915      65642063 
 1915      68617200 
 1916              	.LASF44:
 1917 0376 666C6167 		.ascii	"flags\000"
 1917      7300
 1918              	.LASF10:
 1919 037c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1919      206C6F6E 
 1919      6720756E 
 1919      7369676E 
 1919      65642069 
 1920              	.LASF14:
 1921 0393 75696E74 		.ascii	"uint32_t\000"
 1921      33325F74 
 1921      00
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 53


 1922              	.LASF11:
 1923 039c 756E7369 		.ascii	"unsigned int\000"
 1923      676E6564 
 1923      20696E74 
 1923      00
 1924              	.LASF36:
 1925 03a9 62756666 		.ascii	"bufferLen\000"
 1925      65724C65 
 1925      6E00
 1926              	.LASF13:
 1927 03b3 75696E74 		.ascii	"uint16_t\000"
 1927      31365F74 
 1927      00
 1928              	.LASF20:
 1929 03bc 72656733 		.ascii	"reg32\000"
 1929      3200
 1930              	.LASF69:
 1931 03c2 7061636B 		.ascii	"packets_generateBuffers\000"
 1931      6574735F 
 1931      67656E65 
 1931      72617465 
 1931      42756666 
 1932              	.LASF56:
 1933 03da 7061636B 		.ascii	"packetBuffer\000"
 1933      65744275 
 1933      66666572 
 1933      00
 1934              	.LASF48:
 1935 03e7 70726F63 		.ascii	"processBuffer\000"
 1935      65737342 
 1935      75666665 
 1935      7200
 1936              	.LASF19:
 1937 03f5 63686172 		.ascii	"char\000"
 1937      00
 1938              	.LASF29:
 1939 03fa 7061636B 		.ascii	"packets_BUFFER_STATE_RECEIVE_T\000"
 1939      6574735F 
 1939      42554646 
 1939      45525F53 
 1939      54415445 
 1940              	.LASF40:
 1941 0419 6D6F6475 		.ascii	"moduleId\000"
 1941      6C654964 
 1941      00
 1942              	.LASF80:
 1943 0422 75736255 		.ascii	"usbUart_printHeader\000"
 1943      6172745F 
 1943      7072696E 
 1943      74486561 
 1943      64657200 
 1944              	.LASF5:
 1945 0436 73686F72 		.ascii	"short unsigned int\000"
 1945      7420756E 
 1945      7369676E 
 1945      65642069 
 1945      6E7400
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 54


 1946              	.LASF23:
 1947 0449 5F426F6F 		.ascii	"_Bool\000"
 1947      6C00
 1948              	.LASF70:
 1949 044f 74657374 		.ascii	"test_selfPacketParsing\000"
 1949      5F73656C 
 1949      66506163 
 1949      6B657450 
 1949      61727369 
 1950              	.LASF55:
 1951 0466 64617461 		.ascii	"data\000"
 1951      00
 1952              	.LASF25:
 1953 046b 7061636B 		.ascii	"packets_BUFFER_RECEIVE_HEADER\000"
 1953      6574735F 
 1953      42554646 
 1953      45525F52 
 1953      45434549 
 1954              	.LASF68:
 1955 0489 7061636B 		.ascii	"packets_initialize\000"
 1955      6574735F 
 1955      696E6974 
 1955      69616C69 
 1955      7A6500
 1956              	.LASF35:
 1957 049c 62756666 		.ascii	"buffer\000"
 1957      657200
 1958              	.LASF66:
 1959 04a3 74657374 		.ascii	"test_uartSelf\000"
 1959      5F756172 
 1959      7453656C 
 1959      6600
 1960              	.LASF75:
 1961 04b1 4379536F 		.ascii	"CySoftwareReset\000"
 1961      66747761 
 1961      72655265 
 1961      73657400 
 1962              	.LASF16:
 1963 04c1 75696E74 		.ascii	"uint32\000"
 1963      333200
 1964              	.LASF83:
 1965 04c8 6D61696E 		.ascii	"main.c\000"
 1965      2E6300
 1966              	.LASF8:
 1967 04cf 6C6F6E67 		.ascii	"long unsigned int\000"
 1967      20756E73 
 1967      69676E65 
 1967      6420696E 
 1967      7400
 1968              	.LASF79:
 1969 04e1 4C454453 		.ascii	"LEDS_Write\000"
 1969      5F577269 
 1969      746500
 1970              	.LASF53:
 1971 04ec 72656365 		.ascii	"receive\000"
 1971      69766500 
 1972              	.LASF7:
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 55


 1973 04f4 5F5F7569 		.ascii	"__uint32_t\000"
 1973      6E743332 
 1973      5F7400
 1974              	.LASF30:
 1975 04ff 7061636B 		.ascii	"packets_BUFFER_SEND_WAIT\000"
 1975      6574735F 
 1975      42554646 
 1975      45525F53 
 1975      454E445F 
 1976              	.LASF78:
 1977 0518 55415254 		.ascii	"UART_IMU_Start\000"
 1977      5F494D55 
 1977      5F537461 
 1977      727400
 1978              	.LASF33:
 1979 0527 7061636B 		.ascii	"packets_BUFFER_SEND_COMPLETE\000"
 1979      6574735F 
 1979      42554646 
 1979      45525F53 
 1979      454E445F 
 1980              	.LASF57:
 1981 0544 74785061 		.ascii	"txPacket\000"
 1981      636B6574 
 1981      00
 1982              	.LASF58:
 1983 054d 75736244 		.ascii	"usbData\000"
 1983      61746100 
 1984              	.LASF34:
 1985 0555 7061636B 		.ascii	"packets_BUFFER_STATE_SEND_T\000"
 1985      6574735F 
 1985      42554646 
 1985      45525F53 
 1985      54415445 
 1986              	.LASF64:
 1987 0571 69737245 		.ascii	"isrErr\000"
 1987      727200
 1988              	.LASF62:
 1989 0578 666C6167 		.ascii	"flag_pendingUsbByte\000"
 1989      5F70656E 
 1989      64696E67 
 1989      55736242 
 1989      79746500 
 1990              	.LASF37:
 1991 058c 62756666 		.ascii	"bufferIndex\000"
 1991      6572496E 
 1991      64657800 
 1992              	.LASF45:
 1993 0598 6572726F 		.ascii	"error\000"
 1993      7200
 1994              	.LASF18:
 1995 059e 646F7562 		.ascii	"double\000"
 1995      6C6500
 1996              	.LASF61:
 1997 05a5 666C6167 		.ascii	"flag_pendingRxByte\000"
 1997      5F70656E 
 1997      64696E67 
 1997      52784279 
ARM GAS  C:\Users\ccheney\AppData\Local\Temp\cc3QIFu1.s 			page 56


 1997      746500
 1998              	.LASF63:
 1999 05b8 74696D65 		.ascii	"timerExpired\000"
 1999      72457870 
 1999      69726564 
 1999      00
 2000              	.LASF41:
 2001 05c5 7061796C 		.ascii	"payload\000"
 2001      6F616400 
 2002              	.LASF77:
 2003 05cd 55415254 		.ascii	"UART_USB_Start\000"
 2003      5F555342 
 2003      5F537461 
 2003      727400
 2004              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
